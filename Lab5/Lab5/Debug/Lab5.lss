
Lab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000036  00800100  00000d9c  00000e10  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d9c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000e46  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ea4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000ee4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c04  00000000  00000000  00000f54  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000826  00000000  00000000  00001b58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000456  00000000  00000000  0000237e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001a0  00000000  00000000  000027d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000483  00000000  00000000  00002974  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000054f  00000000  00000000  00002df7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00003346  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e9       	ldi	r30, 0x9C	; 156
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 33       	cpi	r26, 0x36	; 54
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 75 01 	call	0x2ea	; 0x2ea <main>
  8e:	0c 94 cc 06 	jmp	0xd98	; 0xd98 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <usart_tx>:
	clock_t start_time = clock();
	
	// looping till required time is not achieved
	while (clock() < start_time + milli_seconds)
	;
}
  96:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  9a:	95 ff       	sbrs	r25, 5
  9c:	fc cf       	rjmp	.-8      	; 0x96 <usart_tx>
  9e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  a2:	08 95       	ret

000000a4 <print>:
  a4:	0f 93       	push	r16
  a6:	1f 93       	push	r17
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
  ac:	8c 01       	movw	r16, r24
  ae:	c0 e0       	ldi	r28, 0x00	; 0
  b0:	d0 e0       	ldi	r29, 0x00	; 0
  b2:	07 c0       	rjmp	.+14     	; 0xc2 <print+0x1e>
  b4:	f8 01       	movw	r30, r16
  b6:	ec 0f       	add	r30, r28
  b8:	fd 1f       	adc	r31, r29
  ba:	80 81       	ld	r24, Z
  bc:	0e 94 4b 00 	call	0x96	; 0x96 <usart_tx>
  c0:	21 96       	adiw	r28, 0x01	; 1
  c2:	f8 01       	movw	r30, r16
  c4:	01 90       	ld	r0, Z+
  c6:	00 20       	and	r0, r0
  c8:	e9 f7       	brne	.-6      	; 0xc4 <print+0x20>
  ca:	31 97       	sbiw	r30, 0x01	; 1
  cc:	e0 1b       	sub	r30, r16
  ce:	f1 0b       	sbc	r31, r17
  d0:	ce 17       	cp	r28, r30
  d2:	df 07       	cpc	r29, r31
  d4:	78 f3       	brcs	.-34     	; 0xb4 <print+0x10>
  d6:	df 91       	pop	r29
  d8:	cf 91       	pop	r28
  da:	1f 91       	pop	r17
  dc:	0f 91       	pop	r16
  de:	08 95       	ret

000000e0 <usart_init>:
  e0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  e4:	87 e6       	ldi	r24, 0x67	; 103
  e6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  ea:	e2 ec       	ldi	r30, 0xC2	; 194
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	86 60       	ori	r24, 0x06	; 6
  f2:	80 83       	st	Z, r24
  f4:	e1 ec       	ldi	r30, 0xC1	; 193
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	88 61       	ori	r24, 0x18	; 24
  fc:	80 83       	st	Z, r24
  fe:	08 95       	ret

00000100 <adc_read>:
 100:	ea e7       	ldi	r30, 0x7A	; 122
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	80 64       	ori	r24, 0x40	; 64
 108:	80 83       	st	Z, r24
 10a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 10e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 112:	08 95       	ret

00000114 <usart_rx>:
 114:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 118:	88 23       	and	r24, r24
 11a:	e4 f7       	brge	.-8      	; 0x114 <usart_rx>
 11c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	08 95       	ret

00000124 <adc_init>:
 124:	ec e7       	ldi	r30, 0x7C	; 124
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	80 81       	ld	r24, Z
 12a:	81 64       	ori	r24, 0x41	; 65
 12c:	80 83       	st	Z, r24
 12e:	ea e7       	ldi	r30, 0x7A	; 122
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	80 81       	ld	r24, Z
 134:	87 6c       	ori	r24, 0xC7	; 199
 136:	80 83       	st	Z, r24
 138:	08 95       	ret

0000013a <adc_get_double>:
 13a:	0e 94 80 00 	call	0x100	; 0x100 <adc_read>
 13e:	bc 01       	movw	r22, r24
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	0e 94 8c 02 	call	0x518	; 0x518 <__floatunsisf>
 148:	20 e0       	ldi	r18, 0x00	; 0
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	40 ea       	ldi	r20, 0xA0	; 160
 14e:	50 e4       	ldi	r21, 0x40	; 64
 150:	0e 94 1a 03 	call	0x634	; 0x634 <__mulsf3>
 154:	20 e0       	ldi	r18, 0x00	; 0
 156:	30 e0       	ldi	r19, 0x00	; 0
 158:	40 e8       	ldi	r20, 0x80	; 128
 15a:	5a e3       	ldi	r21, 0x3A	; 58
 15c:	0e 94 1a 03 	call	0x634	; 0x634 <__mulsf3>
 160:	08 95       	ret

00000162 <measure_multiple>:

/////////////////////////
// Function: measure_multiple
// Purpose: execute multiple measurements following M command
/////////////////////////
void measure_multiple(int n, int dt){
 162:	2f 92       	push	r2
 164:	3f 92       	push	r3
 166:	4f 92       	push	r4
 168:	5f 92       	push	r5
 16a:	6f 92       	push	r6
 16c:	7f 92       	push	r7
 16e:	8f 92       	push	r8
 170:	9f 92       	push	r9
 172:	af 92       	push	r10
 174:	bf 92       	push	r11
 176:	cf 92       	push	r12
 178:	df 92       	push	r13
 17a:	ef 92       	push	r14
 17c:	ff 92       	push	r15
 17e:	0f 93       	push	r16
 180:	1f 93       	push	r17
 182:	cf 93       	push	r28
 184:	df 93       	push	r29
 186:	00 d0       	rcall	.+0      	; 0x188 <measure_multiple+0x26>
 188:	00 d0       	rcall	.+0      	; 0x18a <measure_multiple+0x28>
 18a:	1f 92       	push	r1
 18c:	cd b7       	in	r28, 0x3d	; 61
 18e:	de b7       	in	r29, 0x3e	; 62
 190:	6c 01       	movw	r12, r24
 192:	1b 01       	movw	r2, r22
	char out[5];
	int dt_out = dt;
 194:	7b 01       	movw	r14, r22
	while (n > 0){
 196:	51 c0       	rjmp	.+162    	; 0x23a <measure_multiple+0xd8>
		print("t = ");
 198:	80 e0       	ldi	r24, 0x00	; 0
 19a:	91 e0       	ldi	r25, 0x01	; 1
 19c:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		sprintf(out,"%i",dt_out);
 1a0:	ff 92       	push	r15
 1a2:	ef 92       	push	r14
 1a4:	85 e0       	ldi	r24, 0x05	; 5
 1a6:	91 e0       	ldi	r25, 0x01	; 1
 1a8:	9f 93       	push	r25
 1aa:	8f 93       	push	r24
 1ac:	8e 01       	movw	r16, r28
 1ae:	0f 5f       	subi	r16, 0xFF	; 255
 1b0:	1f 4f       	sbci	r17, 0xFF	; 255
 1b2:	1f 93       	push	r17
 1b4:	0f 93       	push	r16
 1b6:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <sprintf>
		print(out);
 1ba:	c8 01       	movw	r24, r16
 1bc:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		print(" s, V = ");
 1c0:	88 e0       	ldi	r24, 0x08	; 8
 1c2:	91 e0       	ldi	r25, 0x01	; 1
 1c4:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		double v = adc_get_double();
 1c8:	0e 94 9d 00 	call	0x13a	; 0x13a <adc_get_double>
 1cc:	2b 01       	movw	r4, r22
 1ce:	3c 01       	movw	r6, r24
		sprintf(out,"%d.%02u", (int) v, (int) ((v - (int) v ) * 100) );
 1d0:	0e 94 56 02 	call	0x4ac	; 0x4ac <__fixsfsi>
 1d4:	4b 01       	movw	r8, r22
 1d6:	5c 01       	movw	r10, r24
 1d8:	07 2e       	mov	r0, r23
 1da:	00 0c       	add	r0, r0
 1dc:	88 0b       	sbc	r24, r24
 1de:	99 0b       	sbc	r25, r25
 1e0:	0e 94 8e 02 	call	0x51c	; 0x51c <__floatsisf>
 1e4:	9b 01       	movw	r18, r22
 1e6:	ac 01       	movw	r20, r24
 1e8:	c3 01       	movw	r24, r6
 1ea:	b2 01       	movw	r22, r4
 1ec:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__subsf3>
 1f0:	20 e0       	ldi	r18, 0x00	; 0
 1f2:	30 e0       	ldi	r19, 0x00	; 0
 1f4:	48 ec       	ldi	r20, 0xC8	; 200
 1f6:	52 e4       	ldi	r21, 0x42	; 66
 1f8:	0e 94 1a 03 	call	0x634	; 0x634 <__mulsf3>
 1fc:	0e 94 56 02 	call	0x4ac	; 0x4ac <__fixsfsi>
 200:	7f 93       	push	r23
 202:	6f 93       	push	r22
 204:	9f 92       	push	r9
 206:	8f 92       	push	r8
 208:	81 e1       	ldi	r24, 0x11	; 17
 20a:	91 e0       	ldi	r25, 0x01	; 1
 20c:	9f 93       	push	r25
 20e:	8f 93       	push	r24
 210:	1f 93       	push	r17
 212:	0f 93       	push	r16
 214:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <sprintf>
		print(out);
 218:	c8 01       	movw	r24, r16
 21a:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		print("V\n");
 21e:	89 e1       	ldi	r24, 0x19	; 25
 220:	91 e0       	ldi	r25, 0x01	; 1
 222:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		
		n = n - 1;
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	c8 1a       	sub	r12, r24
 22a:	d1 08       	sbc	r13, r1
		dt_out = dt_out + dt;
 22c:	e2 0c       	add	r14, r2
 22e:	f3 1c       	adc	r15, r3
 230:	0f b6       	in	r0, 0x3f	; 63
 232:	f8 94       	cli
 234:	de bf       	out	0x3e, r29	; 62
 236:	0f be       	out	0x3f, r0	; 63
 238:	cd bf       	out	0x3d, r28	; 61
// Purpose: execute multiple measurements following M command
/////////////////////////
void measure_multiple(int n, int dt){
	char out[5];
	int dt_out = dt;
	while (n > 0){
 23a:	1c 14       	cp	r1, r12
 23c:	1d 04       	cpc	r1, r13
 23e:	0c f4       	brge	.+2      	; 0x242 <measure_multiple+0xe0>
 240:	ab cf       	rjmp	.-170    	; 0x198 <measure_multiple+0x36>
		n = n - 1;
		dt_out = dt_out + dt;
		//delay(dt);  TODO: figure out why this is throwing an error
		
	}
}
 242:	0f 90       	pop	r0
 244:	0f 90       	pop	r0
 246:	0f 90       	pop	r0
 248:	0f 90       	pop	r0
 24a:	0f 90       	pop	r0
 24c:	df 91       	pop	r29
 24e:	cf 91       	pop	r28
 250:	1f 91       	pop	r17
 252:	0f 91       	pop	r16
 254:	ff 90       	pop	r15
 256:	ef 90       	pop	r14
 258:	df 90       	pop	r13
 25a:	cf 90       	pop	r12
 25c:	bf 90       	pop	r11
 25e:	af 90       	pop	r10
 260:	9f 90       	pop	r9
 262:	8f 90       	pop	r8
 264:	7f 90       	pop	r7
 266:	6f 90       	pop	r6
 268:	5f 90       	pop	r5
 26a:	4f 90       	pop	r4
 26c:	3f 90       	pop	r3
 26e:	2f 90       	pop	r2
 270:	08 95       	ret

00000272 <get_string>:

////////////////////////
// Function: get_string
// Purpose: gets string from serial monitor
///////////////
const char* get_string(char input_str[]){
 272:	cf 92       	push	r12
 274:	df 92       	push	r13
 276:	ef 92       	push	r14
 278:	ff 92       	push	r15
 27a:	0f 93       	push	r16
 27c:	1f 93       	push	r17
 27e:	cf 93       	push	r28
 280:	df 93       	push	r29
 282:	cd b7       	in	r28, 0x3d	; 61
 284:	de b7       	in	r29, 0x3e	; 62
 286:	2a 97       	sbiw	r28, 0x0a	; 10
 288:	0f b6       	in	r0, 0x3f	; 63
 28a:	f8 94       	cli
 28c:	de bf       	out	0x3e, r29	; 62
 28e:	0f be       	out	0x3f, r0	; 63
 290:	cd bf       	out	0x3d, r28	; 61
 292:	6c 01       	movw	r12, r24
	char buffer[10];
	uint16_t input = usart_rx();
 294:	0e 94 8a 00 	call	0x114	; 0x114 <usart_rx>
	
	int i = 0;
 298:	00 e0       	ldi	r16, 0x00	; 0
 29a:	10 e0       	ldi	r17, 0x00	; 0
	while (input != 10){
 29c:	13 c0       	rjmp	.+38     	; 0x2c4 <get_string+0x52>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 29e:	4a e0       	ldi	r20, 0x0A	; 10
 2a0:	be 01       	movw	r22, r28
 2a2:	6f 5f       	subi	r22, 0xFF	; 255
 2a4:	7f 4f       	sbci	r23, 0xFF	; 255
 2a6:	0e 94 a5 03 	call	0x74a	; 0x74a <__itoa_ncheck>
		itoa(input, buffer, 10);
		//print(buffer);
		input_str[i] = atoi(buffer);
 2aa:	76 01       	movw	r14, r12
 2ac:	e0 0e       	add	r14, r16
 2ae:	f1 1e       	adc	r15, r17
 2b0:	ce 01       	movw	r24, r28
 2b2:	01 96       	adiw	r24, 0x01	; 1
 2b4:	0e 94 87 03 	call	0x70e	; 0x70e <atoi>
 2b8:	f7 01       	movw	r30, r14
 2ba:	80 83       	st	Z, r24
		i = i + 1;
 2bc:	0f 5f       	subi	r16, 0xFF	; 255
 2be:	1f 4f       	sbci	r17, 0xFF	; 255
		input = usart_rx();
 2c0:	0e 94 8a 00 	call	0x114	; 0x114 <usart_rx>
const char* get_string(char input_str[]){
	char buffer[10];
	uint16_t input = usart_rx();
	
	int i = 0;
	while (input != 10){
 2c4:	8a 30       	cpi	r24, 0x0A	; 10
 2c6:	91 05       	cpc	r25, r1
 2c8:	51 f7       	brne	.-44     	; 0x29e <get_string+0x2c>
		i = i + 1;
		input = usart_rx();
	}
	
	return input_str;
}
 2ca:	c6 01       	movw	r24, r12
 2cc:	2a 96       	adiw	r28, 0x0a	; 10
 2ce:	0f b6       	in	r0, 0x3f	; 63
 2d0:	f8 94       	cli
 2d2:	de bf       	out	0x3e, r29	; 62
 2d4:	0f be       	out	0x3f, r0	; 63
 2d6:	cd bf       	out	0x3d, r28	; 61
 2d8:	df 91       	pop	r29
 2da:	cf 91       	pop	r28
 2dc:	1f 91       	pop	r17
 2de:	0f 91       	pop	r16
 2e0:	ff 90       	pop	r15
 2e2:	ef 90       	pop	r14
 2e4:	df 90       	pop	r13
 2e6:	cf 90       	pop	r12
 2e8:	08 95       	ret

000002ea <main>:
//
// Purpose: Drives the program
//
////////////////////////////////////////////////////////////////////
int main(void)
{	
 2ea:	cf 93       	push	r28
 2ec:	df 93       	push	r29
 2ee:	cd b7       	in	r28, 0x3d	; 61
 2f0:	de b7       	in	r29, 0x3e	; 62
 2f2:	6e 97       	sbiw	r28, 0x1e	; 30
 2f4:	0f b6       	in	r0, 0x3f	; 63
 2f6:	f8 94       	cli
 2f8:	de bf       	out	0x3e, r29	; 62
 2fa:	0f be       	out	0x3f, r0	; 63
 2fc:	cd bf       	out	0x3d, r28	; 61
	// Initializations
	usart_init();    
 2fe:	0e 94 70 00 	call	0xe0	; 0xe0 <usart_init>
	adc_init();
 302:	0e 94 92 00 	call	0x124	; 0x124 <adc_init>

	// main loop
    while (1)
    {	
		char input_str[10] = {};
 306:	8e 01       	movw	r16, r28
 308:	0b 5e       	subi	r16, 0xEB	; 235
 30a:	1f 4f       	sbci	r17, 0xFF	; 255
 30c:	8a e0       	ldi	r24, 0x0A	; 10
 30e:	f8 01       	movw	r30, r16
 310:	11 92       	st	Z+, r1
 312:	8a 95       	dec	r24
 314:	e9 f7       	brne	.-6      	; 0x310 <main+0x26>
		char output_str[20];
		get_string(input_str);
 316:	c8 01       	movw	r24, r16
 318:	0e 94 39 01 	call	0x272	; 0x272 <get_string>
		
		print("input_str: ");
 31c:	8c e1       	ldi	r24, 0x1C	; 28
 31e:	91 e0       	ldi	r25, 0x01	; 1
 320:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		print(input_str);
 324:	c8 01       	movw	r24, r16
 326:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		print("\n");
 32a:	8a e1       	ldi	r24, 0x1A	; 26
 32c:	91 e0       	ldi	r25, 0x01	; 1
 32e:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
	
		
		if (input_str[0] == 71){ // G
 332:	8d 89       	ldd	r24, Y+21	; 0x15
 334:	87 34       	cpi	r24, 0x47	; 71
 336:	91 f5       	brne	.+100    	; 0x39c <main+0xb2>
			double v = adc_get_double();
 338:	0e 94 9d 00 	call	0x13a	; 0x13a <adc_get_double>
 33c:	4b 01       	movw	r8, r22
 33e:	5c 01       	movw	r10, r24
			//print("G");
			sprintf(output_str,"V = %d.%02u V", (int) v, (int) ((v - (int) v ) * 100) );
 340:	0e 94 56 02 	call	0x4ac	; 0x4ac <__fixsfsi>
 344:	6b 01       	movw	r12, r22
 346:	7c 01       	movw	r14, r24
 348:	07 2e       	mov	r0, r23
 34a:	00 0c       	add	r0, r0
 34c:	88 0b       	sbc	r24, r24
 34e:	99 0b       	sbc	r25, r25
 350:	0e 94 8e 02 	call	0x51c	; 0x51c <__floatsisf>
 354:	9b 01       	movw	r18, r22
 356:	ac 01       	movw	r20, r24
 358:	c5 01       	movw	r24, r10
 35a:	b4 01       	movw	r22, r8
 35c:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__subsf3>
 360:	20 e0       	ldi	r18, 0x00	; 0
 362:	30 e0       	ldi	r19, 0x00	; 0
 364:	48 ec       	ldi	r20, 0xC8	; 200
 366:	52 e4       	ldi	r21, 0x42	; 66
 368:	0e 94 1a 03 	call	0x634	; 0x634 <__mulsf3>
 36c:	0e 94 56 02 	call	0x4ac	; 0x4ac <__fixsfsi>
 370:	7f 93       	push	r23
 372:	6f 93       	push	r22
 374:	df 92       	push	r13
 376:	cf 92       	push	r12
 378:	88 e2       	ldi	r24, 0x28	; 40
 37a:	91 e0       	ldi	r25, 0x01	; 1
 37c:	9f 93       	push	r25
 37e:	8f 93       	push	r24
 380:	04 51       	subi	r16, 0x14	; 20
 382:	11 09       	sbc	r17, r1
 384:	1f 93       	push	r17
 386:	0f 93       	push	r16
 388:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <sprintf>
			print(output_str);
 38c:	c8 01       	movw	r24, r16
 38e:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
 392:	0f b6       	in	r0, 0x3f	; 63
 394:	f8 94       	cli
 396:	de bf       	out	0x3e, r29	; 62
 398:	0f be       	out	0x3f, r0	; 63
 39a:	cd bf       	out	0x3d, r28	; 61
		}
		if (input_str[0] == 77){ // M
 39c:	8d 89       	ldd	r24, Y+21	; 0x15
 39e:	8d 34       	cpi	r24, 0x4D	; 77
 3a0:	99 f4       	brne	.+38     	; 0x3c8 <main+0xde>
			int n = input_str[2] - 48;
 3a2:	8f 89       	ldd	r24, Y+23	; 0x17
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	c0 97       	sbiw	r24, 0x30	; 48
			if ((input_str[4] == '1') && (input_str[5] == '0')){
 3a8:	69 8d       	ldd	r22, Y+25	; 0x19
 3aa:	61 33       	cpi	r22, 0x31	; 49
 3ac:	41 f4       	brne	.+16     	; 0x3be <main+0xd4>
 3ae:	2a 8d       	ldd	r18, Y+26	; 0x1a
 3b0:	20 33       	cpi	r18, 0x30	; 48
 3b2:	29 f4       	brne	.+10     	; 0x3be <main+0xd4>
				measure_multiple(n,10);
 3b4:	6a e0       	ldi	r22, 0x0A	; 10
 3b6:	70 e0       	ldi	r23, 0x00	; 0
 3b8:	0e 94 b1 00 	call	0x162	; 0x162 <measure_multiple>
 3bc:	05 c0       	rjmp	.+10     	; 0x3c8 <main+0xde>
			}
			else{
				measure_multiple(n,input_str[4] - 48);
 3be:	70 e0       	ldi	r23, 0x00	; 0
 3c0:	60 53       	subi	r22, 0x30	; 48
 3c2:	71 09       	sbc	r23, r1
 3c4:	0e 94 b1 00 	call	0x162	; 0x162 <measure_multiple>
			}
			
		}
		print("\n");
 3c8:	8a e1       	ldi	r24, 0x1A	; 26
 3ca:	91 e0       	ldi	r25, 0x01	; 1
 3cc:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
    }
 3d0:	9a cf       	rjmp	.-204    	; 0x306 <main+0x1c>

000003d2 <__subsf3>:
 3d2:	50 58       	subi	r21, 0x80	; 128

000003d4 <__addsf3>:
 3d4:	bb 27       	eor	r27, r27
 3d6:	aa 27       	eor	r26, r26
 3d8:	0e 94 01 02 	call	0x402	; 0x402 <__addsf3x>
 3dc:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__fp_round>
 3e0:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__fp_pscA>
 3e4:	38 f0       	brcs	.+14     	; 0x3f4 <__addsf3+0x20>
 3e6:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <__fp_pscB>
 3ea:	20 f0       	brcs	.+8      	; 0x3f4 <__addsf3+0x20>
 3ec:	39 f4       	brne	.+14     	; 0x3fc <__addsf3+0x28>
 3ee:	9f 3f       	cpi	r25, 0xFF	; 255
 3f0:	19 f4       	brne	.+6      	; 0x3f8 <__addsf3+0x24>
 3f2:	26 f4       	brtc	.+8      	; 0x3fc <__addsf3+0x28>
 3f4:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__fp_nan>
 3f8:	0e f4       	brtc	.+2      	; 0x3fc <__addsf3+0x28>
 3fa:	e0 95       	com	r30
 3fc:	e7 fb       	bst	r30, 7
 3fe:	0c 94 c9 02 	jmp	0x592	; 0x592 <__fp_inf>

00000402 <__addsf3x>:
 402:	e9 2f       	mov	r30, r25
 404:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__fp_split3>
 408:	58 f3       	brcs	.-42     	; 0x3e0 <__addsf3+0xc>
 40a:	ba 17       	cp	r27, r26
 40c:	62 07       	cpc	r22, r18
 40e:	73 07       	cpc	r23, r19
 410:	84 07       	cpc	r24, r20
 412:	95 07       	cpc	r25, r21
 414:	20 f0       	brcs	.+8      	; 0x41e <__addsf3x+0x1c>
 416:	79 f4       	brne	.+30     	; 0x436 <__addsf3x+0x34>
 418:	a6 f5       	brtc	.+104    	; 0x482 <__addsf3x+0x80>
 41a:	0c 94 13 03 	jmp	0x626	; 0x626 <__fp_zero>
 41e:	0e f4       	brtc	.+2      	; 0x422 <__addsf3x+0x20>
 420:	e0 95       	com	r30
 422:	0b 2e       	mov	r0, r27
 424:	ba 2f       	mov	r27, r26
 426:	a0 2d       	mov	r26, r0
 428:	0b 01       	movw	r0, r22
 42a:	b9 01       	movw	r22, r18
 42c:	90 01       	movw	r18, r0
 42e:	0c 01       	movw	r0, r24
 430:	ca 01       	movw	r24, r20
 432:	a0 01       	movw	r20, r0
 434:	11 24       	eor	r1, r1
 436:	ff 27       	eor	r31, r31
 438:	59 1b       	sub	r21, r25
 43a:	99 f0       	breq	.+38     	; 0x462 <__addsf3x+0x60>
 43c:	59 3f       	cpi	r21, 0xF9	; 249
 43e:	50 f4       	brcc	.+20     	; 0x454 <__addsf3x+0x52>
 440:	50 3e       	cpi	r21, 0xE0	; 224
 442:	68 f1       	brcs	.+90     	; 0x49e <__addsf3x+0x9c>
 444:	1a 16       	cp	r1, r26
 446:	f0 40       	sbci	r31, 0x00	; 0
 448:	a2 2f       	mov	r26, r18
 44a:	23 2f       	mov	r18, r19
 44c:	34 2f       	mov	r19, r20
 44e:	44 27       	eor	r20, r20
 450:	58 5f       	subi	r21, 0xF8	; 248
 452:	f3 cf       	rjmp	.-26     	; 0x43a <__addsf3x+0x38>
 454:	46 95       	lsr	r20
 456:	37 95       	ror	r19
 458:	27 95       	ror	r18
 45a:	a7 95       	ror	r26
 45c:	f0 40       	sbci	r31, 0x00	; 0
 45e:	53 95       	inc	r21
 460:	c9 f7       	brne	.-14     	; 0x454 <__addsf3x+0x52>
 462:	7e f4       	brtc	.+30     	; 0x482 <__addsf3x+0x80>
 464:	1f 16       	cp	r1, r31
 466:	ba 0b       	sbc	r27, r26
 468:	62 0b       	sbc	r22, r18
 46a:	73 0b       	sbc	r23, r19
 46c:	84 0b       	sbc	r24, r20
 46e:	ba f0       	brmi	.+46     	; 0x49e <__addsf3x+0x9c>
 470:	91 50       	subi	r25, 0x01	; 1
 472:	a1 f0       	breq	.+40     	; 0x49c <__addsf3x+0x9a>
 474:	ff 0f       	add	r31, r31
 476:	bb 1f       	adc	r27, r27
 478:	66 1f       	adc	r22, r22
 47a:	77 1f       	adc	r23, r23
 47c:	88 1f       	adc	r24, r24
 47e:	c2 f7       	brpl	.-16     	; 0x470 <__addsf3x+0x6e>
 480:	0e c0       	rjmp	.+28     	; 0x49e <__addsf3x+0x9c>
 482:	ba 0f       	add	r27, r26
 484:	62 1f       	adc	r22, r18
 486:	73 1f       	adc	r23, r19
 488:	84 1f       	adc	r24, r20
 48a:	48 f4       	brcc	.+18     	; 0x49e <__addsf3x+0x9c>
 48c:	87 95       	ror	r24
 48e:	77 95       	ror	r23
 490:	67 95       	ror	r22
 492:	b7 95       	ror	r27
 494:	f7 95       	ror	r31
 496:	9e 3f       	cpi	r25, 0xFE	; 254
 498:	08 f0       	brcs	.+2      	; 0x49c <__addsf3x+0x9a>
 49a:	b0 cf       	rjmp	.-160    	; 0x3fc <__addsf3+0x28>
 49c:	93 95       	inc	r25
 49e:	88 0f       	add	r24, r24
 4a0:	08 f0       	brcs	.+2      	; 0x4a4 <__addsf3x+0xa2>
 4a2:	99 27       	eor	r25, r25
 4a4:	ee 0f       	add	r30, r30
 4a6:	97 95       	ror	r25
 4a8:	87 95       	ror	r24
 4aa:	08 95       	ret

000004ac <__fixsfsi>:
 4ac:	0e 94 5d 02 	call	0x4ba	; 0x4ba <__fixunssfsi>
 4b0:	68 94       	set
 4b2:	b1 11       	cpse	r27, r1
 4b4:	0c 94 14 03 	jmp	0x628	; 0x628 <__fp_szero>
 4b8:	08 95       	ret

000004ba <__fixunssfsi>:
 4ba:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <__fp_splitA>
 4be:	88 f0       	brcs	.+34     	; 0x4e2 <__fixunssfsi+0x28>
 4c0:	9f 57       	subi	r25, 0x7F	; 127
 4c2:	98 f0       	brcs	.+38     	; 0x4ea <__fixunssfsi+0x30>
 4c4:	b9 2f       	mov	r27, r25
 4c6:	99 27       	eor	r25, r25
 4c8:	b7 51       	subi	r27, 0x17	; 23
 4ca:	b0 f0       	brcs	.+44     	; 0x4f8 <__fixunssfsi+0x3e>
 4cc:	e1 f0       	breq	.+56     	; 0x506 <__fixunssfsi+0x4c>
 4ce:	66 0f       	add	r22, r22
 4d0:	77 1f       	adc	r23, r23
 4d2:	88 1f       	adc	r24, r24
 4d4:	99 1f       	adc	r25, r25
 4d6:	1a f0       	brmi	.+6      	; 0x4de <__fixunssfsi+0x24>
 4d8:	ba 95       	dec	r27
 4da:	c9 f7       	brne	.-14     	; 0x4ce <__fixunssfsi+0x14>
 4dc:	14 c0       	rjmp	.+40     	; 0x506 <__fixunssfsi+0x4c>
 4de:	b1 30       	cpi	r27, 0x01	; 1
 4e0:	91 f0       	breq	.+36     	; 0x506 <__fixunssfsi+0x4c>
 4e2:	0e 94 13 03 	call	0x626	; 0x626 <__fp_zero>
 4e6:	b1 e0       	ldi	r27, 0x01	; 1
 4e8:	08 95       	ret
 4ea:	0c 94 13 03 	jmp	0x626	; 0x626 <__fp_zero>
 4ee:	67 2f       	mov	r22, r23
 4f0:	78 2f       	mov	r23, r24
 4f2:	88 27       	eor	r24, r24
 4f4:	b8 5f       	subi	r27, 0xF8	; 248
 4f6:	39 f0       	breq	.+14     	; 0x506 <__fixunssfsi+0x4c>
 4f8:	b9 3f       	cpi	r27, 0xF9	; 249
 4fa:	cc f3       	brlt	.-14     	; 0x4ee <__fixunssfsi+0x34>
 4fc:	86 95       	lsr	r24
 4fe:	77 95       	ror	r23
 500:	67 95       	ror	r22
 502:	b3 95       	inc	r27
 504:	d9 f7       	brne	.-10     	; 0x4fc <__fixunssfsi+0x42>
 506:	3e f4       	brtc	.+14     	; 0x516 <__fixunssfsi+0x5c>
 508:	90 95       	com	r25
 50a:	80 95       	com	r24
 50c:	70 95       	com	r23
 50e:	61 95       	neg	r22
 510:	7f 4f       	sbci	r23, 0xFF	; 255
 512:	8f 4f       	sbci	r24, 0xFF	; 255
 514:	9f 4f       	sbci	r25, 0xFF	; 255
 516:	08 95       	ret

00000518 <__floatunsisf>:
 518:	e8 94       	clt
 51a:	09 c0       	rjmp	.+18     	; 0x52e <__floatsisf+0x12>

0000051c <__floatsisf>:
 51c:	97 fb       	bst	r25, 7
 51e:	3e f4       	brtc	.+14     	; 0x52e <__floatsisf+0x12>
 520:	90 95       	com	r25
 522:	80 95       	com	r24
 524:	70 95       	com	r23
 526:	61 95       	neg	r22
 528:	7f 4f       	sbci	r23, 0xFF	; 255
 52a:	8f 4f       	sbci	r24, 0xFF	; 255
 52c:	9f 4f       	sbci	r25, 0xFF	; 255
 52e:	99 23       	and	r25, r25
 530:	a9 f0       	breq	.+42     	; 0x55c <__floatsisf+0x40>
 532:	f9 2f       	mov	r31, r25
 534:	96 e9       	ldi	r25, 0x96	; 150
 536:	bb 27       	eor	r27, r27
 538:	93 95       	inc	r25
 53a:	f6 95       	lsr	r31
 53c:	87 95       	ror	r24
 53e:	77 95       	ror	r23
 540:	67 95       	ror	r22
 542:	b7 95       	ror	r27
 544:	f1 11       	cpse	r31, r1
 546:	f8 cf       	rjmp	.-16     	; 0x538 <__floatsisf+0x1c>
 548:	fa f4       	brpl	.+62     	; 0x588 <__floatsisf+0x6c>
 54a:	bb 0f       	add	r27, r27
 54c:	11 f4       	brne	.+4      	; 0x552 <__floatsisf+0x36>
 54e:	60 ff       	sbrs	r22, 0
 550:	1b c0       	rjmp	.+54     	; 0x588 <__floatsisf+0x6c>
 552:	6f 5f       	subi	r22, 0xFF	; 255
 554:	7f 4f       	sbci	r23, 0xFF	; 255
 556:	8f 4f       	sbci	r24, 0xFF	; 255
 558:	9f 4f       	sbci	r25, 0xFF	; 255
 55a:	16 c0       	rjmp	.+44     	; 0x588 <__floatsisf+0x6c>
 55c:	88 23       	and	r24, r24
 55e:	11 f0       	breq	.+4      	; 0x564 <__floatsisf+0x48>
 560:	96 e9       	ldi	r25, 0x96	; 150
 562:	11 c0       	rjmp	.+34     	; 0x586 <__floatsisf+0x6a>
 564:	77 23       	and	r23, r23
 566:	21 f0       	breq	.+8      	; 0x570 <__floatsisf+0x54>
 568:	9e e8       	ldi	r25, 0x8E	; 142
 56a:	87 2f       	mov	r24, r23
 56c:	76 2f       	mov	r23, r22
 56e:	05 c0       	rjmp	.+10     	; 0x57a <__floatsisf+0x5e>
 570:	66 23       	and	r22, r22
 572:	71 f0       	breq	.+28     	; 0x590 <__floatsisf+0x74>
 574:	96 e8       	ldi	r25, 0x86	; 134
 576:	86 2f       	mov	r24, r22
 578:	70 e0       	ldi	r23, 0x00	; 0
 57a:	60 e0       	ldi	r22, 0x00	; 0
 57c:	2a f0       	brmi	.+10     	; 0x588 <__floatsisf+0x6c>
 57e:	9a 95       	dec	r25
 580:	66 0f       	add	r22, r22
 582:	77 1f       	adc	r23, r23
 584:	88 1f       	adc	r24, r24
 586:	da f7       	brpl	.-10     	; 0x57e <__floatsisf+0x62>
 588:	88 0f       	add	r24, r24
 58a:	96 95       	lsr	r25
 58c:	87 95       	ror	r24
 58e:	97 f9       	bld	r25, 7
 590:	08 95       	ret

00000592 <__fp_inf>:
 592:	97 f9       	bld	r25, 7
 594:	9f 67       	ori	r25, 0x7F	; 127
 596:	80 e8       	ldi	r24, 0x80	; 128
 598:	70 e0       	ldi	r23, 0x00	; 0
 59a:	60 e0       	ldi	r22, 0x00	; 0
 59c:	08 95       	ret

0000059e <__fp_nan>:
 59e:	9f ef       	ldi	r25, 0xFF	; 255
 5a0:	80 ec       	ldi	r24, 0xC0	; 192
 5a2:	08 95       	ret

000005a4 <__fp_pscA>:
 5a4:	00 24       	eor	r0, r0
 5a6:	0a 94       	dec	r0
 5a8:	16 16       	cp	r1, r22
 5aa:	17 06       	cpc	r1, r23
 5ac:	18 06       	cpc	r1, r24
 5ae:	09 06       	cpc	r0, r25
 5b0:	08 95       	ret

000005b2 <__fp_pscB>:
 5b2:	00 24       	eor	r0, r0
 5b4:	0a 94       	dec	r0
 5b6:	12 16       	cp	r1, r18
 5b8:	13 06       	cpc	r1, r19
 5ba:	14 06       	cpc	r1, r20
 5bc:	05 06       	cpc	r0, r21
 5be:	08 95       	ret

000005c0 <__fp_round>:
 5c0:	09 2e       	mov	r0, r25
 5c2:	03 94       	inc	r0
 5c4:	00 0c       	add	r0, r0
 5c6:	11 f4       	brne	.+4      	; 0x5cc <__fp_round+0xc>
 5c8:	88 23       	and	r24, r24
 5ca:	52 f0       	brmi	.+20     	; 0x5e0 <__fp_round+0x20>
 5cc:	bb 0f       	add	r27, r27
 5ce:	40 f4       	brcc	.+16     	; 0x5e0 <__fp_round+0x20>
 5d0:	bf 2b       	or	r27, r31
 5d2:	11 f4       	brne	.+4      	; 0x5d8 <__fp_round+0x18>
 5d4:	60 ff       	sbrs	r22, 0
 5d6:	04 c0       	rjmp	.+8      	; 0x5e0 <__fp_round+0x20>
 5d8:	6f 5f       	subi	r22, 0xFF	; 255
 5da:	7f 4f       	sbci	r23, 0xFF	; 255
 5dc:	8f 4f       	sbci	r24, 0xFF	; 255
 5de:	9f 4f       	sbci	r25, 0xFF	; 255
 5e0:	08 95       	ret

000005e2 <__fp_split3>:
 5e2:	57 fd       	sbrc	r21, 7
 5e4:	90 58       	subi	r25, 0x80	; 128
 5e6:	44 0f       	add	r20, r20
 5e8:	55 1f       	adc	r21, r21
 5ea:	59 f0       	breq	.+22     	; 0x602 <__fp_splitA+0x10>
 5ec:	5f 3f       	cpi	r21, 0xFF	; 255
 5ee:	71 f0       	breq	.+28     	; 0x60c <__fp_splitA+0x1a>
 5f0:	47 95       	ror	r20

000005f2 <__fp_splitA>:
 5f2:	88 0f       	add	r24, r24
 5f4:	97 fb       	bst	r25, 7
 5f6:	99 1f       	adc	r25, r25
 5f8:	61 f0       	breq	.+24     	; 0x612 <__fp_splitA+0x20>
 5fa:	9f 3f       	cpi	r25, 0xFF	; 255
 5fc:	79 f0       	breq	.+30     	; 0x61c <__fp_splitA+0x2a>
 5fe:	87 95       	ror	r24
 600:	08 95       	ret
 602:	12 16       	cp	r1, r18
 604:	13 06       	cpc	r1, r19
 606:	14 06       	cpc	r1, r20
 608:	55 1f       	adc	r21, r21
 60a:	f2 cf       	rjmp	.-28     	; 0x5f0 <__fp_split3+0xe>
 60c:	46 95       	lsr	r20
 60e:	f1 df       	rcall	.-30     	; 0x5f2 <__fp_splitA>
 610:	08 c0       	rjmp	.+16     	; 0x622 <__fp_splitA+0x30>
 612:	16 16       	cp	r1, r22
 614:	17 06       	cpc	r1, r23
 616:	18 06       	cpc	r1, r24
 618:	99 1f       	adc	r25, r25
 61a:	f1 cf       	rjmp	.-30     	; 0x5fe <__fp_splitA+0xc>
 61c:	86 95       	lsr	r24
 61e:	71 05       	cpc	r23, r1
 620:	61 05       	cpc	r22, r1
 622:	08 94       	sec
 624:	08 95       	ret

00000626 <__fp_zero>:
 626:	e8 94       	clt

00000628 <__fp_szero>:
 628:	bb 27       	eor	r27, r27
 62a:	66 27       	eor	r22, r22
 62c:	77 27       	eor	r23, r23
 62e:	cb 01       	movw	r24, r22
 630:	97 f9       	bld	r25, 7
 632:	08 95       	ret

00000634 <__mulsf3>:
 634:	0e 94 2d 03 	call	0x65a	; 0x65a <__mulsf3x>
 638:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__fp_round>
 63c:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__fp_pscA>
 640:	38 f0       	brcs	.+14     	; 0x650 <__mulsf3+0x1c>
 642:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <__fp_pscB>
 646:	20 f0       	brcs	.+8      	; 0x650 <__mulsf3+0x1c>
 648:	95 23       	and	r25, r21
 64a:	11 f0       	breq	.+4      	; 0x650 <__mulsf3+0x1c>
 64c:	0c 94 c9 02 	jmp	0x592	; 0x592 <__fp_inf>
 650:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__fp_nan>
 654:	11 24       	eor	r1, r1
 656:	0c 94 14 03 	jmp	0x628	; 0x628 <__fp_szero>

0000065a <__mulsf3x>:
 65a:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__fp_split3>
 65e:	70 f3       	brcs	.-36     	; 0x63c <__mulsf3+0x8>

00000660 <__mulsf3_pse>:
 660:	95 9f       	mul	r25, r21
 662:	c1 f3       	breq	.-16     	; 0x654 <__mulsf3+0x20>
 664:	95 0f       	add	r25, r21
 666:	50 e0       	ldi	r21, 0x00	; 0
 668:	55 1f       	adc	r21, r21
 66a:	62 9f       	mul	r22, r18
 66c:	f0 01       	movw	r30, r0
 66e:	72 9f       	mul	r23, r18
 670:	bb 27       	eor	r27, r27
 672:	f0 0d       	add	r31, r0
 674:	b1 1d       	adc	r27, r1
 676:	63 9f       	mul	r22, r19
 678:	aa 27       	eor	r26, r26
 67a:	f0 0d       	add	r31, r0
 67c:	b1 1d       	adc	r27, r1
 67e:	aa 1f       	adc	r26, r26
 680:	64 9f       	mul	r22, r20
 682:	66 27       	eor	r22, r22
 684:	b0 0d       	add	r27, r0
 686:	a1 1d       	adc	r26, r1
 688:	66 1f       	adc	r22, r22
 68a:	82 9f       	mul	r24, r18
 68c:	22 27       	eor	r18, r18
 68e:	b0 0d       	add	r27, r0
 690:	a1 1d       	adc	r26, r1
 692:	62 1f       	adc	r22, r18
 694:	73 9f       	mul	r23, r19
 696:	b0 0d       	add	r27, r0
 698:	a1 1d       	adc	r26, r1
 69a:	62 1f       	adc	r22, r18
 69c:	83 9f       	mul	r24, r19
 69e:	a0 0d       	add	r26, r0
 6a0:	61 1d       	adc	r22, r1
 6a2:	22 1f       	adc	r18, r18
 6a4:	74 9f       	mul	r23, r20
 6a6:	33 27       	eor	r19, r19
 6a8:	a0 0d       	add	r26, r0
 6aa:	61 1d       	adc	r22, r1
 6ac:	23 1f       	adc	r18, r19
 6ae:	84 9f       	mul	r24, r20
 6b0:	60 0d       	add	r22, r0
 6b2:	21 1d       	adc	r18, r1
 6b4:	82 2f       	mov	r24, r18
 6b6:	76 2f       	mov	r23, r22
 6b8:	6a 2f       	mov	r22, r26
 6ba:	11 24       	eor	r1, r1
 6bc:	9f 57       	subi	r25, 0x7F	; 127
 6be:	50 40       	sbci	r21, 0x00	; 0
 6c0:	9a f0       	brmi	.+38     	; 0x6e8 <__mulsf3_pse+0x88>
 6c2:	f1 f0       	breq	.+60     	; 0x700 <__mulsf3_pse+0xa0>
 6c4:	88 23       	and	r24, r24
 6c6:	4a f0       	brmi	.+18     	; 0x6da <__mulsf3_pse+0x7a>
 6c8:	ee 0f       	add	r30, r30
 6ca:	ff 1f       	adc	r31, r31
 6cc:	bb 1f       	adc	r27, r27
 6ce:	66 1f       	adc	r22, r22
 6d0:	77 1f       	adc	r23, r23
 6d2:	88 1f       	adc	r24, r24
 6d4:	91 50       	subi	r25, 0x01	; 1
 6d6:	50 40       	sbci	r21, 0x00	; 0
 6d8:	a9 f7       	brne	.-22     	; 0x6c4 <__mulsf3_pse+0x64>
 6da:	9e 3f       	cpi	r25, 0xFE	; 254
 6dc:	51 05       	cpc	r21, r1
 6de:	80 f0       	brcs	.+32     	; 0x700 <__mulsf3_pse+0xa0>
 6e0:	0c 94 c9 02 	jmp	0x592	; 0x592 <__fp_inf>
 6e4:	0c 94 14 03 	jmp	0x628	; 0x628 <__fp_szero>
 6e8:	5f 3f       	cpi	r21, 0xFF	; 255
 6ea:	e4 f3       	brlt	.-8      	; 0x6e4 <__mulsf3_pse+0x84>
 6ec:	98 3e       	cpi	r25, 0xE8	; 232
 6ee:	d4 f3       	brlt	.-12     	; 0x6e4 <__mulsf3_pse+0x84>
 6f0:	86 95       	lsr	r24
 6f2:	77 95       	ror	r23
 6f4:	67 95       	ror	r22
 6f6:	b7 95       	ror	r27
 6f8:	f7 95       	ror	r31
 6fa:	e7 95       	ror	r30
 6fc:	9f 5f       	subi	r25, 0xFF	; 255
 6fe:	c1 f7       	brne	.-16     	; 0x6f0 <__mulsf3_pse+0x90>
 700:	fe 2b       	or	r31, r30
 702:	88 0f       	add	r24, r24
 704:	91 1d       	adc	r25, r1
 706:	96 95       	lsr	r25
 708:	87 95       	ror	r24
 70a:	97 f9       	bld	r25, 7
 70c:	08 95       	ret

0000070e <atoi>:
 70e:	fc 01       	movw	r30, r24
 710:	88 27       	eor	r24, r24
 712:	99 27       	eor	r25, r25
 714:	e8 94       	clt
 716:	21 91       	ld	r18, Z+
 718:	20 32       	cpi	r18, 0x20	; 32
 71a:	e9 f3       	breq	.-6      	; 0x716 <atoi+0x8>
 71c:	29 30       	cpi	r18, 0x09	; 9
 71e:	10 f0       	brcs	.+4      	; 0x724 <atoi+0x16>
 720:	2e 30       	cpi	r18, 0x0E	; 14
 722:	c8 f3       	brcs	.-14     	; 0x716 <atoi+0x8>
 724:	2b 32       	cpi	r18, 0x2B	; 43
 726:	41 f0       	breq	.+16     	; 0x738 <atoi+0x2a>
 728:	2d 32       	cpi	r18, 0x2D	; 45
 72a:	39 f4       	brne	.+14     	; 0x73a <atoi+0x2c>
 72c:	68 94       	set
 72e:	04 c0       	rjmp	.+8      	; 0x738 <atoi+0x2a>
 730:	0e 94 b0 03 	call	0x760	; 0x760 <__mulhi_const_10>
 734:	82 0f       	add	r24, r18
 736:	91 1d       	adc	r25, r1
 738:	21 91       	ld	r18, Z+
 73a:	20 53       	subi	r18, 0x30	; 48
 73c:	2a 30       	cpi	r18, 0x0A	; 10
 73e:	c0 f3       	brcs	.-16     	; 0x730 <atoi+0x22>
 740:	1e f4       	brtc	.+6      	; 0x748 <atoi+0x3a>
 742:	90 95       	com	r25
 744:	81 95       	neg	r24
 746:	9f 4f       	sbci	r25, 0xFF	; 255
 748:	08 95       	ret

0000074a <__itoa_ncheck>:
 74a:	bb 27       	eor	r27, r27
 74c:	4a 30       	cpi	r20, 0x0A	; 10
 74e:	31 f4       	brne	.+12     	; 0x75c <__itoa_ncheck+0x12>
 750:	99 23       	and	r25, r25
 752:	22 f4       	brpl	.+8      	; 0x75c <__itoa_ncheck+0x12>
 754:	bd e2       	ldi	r27, 0x2D	; 45
 756:	90 95       	com	r25
 758:	81 95       	neg	r24
 75a:	9f 4f       	sbci	r25, 0xFF	; 255
 75c:	0c 94 b9 03 	jmp	0x772	; 0x772 <__utoa_common>

00000760 <__mulhi_const_10>:
 760:	7a e0       	ldi	r23, 0x0A	; 10
 762:	97 9f       	mul	r25, r23
 764:	90 2d       	mov	r25, r0
 766:	87 9f       	mul	r24, r23
 768:	80 2d       	mov	r24, r0
 76a:	91 0d       	add	r25, r1
 76c:	11 24       	eor	r1, r1
 76e:	08 95       	ret

00000770 <__utoa_ncheck>:
 770:	bb 27       	eor	r27, r27

00000772 <__utoa_common>:
 772:	fb 01       	movw	r30, r22
 774:	55 27       	eor	r21, r21
 776:	aa 27       	eor	r26, r26
 778:	88 0f       	add	r24, r24
 77a:	99 1f       	adc	r25, r25
 77c:	aa 1f       	adc	r26, r26
 77e:	a4 17       	cp	r26, r20
 780:	10 f0       	brcs	.+4      	; 0x786 <__utoa_common+0x14>
 782:	a4 1b       	sub	r26, r20
 784:	83 95       	inc	r24
 786:	50 51       	subi	r21, 0x10	; 16
 788:	b9 f7       	brne	.-18     	; 0x778 <__utoa_common+0x6>
 78a:	a0 5d       	subi	r26, 0xD0	; 208
 78c:	aa 33       	cpi	r26, 0x3A	; 58
 78e:	08 f0       	brcs	.+2      	; 0x792 <__utoa_common+0x20>
 790:	a9 5d       	subi	r26, 0xD9	; 217
 792:	a1 93       	st	Z+, r26
 794:	00 97       	sbiw	r24, 0x00	; 0
 796:	79 f7       	brne	.-34     	; 0x776 <__utoa_common+0x4>
 798:	b1 11       	cpse	r27, r1
 79a:	b1 93       	st	Z+, r27
 79c:	11 92       	st	Z+, r1
 79e:	cb 01       	movw	r24, r22
 7a0:	0c 94 eb 05 	jmp	0xbd6	; 0xbd6 <strrev>

000007a4 <sprintf>:
 7a4:	ae e0       	ldi	r26, 0x0E	; 14
 7a6:	b0 e0       	ldi	r27, 0x00	; 0
 7a8:	e8 ed       	ldi	r30, 0xD8	; 216
 7aa:	f3 e0       	ldi	r31, 0x03	; 3
 7ac:	0c 94 a3 06 	jmp	0xd46	; 0xd46 <__prologue_saves__+0x1c>
 7b0:	0d 89       	ldd	r16, Y+21	; 0x15
 7b2:	1e 89       	ldd	r17, Y+22	; 0x16
 7b4:	86 e0       	ldi	r24, 0x06	; 6
 7b6:	8c 83       	std	Y+4, r24	; 0x04
 7b8:	1a 83       	std	Y+2, r17	; 0x02
 7ba:	09 83       	std	Y+1, r16	; 0x01
 7bc:	8f ef       	ldi	r24, 0xFF	; 255
 7be:	9f e7       	ldi	r25, 0x7F	; 127
 7c0:	9e 83       	std	Y+6, r25	; 0x06
 7c2:	8d 83       	std	Y+5, r24	; 0x05
 7c4:	ae 01       	movw	r20, r28
 7c6:	47 5e       	subi	r20, 0xE7	; 231
 7c8:	5f 4f       	sbci	r21, 0xFF	; 255
 7ca:	6f 89       	ldd	r22, Y+23	; 0x17
 7cc:	78 8d       	ldd	r23, Y+24	; 0x18
 7ce:	ce 01       	movw	r24, r28
 7d0:	01 96       	adiw	r24, 0x01	; 1
 7d2:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <vfprintf>
 7d6:	ef 81       	ldd	r30, Y+7	; 0x07
 7d8:	f8 85       	ldd	r31, Y+8	; 0x08
 7da:	e0 0f       	add	r30, r16
 7dc:	f1 1f       	adc	r31, r17
 7de:	10 82       	st	Z, r1
 7e0:	2e 96       	adiw	r28, 0x0e	; 14
 7e2:	e4 e0       	ldi	r30, 0x04	; 4
 7e4:	0c 94 bf 06 	jmp	0xd7e	; 0xd7e <__epilogue_restores__+0x1c>

000007e8 <vfprintf>:
 7e8:	ab e0       	ldi	r26, 0x0B	; 11
 7ea:	b0 e0       	ldi	r27, 0x00	; 0
 7ec:	ea ef       	ldi	r30, 0xFA	; 250
 7ee:	f3 e0       	ldi	r31, 0x03	; 3
 7f0:	0c 94 95 06 	jmp	0xd2a	; 0xd2a <__prologue_saves__>
 7f4:	6c 01       	movw	r12, r24
 7f6:	7b 01       	movw	r14, r22
 7f8:	8a 01       	movw	r16, r20
 7fa:	fc 01       	movw	r30, r24
 7fc:	17 82       	std	Z+7, r1	; 0x07
 7fe:	16 82       	std	Z+6, r1	; 0x06
 800:	83 81       	ldd	r24, Z+3	; 0x03
 802:	81 ff       	sbrs	r24, 1
 804:	cc c1       	rjmp	.+920    	; 0xb9e <__stack+0x29f>
 806:	ce 01       	movw	r24, r28
 808:	01 96       	adiw	r24, 0x01	; 1
 80a:	3c 01       	movw	r6, r24
 80c:	f6 01       	movw	r30, r12
 80e:	93 81       	ldd	r25, Z+3	; 0x03
 810:	f7 01       	movw	r30, r14
 812:	93 fd       	sbrc	r25, 3
 814:	85 91       	lpm	r24, Z+
 816:	93 ff       	sbrs	r25, 3
 818:	81 91       	ld	r24, Z+
 81a:	7f 01       	movw	r14, r30
 81c:	88 23       	and	r24, r24
 81e:	09 f4       	brne	.+2      	; 0x822 <__DATA_REGION_LENGTH__+0x22>
 820:	ba c1       	rjmp	.+884    	; 0xb96 <__stack+0x297>
 822:	85 32       	cpi	r24, 0x25	; 37
 824:	39 f4       	brne	.+14     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 826:	93 fd       	sbrc	r25, 3
 828:	85 91       	lpm	r24, Z+
 82a:	93 ff       	sbrs	r25, 3
 82c:	81 91       	ld	r24, Z+
 82e:	7f 01       	movw	r14, r30
 830:	85 32       	cpi	r24, 0x25	; 37
 832:	29 f4       	brne	.+10     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 834:	b6 01       	movw	r22, r12
 836:	90 e0       	ldi	r25, 0x00	; 0
 838:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <fputc>
 83c:	e7 cf       	rjmp	.-50     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 83e:	91 2c       	mov	r9, r1
 840:	21 2c       	mov	r2, r1
 842:	31 2c       	mov	r3, r1
 844:	ff e1       	ldi	r31, 0x1F	; 31
 846:	f3 15       	cp	r31, r3
 848:	d8 f0       	brcs	.+54     	; 0x880 <__DATA_REGION_LENGTH__+0x80>
 84a:	8b 32       	cpi	r24, 0x2B	; 43
 84c:	79 f0       	breq	.+30     	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
 84e:	38 f4       	brcc	.+14     	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
 850:	80 32       	cpi	r24, 0x20	; 32
 852:	79 f0       	breq	.+30     	; 0x872 <__DATA_REGION_LENGTH__+0x72>
 854:	83 32       	cpi	r24, 0x23	; 35
 856:	a1 f4       	brne	.+40     	; 0x880 <__DATA_REGION_LENGTH__+0x80>
 858:	23 2d       	mov	r18, r3
 85a:	20 61       	ori	r18, 0x10	; 16
 85c:	1d c0       	rjmp	.+58     	; 0x898 <__DATA_REGION_LENGTH__+0x98>
 85e:	8d 32       	cpi	r24, 0x2D	; 45
 860:	61 f0       	breq	.+24     	; 0x87a <__DATA_REGION_LENGTH__+0x7a>
 862:	80 33       	cpi	r24, 0x30	; 48
 864:	69 f4       	brne	.+26     	; 0x880 <__DATA_REGION_LENGTH__+0x80>
 866:	23 2d       	mov	r18, r3
 868:	21 60       	ori	r18, 0x01	; 1
 86a:	16 c0       	rjmp	.+44     	; 0x898 <__DATA_REGION_LENGTH__+0x98>
 86c:	83 2d       	mov	r24, r3
 86e:	82 60       	ori	r24, 0x02	; 2
 870:	38 2e       	mov	r3, r24
 872:	e3 2d       	mov	r30, r3
 874:	e4 60       	ori	r30, 0x04	; 4
 876:	3e 2e       	mov	r3, r30
 878:	2a c0       	rjmp	.+84     	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 87a:	f3 2d       	mov	r31, r3
 87c:	f8 60       	ori	r31, 0x08	; 8
 87e:	1d c0       	rjmp	.+58     	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
 880:	37 fc       	sbrc	r3, 7
 882:	2d c0       	rjmp	.+90     	; 0x8de <__DATA_REGION_LENGTH__+0xde>
 884:	20 ed       	ldi	r18, 0xD0	; 208
 886:	28 0f       	add	r18, r24
 888:	2a 30       	cpi	r18, 0x0A	; 10
 88a:	40 f0       	brcs	.+16     	; 0x89c <__DATA_REGION_LENGTH__+0x9c>
 88c:	8e 32       	cpi	r24, 0x2E	; 46
 88e:	b9 f4       	brne	.+46     	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
 890:	36 fc       	sbrc	r3, 6
 892:	81 c1       	rjmp	.+770    	; 0xb96 <__stack+0x297>
 894:	23 2d       	mov	r18, r3
 896:	20 64       	ori	r18, 0x40	; 64
 898:	32 2e       	mov	r3, r18
 89a:	19 c0       	rjmp	.+50     	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 89c:	36 fe       	sbrs	r3, 6
 89e:	06 c0       	rjmp	.+12     	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 8a0:	8a e0       	ldi	r24, 0x0A	; 10
 8a2:	98 9e       	mul	r9, r24
 8a4:	20 0d       	add	r18, r0
 8a6:	11 24       	eor	r1, r1
 8a8:	92 2e       	mov	r9, r18
 8aa:	11 c0       	rjmp	.+34     	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 8ac:	ea e0       	ldi	r30, 0x0A	; 10
 8ae:	2e 9e       	mul	r2, r30
 8b0:	20 0d       	add	r18, r0
 8b2:	11 24       	eor	r1, r1
 8b4:	22 2e       	mov	r2, r18
 8b6:	f3 2d       	mov	r31, r3
 8b8:	f0 62       	ori	r31, 0x20	; 32
 8ba:	3f 2e       	mov	r3, r31
 8bc:	08 c0       	rjmp	.+16     	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 8be:	8c 36       	cpi	r24, 0x6C	; 108
 8c0:	21 f4       	brne	.+8      	; 0x8ca <__DATA_REGION_LENGTH__+0xca>
 8c2:	83 2d       	mov	r24, r3
 8c4:	80 68       	ori	r24, 0x80	; 128
 8c6:	38 2e       	mov	r3, r24
 8c8:	02 c0       	rjmp	.+4      	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 8ca:	88 36       	cpi	r24, 0x68	; 104
 8cc:	41 f4       	brne	.+16     	; 0x8de <__DATA_REGION_LENGTH__+0xde>
 8ce:	f7 01       	movw	r30, r14
 8d0:	93 fd       	sbrc	r25, 3
 8d2:	85 91       	lpm	r24, Z+
 8d4:	93 ff       	sbrs	r25, 3
 8d6:	81 91       	ld	r24, Z+
 8d8:	7f 01       	movw	r14, r30
 8da:	81 11       	cpse	r24, r1
 8dc:	b3 cf       	rjmp	.-154    	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 8de:	98 2f       	mov	r25, r24
 8e0:	9f 7d       	andi	r25, 0xDF	; 223
 8e2:	95 54       	subi	r25, 0x45	; 69
 8e4:	93 30       	cpi	r25, 0x03	; 3
 8e6:	28 f4       	brcc	.+10     	; 0x8f2 <__DATA_REGION_LENGTH__+0xf2>
 8e8:	0c 5f       	subi	r16, 0xFC	; 252
 8ea:	1f 4f       	sbci	r17, 0xFF	; 255
 8ec:	9f e3       	ldi	r25, 0x3F	; 63
 8ee:	99 83       	std	Y+1, r25	; 0x01
 8f0:	0d c0       	rjmp	.+26     	; 0x90c <__stack+0xd>
 8f2:	83 36       	cpi	r24, 0x63	; 99
 8f4:	31 f0       	breq	.+12     	; 0x902 <__stack+0x3>
 8f6:	83 37       	cpi	r24, 0x73	; 115
 8f8:	71 f0       	breq	.+28     	; 0x916 <__stack+0x17>
 8fa:	83 35       	cpi	r24, 0x53	; 83
 8fc:	09 f0       	breq	.+2      	; 0x900 <__stack+0x1>
 8fe:	59 c0       	rjmp	.+178    	; 0x9b2 <__stack+0xb3>
 900:	21 c0       	rjmp	.+66     	; 0x944 <__stack+0x45>
 902:	f8 01       	movw	r30, r16
 904:	80 81       	ld	r24, Z
 906:	89 83       	std	Y+1, r24	; 0x01
 908:	0e 5f       	subi	r16, 0xFE	; 254
 90a:	1f 4f       	sbci	r17, 0xFF	; 255
 90c:	88 24       	eor	r8, r8
 90e:	83 94       	inc	r8
 910:	91 2c       	mov	r9, r1
 912:	53 01       	movw	r10, r6
 914:	13 c0       	rjmp	.+38     	; 0x93c <__stack+0x3d>
 916:	28 01       	movw	r4, r16
 918:	f2 e0       	ldi	r31, 0x02	; 2
 91a:	4f 0e       	add	r4, r31
 91c:	51 1c       	adc	r5, r1
 91e:	f8 01       	movw	r30, r16
 920:	a0 80       	ld	r10, Z
 922:	b1 80       	ldd	r11, Z+1	; 0x01
 924:	36 fe       	sbrs	r3, 6
 926:	03 c0       	rjmp	.+6      	; 0x92e <__stack+0x2f>
 928:	69 2d       	mov	r22, r9
 92a:	70 e0       	ldi	r23, 0x00	; 0
 92c:	02 c0       	rjmp	.+4      	; 0x932 <__stack+0x33>
 92e:	6f ef       	ldi	r22, 0xFF	; 255
 930:	7f ef       	ldi	r23, 0xFF	; 255
 932:	c5 01       	movw	r24, r10
 934:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <strnlen>
 938:	4c 01       	movw	r8, r24
 93a:	82 01       	movw	r16, r4
 93c:	f3 2d       	mov	r31, r3
 93e:	ff 77       	andi	r31, 0x7F	; 127
 940:	3f 2e       	mov	r3, r31
 942:	16 c0       	rjmp	.+44     	; 0x970 <__stack+0x71>
 944:	28 01       	movw	r4, r16
 946:	22 e0       	ldi	r18, 0x02	; 2
 948:	42 0e       	add	r4, r18
 94a:	51 1c       	adc	r5, r1
 94c:	f8 01       	movw	r30, r16
 94e:	a0 80       	ld	r10, Z
 950:	b1 80       	ldd	r11, Z+1	; 0x01
 952:	36 fe       	sbrs	r3, 6
 954:	03 c0       	rjmp	.+6      	; 0x95c <__stack+0x5d>
 956:	69 2d       	mov	r22, r9
 958:	70 e0       	ldi	r23, 0x00	; 0
 95a:	02 c0       	rjmp	.+4      	; 0x960 <__stack+0x61>
 95c:	6f ef       	ldi	r22, 0xFF	; 255
 95e:	7f ef       	ldi	r23, 0xFF	; 255
 960:	c5 01       	movw	r24, r10
 962:	0e 94 d5 05 	call	0xbaa	; 0xbaa <strnlen_P>
 966:	4c 01       	movw	r8, r24
 968:	f3 2d       	mov	r31, r3
 96a:	f0 68       	ori	r31, 0x80	; 128
 96c:	3f 2e       	mov	r3, r31
 96e:	82 01       	movw	r16, r4
 970:	33 fc       	sbrc	r3, 3
 972:	1b c0       	rjmp	.+54     	; 0x9aa <__stack+0xab>
 974:	82 2d       	mov	r24, r2
 976:	90 e0       	ldi	r25, 0x00	; 0
 978:	88 16       	cp	r8, r24
 97a:	99 06       	cpc	r9, r25
 97c:	b0 f4       	brcc	.+44     	; 0x9aa <__stack+0xab>
 97e:	b6 01       	movw	r22, r12
 980:	80 e2       	ldi	r24, 0x20	; 32
 982:	90 e0       	ldi	r25, 0x00	; 0
 984:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <fputc>
 988:	2a 94       	dec	r2
 98a:	f4 cf       	rjmp	.-24     	; 0x974 <__stack+0x75>
 98c:	f5 01       	movw	r30, r10
 98e:	37 fc       	sbrc	r3, 7
 990:	85 91       	lpm	r24, Z+
 992:	37 fe       	sbrs	r3, 7
 994:	81 91       	ld	r24, Z+
 996:	5f 01       	movw	r10, r30
 998:	b6 01       	movw	r22, r12
 99a:	90 e0       	ldi	r25, 0x00	; 0
 99c:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <fputc>
 9a0:	21 10       	cpse	r2, r1
 9a2:	2a 94       	dec	r2
 9a4:	21 e0       	ldi	r18, 0x01	; 1
 9a6:	82 1a       	sub	r8, r18
 9a8:	91 08       	sbc	r9, r1
 9aa:	81 14       	cp	r8, r1
 9ac:	91 04       	cpc	r9, r1
 9ae:	71 f7       	brne	.-36     	; 0x98c <__stack+0x8d>
 9b0:	e8 c0       	rjmp	.+464    	; 0xb82 <__stack+0x283>
 9b2:	84 36       	cpi	r24, 0x64	; 100
 9b4:	11 f0       	breq	.+4      	; 0x9ba <__stack+0xbb>
 9b6:	89 36       	cpi	r24, 0x69	; 105
 9b8:	41 f5       	brne	.+80     	; 0xa0a <__stack+0x10b>
 9ba:	f8 01       	movw	r30, r16
 9bc:	37 fe       	sbrs	r3, 7
 9be:	07 c0       	rjmp	.+14     	; 0x9ce <__stack+0xcf>
 9c0:	60 81       	ld	r22, Z
 9c2:	71 81       	ldd	r23, Z+1	; 0x01
 9c4:	82 81       	ldd	r24, Z+2	; 0x02
 9c6:	93 81       	ldd	r25, Z+3	; 0x03
 9c8:	0c 5f       	subi	r16, 0xFC	; 252
 9ca:	1f 4f       	sbci	r17, 0xFF	; 255
 9cc:	08 c0       	rjmp	.+16     	; 0x9de <__stack+0xdf>
 9ce:	60 81       	ld	r22, Z
 9d0:	71 81       	ldd	r23, Z+1	; 0x01
 9d2:	07 2e       	mov	r0, r23
 9d4:	00 0c       	add	r0, r0
 9d6:	88 0b       	sbc	r24, r24
 9d8:	99 0b       	sbc	r25, r25
 9da:	0e 5f       	subi	r16, 0xFE	; 254
 9dc:	1f 4f       	sbci	r17, 0xFF	; 255
 9de:	f3 2d       	mov	r31, r3
 9e0:	ff 76       	andi	r31, 0x6F	; 111
 9e2:	3f 2e       	mov	r3, r31
 9e4:	97 ff       	sbrs	r25, 7
 9e6:	09 c0       	rjmp	.+18     	; 0x9fa <__stack+0xfb>
 9e8:	90 95       	com	r25
 9ea:	80 95       	com	r24
 9ec:	70 95       	com	r23
 9ee:	61 95       	neg	r22
 9f0:	7f 4f       	sbci	r23, 0xFF	; 255
 9f2:	8f 4f       	sbci	r24, 0xFF	; 255
 9f4:	9f 4f       	sbci	r25, 0xFF	; 255
 9f6:	f0 68       	ori	r31, 0x80	; 128
 9f8:	3f 2e       	mov	r3, r31
 9fa:	2a e0       	ldi	r18, 0x0A	; 10
 9fc:	30 e0       	ldi	r19, 0x00	; 0
 9fe:	a3 01       	movw	r20, r6
 a00:	0e 94 37 06 	call	0xc6e	; 0xc6e <__ultoa_invert>
 a04:	88 2e       	mov	r8, r24
 a06:	86 18       	sub	r8, r6
 a08:	45 c0       	rjmp	.+138    	; 0xa94 <__stack+0x195>
 a0a:	85 37       	cpi	r24, 0x75	; 117
 a0c:	31 f4       	brne	.+12     	; 0xa1a <__stack+0x11b>
 a0e:	23 2d       	mov	r18, r3
 a10:	2f 7e       	andi	r18, 0xEF	; 239
 a12:	b2 2e       	mov	r11, r18
 a14:	2a e0       	ldi	r18, 0x0A	; 10
 a16:	30 e0       	ldi	r19, 0x00	; 0
 a18:	25 c0       	rjmp	.+74     	; 0xa64 <__stack+0x165>
 a1a:	93 2d       	mov	r25, r3
 a1c:	99 7f       	andi	r25, 0xF9	; 249
 a1e:	b9 2e       	mov	r11, r25
 a20:	8f 36       	cpi	r24, 0x6F	; 111
 a22:	c1 f0       	breq	.+48     	; 0xa54 <__stack+0x155>
 a24:	18 f4       	brcc	.+6      	; 0xa2c <__stack+0x12d>
 a26:	88 35       	cpi	r24, 0x58	; 88
 a28:	79 f0       	breq	.+30     	; 0xa48 <__stack+0x149>
 a2a:	b5 c0       	rjmp	.+362    	; 0xb96 <__stack+0x297>
 a2c:	80 37       	cpi	r24, 0x70	; 112
 a2e:	19 f0       	breq	.+6      	; 0xa36 <__stack+0x137>
 a30:	88 37       	cpi	r24, 0x78	; 120
 a32:	21 f0       	breq	.+8      	; 0xa3c <__stack+0x13d>
 a34:	b0 c0       	rjmp	.+352    	; 0xb96 <__stack+0x297>
 a36:	e9 2f       	mov	r30, r25
 a38:	e0 61       	ori	r30, 0x10	; 16
 a3a:	be 2e       	mov	r11, r30
 a3c:	b4 fe       	sbrs	r11, 4
 a3e:	0d c0       	rjmp	.+26     	; 0xa5a <__stack+0x15b>
 a40:	fb 2d       	mov	r31, r11
 a42:	f4 60       	ori	r31, 0x04	; 4
 a44:	bf 2e       	mov	r11, r31
 a46:	09 c0       	rjmp	.+18     	; 0xa5a <__stack+0x15b>
 a48:	34 fe       	sbrs	r3, 4
 a4a:	0a c0       	rjmp	.+20     	; 0xa60 <__stack+0x161>
 a4c:	29 2f       	mov	r18, r25
 a4e:	26 60       	ori	r18, 0x06	; 6
 a50:	b2 2e       	mov	r11, r18
 a52:	06 c0       	rjmp	.+12     	; 0xa60 <__stack+0x161>
 a54:	28 e0       	ldi	r18, 0x08	; 8
 a56:	30 e0       	ldi	r19, 0x00	; 0
 a58:	05 c0       	rjmp	.+10     	; 0xa64 <__stack+0x165>
 a5a:	20 e1       	ldi	r18, 0x10	; 16
 a5c:	30 e0       	ldi	r19, 0x00	; 0
 a5e:	02 c0       	rjmp	.+4      	; 0xa64 <__stack+0x165>
 a60:	20 e1       	ldi	r18, 0x10	; 16
 a62:	32 e0       	ldi	r19, 0x02	; 2
 a64:	f8 01       	movw	r30, r16
 a66:	b7 fe       	sbrs	r11, 7
 a68:	07 c0       	rjmp	.+14     	; 0xa78 <__stack+0x179>
 a6a:	60 81       	ld	r22, Z
 a6c:	71 81       	ldd	r23, Z+1	; 0x01
 a6e:	82 81       	ldd	r24, Z+2	; 0x02
 a70:	93 81       	ldd	r25, Z+3	; 0x03
 a72:	0c 5f       	subi	r16, 0xFC	; 252
 a74:	1f 4f       	sbci	r17, 0xFF	; 255
 a76:	06 c0       	rjmp	.+12     	; 0xa84 <__stack+0x185>
 a78:	60 81       	ld	r22, Z
 a7a:	71 81       	ldd	r23, Z+1	; 0x01
 a7c:	80 e0       	ldi	r24, 0x00	; 0
 a7e:	90 e0       	ldi	r25, 0x00	; 0
 a80:	0e 5f       	subi	r16, 0xFE	; 254
 a82:	1f 4f       	sbci	r17, 0xFF	; 255
 a84:	a3 01       	movw	r20, r6
 a86:	0e 94 37 06 	call	0xc6e	; 0xc6e <__ultoa_invert>
 a8a:	88 2e       	mov	r8, r24
 a8c:	86 18       	sub	r8, r6
 a8e:	fb 2d       	mov	r31, r11
 a90:	ff 77       	andi	r31, 0x7F	; 127
 a92:	3f 2e       	mov	r3, r31
 a94:	36 fe       	sbrs	r3, 6
 a96:	0d c0       	rjmp	.+26     	; 0xab2 <__stack+0x1b3>
 a98:	23 2d       	mov	r18, r3
 a9a:	2e 7f       	andi	r18, 0xFE	; 254
 a9c:	a2 2e       	mov	r10, r18
 a9e:	89 14       	cp	r8, r9
 aa0:	58 f4       	brcc	.+22     	; 0xab8 <__stack+0x1b9>
 aa2:	34 fe       	sbrs	r3, 4
 aa4:	0b c0       	rjmp	.+22     	; 0xabc <__stack+0x1bd>
 aa6:	32 fc       	sbrc	r3, 2
 aa8:	09 c0       	rjmp	.+18     	; 0xabc <__stack+0x1bd>
 aaa:	83 2d       	mov	r24, r3
 aac:	8e 7e       	andi	r24, 0xEE	; 238
 aae:	a8 2e       	mov	r10, r24
 ab0:	05 c0       	rjmp	.+10     	; 0xabc <__stack+0x1bd>
 ab2:	b8 2c       	mov	r11, r8
 ab4:	a3 2c       	mov	r10, r3
 ab6:	03 c0       	rjmp	.+6      	; 0xabe <__stack+0x1bf>
 ab8:	b8 2c       	mov	r11, r8
 aba:	01 c0       	rjmp	.+2      	; 0xabe <__stack+0x1bf>
 abc:	b9 2c       	mov	r11, r9
 abe:	a4 fe       	sbrs	r10, 4
 ac0:	0f c0       	rjmp	.+30     	; 0xae0 <__stack+0x1e1>
 ac2:	fe 01       	movw	r30, r28
 ac4:	e8 0d       	add	r30, r8
 ac6:	f1 1d       	adc	r31, r1
 ac8:	80 81       	ld	r24, Z
 aca:	80 33       	cpi	r24, 0x30	; 48
 acc:	21 f4       	brne	.+8      	; 0xad6 <__stack+0x1d7>
 ace:	9a 2d       	mov	r25, r10
 ad0:	99 7e       	andi	r25, 0xE9	; 233
 ad2:	a9 2e       	mov	r10, r25
 ad4:	09 c0       	rjmp	.+18     	; 0xae8 <__stack+0x1e9>
 ad6:	a2 fe       	sbrs	r10, 2
 ad8:	06 c0       	rjmp	.+12     	; 0xae6 <__stack+0x1e7>
 ada:	b3 94       	inc	r11
 adc:	b3 94       	inc	r11
 ade:	04 c0       	rjmp	.+8      	; 0xae8 <__stack+0x1e9>
 ae0:	8a 2d       	mov	r24, r10
 ae2:	86 78       	andi	r24, 0x86	; 134
 ae4:	09 f0       	breq	.+2      	; 0xae8 <__stack+0x1e9>
 ae6:	b3 94       	inc	r11
 ae8:	a3 fc       	sbrc	r10, 3
 aea:	11 c0       	rjmp	.+34     	; 0xb0e <__stack+0x20f>
 aec:	a0 fe       	sbrs	r10, 0
 aee:	06 c0       	rjmp	.+12     	; 0xafc <__stack+0x1fd>
 af0:	b2 14       	cp	r11, r2
 af2:	88 f4       	brcc	.+34     	; 0xb16 <__stack+0x217>
 af4:	28 0c       	add	r2, r8
 af6:	92 2c       	mov	r9, r2
 af8:	9b 18       	sub	r9, r11
 afa:	0e c0       	rjmp	.+28     	; 0xb18 <__stack+0x219>
 afc:	b2 14       	cp	r11, r2
 afe:	60 f4       	brcc	.+24     	; 0xb18 <__stack+0x219>
 b00:	b6 01       	movw	r22, r12
 b02:	80 e2       	ldi	r24, 0x20	; 32
 b04:	90 e0       	ldi	r25, 0x00	; 0
 b06:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <fputc>
 b0a:	b3 94       	inc	r11
 b0c:	f7 cf       	rjmp	.-18     	; 0xafc <__stack+0x1fd>
 b0e:	b2 14       	cp	r11, r2
 b10:	18 f4       	brcc	.+6      	; 0xb18 <__stack+0x219>
 b12:	2b 18       	sub	r2, r11
 b14:	02 c0       	rjmp	.+4      	; 0xb1a <__stack+0x21b>
 b16:	98 2c       	mov	r9, r8
 b18:	21 2c       	mov	r2, r1
 b1a:	a4 fe       	sbrs	r10, 4
 b1c:	10 c0       	rjmp	.+32     	; 0xb3e <__stack+0x23f>
 b1e:	b6 01       	movw	r22, r12
 b20:	80 e3       	ldi	r24, 0x30	; 48
 b22:	90 e0       	ldi	r25, 0x00	; 0
 b24:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <fputc>
 b28:	a2 fe       	sbrs	r10, 2
 b2a:	17 c0       	rjmp	.+46     	; 0xb5a <__stack+0x25b>
 b2c:	a1 fc       	sbrc	r10, 1
 b2e:	03 c0       	rjmp	.+6      	; 0xb36 <__stack+0x237>
 b30:	88 e7       	ldi	r24, 0x78	; 120
 b32:	90 e0       	ldi	r25, 0x00	; 0
 b34:	02 c0       	rjmp	.+4      	; 0xb3a <__stack+0x23b>
 b36:	88 e5       	ldi	r24, 0x58	; 88
 b38:	90 e0       	ldi	r25, 0x00	; 0
 b3a:	b6 01       	movw	r22, r12
 b3c:	0c c0       	rjmp	.+24     	; 0xb56 <__stack+0x257>
 b3e:	8a 2d       	mov	r24, r10
 b40:	86 78       	andi	r24, 0x86	; 134
 b42:	59 f0       	breq	.+22     	; 0xb5a <__stack+0x25b>
 b44:	a1 fe       	sbrs	r10, 1
 b46:	02 c0       	rjmp	.+4      	; 0xb4c <__stack+0x24d>
 b48:	8b e2       	ldi	r24, 0x2B	; 43
 b4a:	01 c0       	rjmp	.+2      	; 0xb4e <__stack+0x24f>
 b4c:	80 e2       	ldi	r24, 0x20	; 32
 b4e:	a7 fc       	sbrc	r10, 7
 b50:	8d e2       	ldi	r24, 0x2D	; 45
 b52:	b6 01       	movw	r22, r12
 b54:	90 e0       	ldi	r25, 0x00	; 0
 b56:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <fputc>
 b5a:	89 14       	cp	r8, r9
 b5c:	38 f4       	brcc	.+14     	; 0xb6c <__stack+0x26d>
 b5e:	b6 01       	movw	r22, r12
 b60:	80 e3       	ldi	r24, 0x30	; 48
 b62:	90 e0       	ldi	r25, 0x00	; 0
 b64:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <fputc>
 b68:	9a 94       	dec	r9
 b6a:	f7 cf       	rjmp	.-18     	; 0xb5a <__stack+0x25b>
 b6c:	8a 94       	dec	r8
 b6e:	f3 01       	movw	r30, r6
 b70:	e8 0d       	add	r30, r8
 b72:	f1 1d       	adc	r31, r1
 b74:	80 81       	ld	r24, Z
 b76:	b6 01       	movw	r22, r12
 b78:	90 e0       	ldi	r25, 0x00	; 0
 b7a:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <fputc>
 b7e:	81 10       	cpse	r8, r1
 b80:	f5 cf       	rjmp	.-22     	; 0xb6c <__stack+0x26d>
 b82:	22 20       	and	r2, r2
 b84:	09 f4       	brne	.+2      	; 0xb88 <__stack+0x289>
 b86:	42 ce       	rjmp	.-892    	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 b88:	b6 01       	movw	r22, r12
 b8a:	80 e2       	ldi	r24, 0x20	; 32
 b8c:	90 e0       	ldi	r25, 0x00	; 0
 b8e:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <fputc>
 b92:	2a 94       	dec	r2
 b94:	f6 cf       	rjmp	.-20     	; 0xb82 <__stack+0x283>
 b96:	f6 01       	movw	r30, r12
 b98:	86 81       	ldd	r24, Z+6	; 0x06
 b9a:	97 81       	ldd	r25, Z+7	; 0x07
 b9c:	02 c0       	rjmp	.+4      	; 0xba2 <__stack+0x2a3>
 b9e:	8f ef       	ldi	r24, 0xFF	; 255
 ba0:	9f ef       	ldi	r25, 0xFF	; 255
 ba2:	2b 96       	adiw	r28, 0x0b	; 11
 ba4:	e2 e1       	ldi	r30, 0x12	; 18
 ba6:	0c 94 b1 06 	jmp	0xd62	; 0xd62 <__epilogue_restores__>

00000baa <strnlen_P>:
 baa:	fc 01       	movw	r30, r24
 bac:	05 90       	lpm	r0, Z+
 bae:	61 50       	subi	r22, 0x01	; 1
 bb0:	70 40       	sbci	r23, 0x00	; 0
 bb2:	01 10       	cpse	r0, r1
 bb4:	d8 f7       	brcc	.-10     	; 0xbac <strnlen_P+0x2>
 bb6:	80 95       	com	r24
 bb8:	90 95       	com	r25
 bba:	8e 0f       	add	r24, r30
 bbc:	9f 1f       	adc	r25, r31
 bbe:	08 95       	ret

00000bc0 <strnlen>:
 bc0:	fc 01       	movw	r30, r24
 bc2:	61 50       	subi	r22, 0x01	; 1
 bc4:	70 40       	sbci	r23, 0x00	; 0
 bc6:	01 90       	ld	r0, Z+
 bc8:	01 10       	cpse	r0, r1
 bca:	d8 f7       	brcc	.-10     	; 0xbc2 <strnlen+0x2>
 bcc:	80 95       	com	r24
 bce:	90 95       	com	r25
 bd0:	8e 0f       	add	r24, r30
 bd2:	9f 1f       	adc	r25, r31
 bd4:	08 95       	ret

00000bd6 <strrev>:
 bd6:	dc 01       	movw	r26, r24
 bd8:	fc 01       	movw	r30, r24
 bda:	67 2f       	mov	r22, r23
 bdc:	71 91       	ld	r23, Z+
 bde:	77 23       	and	r23, r23
 be0:	e1 f7       	brne	.-8      	; 0xbda <strrev+0x4>
 be2:	32 97       	sbiw	r30, 0x02	; 2
 be4:	04 c0       	rjmp	.+8      	; 0xbee <strrev+0x18>
 be6:	7c 91       	ld	r23, X
 be8:	6d 93       	st	X+, r22
 bea:	70 83       	st	Z, r23
 bec:	62 91       	ld	r22, -Z
 bee:	ae 17       	cp	r26, r30
 bf0:	bf 07       	cpc	r27, r31
 bf2:	c8 f3       	brcs	.-14     	; 0xbe6 <strrev+0x10>
 bf4:	08 95       	ret

00000bf6 <fputc>:
 bf6:	0f 93       	push	r16
 bf8:	1f 93       	push	r17
 bfa:	cf 93       	push	r28
 bfc:	df 93       	push	r29
 bfe:	fb 01       	movw	r30, r22
 c00:	23 81       	ldd	r18, Z+3	; 0x03
 c02:	21 fd       	sbrc	r18, 1
 c04:	03 c0       	rjmp	.+6      	; 0xc0c <fputc+0x16>
 c06:	8f ef       	ldi	r24, 0xFF	; 255
 c08:	9f ef       	ldi	r25, 0xFF	; 255
 c0a:	2c c0       	rjmp	.+88     	; 0xc64 <fputc+0x6e>
 c0c:	22 ff       	sbrs	r18, 2
 c0e:	16 c0       	rjmp	.+44     	; 0xc3c <fputc+0x46>
 c10:	46 81       	ldd	r20, Z+6	; 0x06
 c12:	57 81       	ldd	r21, Z+7	; 0x07
 c14:	24 81       	ldd	r18, Z+4	; 0x04
 c16:	35 81       	ldd	r19, Z+5	; 0x05
 c18:	42 17       	cp	r20, r18
 c1a:	53 07       	cpc	r21, r19
 c1c:	44 f4       	brge	.+16     	; 0xc2e <fputc+0x38>
 c1e:	a0 81       	ld	r26, Z
 c20:	b1 81       	ldd	r27, Z+1	; 0x01
 c22:	9d 01       	movw	r18, r26
 c24:	2f 5f       	subi	r18, 0xFF	; 255
 c26:	3f 4f       	sbci	r19, 0xFF	; 255
 c28:	31 83       	std	Z+1, r19	; 0x01
 c2a:	20 83       	st	Z, r18
 c2c:	8c 93       	st	X, r24
 c2e:	26 81       	ldd	r18, Z+6	; 0x06
 c30:	37 81       	ldd	r19, Z+7	; 0x07
 c32:	2f 5f       	subi	r18, 0xFF	; 255
 c34:	3f 4f       	sbci	r19, 0xFF	; 255
 c36:	37 83       	std	Z+7, r19	; 0x07
 c38:	26 83       	std	Z+6, r18	; 0x06
 c3a:	14 c0       	rjmp	.+40     	; 0xc64 <fputc+0x6e>
 c3c:	8b 01       	movw	r16, r22
 c3e:	ec 01       	movw	r28, r24
 c40:	fb 01       	movw	r30, r22
 c42:	00 84       	ldd	r0, Z+8	; 0x08
 c44:	f1 85       	ldd	r31, Z+9	; 0x09
 c46:	e0 2d       	mov	r30, r0
 c48:	09 95       	icall
 c4a:	89 2b       	or	r24, r25
 c4c:	e1 f6       	brne	.-72     	; 0xc06 <fputc+0x10>
 c4e:	d8 01       	movw	r26, r16
 c50:	16 96       	adiw	r26, 0x06	; 6
 c52:	8d 91       	ld	r24, X+
 c54:	9c 91       	ld	r25, X
 c56:	17 97       	sbiw	r26, 0x07	; 7
 c58:	01 96       	adiw	r24, 0x01	; 1
 c5a:	17 96       	adiw	r26, 0x07	; 7
 c5c:	9c 93       	st	X, r25
 c5e:	8e 93       	st	-X, r24
 c60:	16 97       	sbiw	r26, 0x06	; 6
 c62:	ce 01       	movw	r24, r28
 c64:	df 91       	pop	r29
 c66:	cf 91       	pop	r28
 c68:	1f 91       	pop	r17
 c6a:	0f 91       	pop	r16
 c6c:	08 95       	ret

00000c6e <__ultoa_invert>:
 c6e:	fa 01       	movw	r30, r20
 c70:	aa 27       	eor	r26, r26
 c72:	28 30       	cpi	r18, 0x08	; 8
 c74:	51 f1       	breq	.+84     	; 0xcca <__ultoa_invert+0x5c>
 c76:	20 31       	cpi	r18, 0x10	; 16
 c78:	81 f1       	breq	.+96     	; 0xcda <__ultoa_invert+0x6c>
 c7a:	e8 94       	clt
 c7c:	6f 93       	push	r22
 c7e:	6e 7f       	andi	r22, 0xFE	; 254
 c80:	6e 5f       	subi	r22, 0xFE	; 254
 c82:	7f 4f       	sbci	r23, 0xFF	; 255
 c84:	8f 4f       	sbci	r24, 0xFF	; 255
 c86:	9f 4f       	sbci	r25, 0xFF	; 255
 c88:	af 4f       	sbci	r26, 0xFF	; 255
 c8a:	b1 e0       	ldi	r27, 0x01	; 1
 c8c:	3e d0       	rcall	.+124    	; 0xd0a <__ultoa_invert+0x9c>
 c8e:	b4 e0       	ldi	r27, 0x04	; 4
 c90:	3c d0       	rcall	.+120    	; 0xd0a <__ultoa_invert+0x9c>
 c92:	67 0f       	add	r22, r23
 c94:	78 1f       	adc	r23, r24
 c96:	89 1f       	adc	r24, r25
 c98:	9a 1f       	adc	r25, r26
 c9a:	a1 1d       	adc	r26, r1
 c9c:	68 0f       	add	r22, r24
 c9e:	79 1f       	adc	r23, r25
 ca0:	8a 1f       	adc	r24, r26
 ca2:	91 1d       	adc	r25, r1
 ca4:	a1 1d       	adc	r26, r1
 ca6:	6a 0f       	add	r22, r26
 ca8:	71 1d       	adc	r23, r1
 caa:	81 1d       	adc	r24, r1
 cac:	91 1d       	adc	r25, r1
 cae:	a1 1d       	adc	r26, r1
 cb0:	20 d0       	rcall	.+64     	; 0xcf2 <__ultoa_invert+0x84>
 cb2:	09 f4       	brne	.+2      	; 0xcb6 <__ultoa_invert+0x48>
 cb4:	68 94       	set
 cb6:	3f 91       	pop	r19
 cb8:	2a e0       	ldi	r18, 0x0A	; 10
 cba:	26 9f       	mul	r18, r22
 cbc:	11 24       	eor	r1, r1
 cbe:	30 19       	sub	r19, r0
 cc0:	30 5d       	subi	r19, 0xD0	; 208
 cc2:	31 93       	st	Z+, r19
 cc4:	de f6       	brtc	.-74     	; 0xc7c <__ultoa_invert+0xe>
 cc6:	cf 01       	movw	r24, r30
 cc8:	08 95       	ret
 cca:	46 2f       	mov	r20, r22
 ccc:	47 70       	andi	r20, 0x07	; 7
 cce:	40 5d       	subi	r20, 0xD0	; 208
 cd0:	41 93       	st	Z+, r20
 cd2:	b3 e0       	ldi	r27, 0x03	; 3
 cd4:	0f d0       	rcall	.+30     	; 0xcf4 <__ultoa_invert+0x86>
 cd6:	c9 f7       	brne	.-14     	; 0xcca <__ultoa_invert+0x5c>
 cd8:	f6 cf       	rjmp	.-20     	; 0xcc6 <__ultoa_invert+0x58>
 cda:	46 2f       	mov	r20, r22
 cdc:	4f 70       	andi	r20, 0x0F	; 15
 cde:	40 5d       	subi	r20, 0xD0	; 208
 ce0:	4a 33       	cpi	r20, 0x3A	; 58
 ce2:	18 f0       	brcs	.+6      	; 0xcea <__ultoa_invert+0x7c>
 ce4:	49 5d       	subi	r20, 0xD9	; 217
 ce6:	31 fd       	sbrc	r19, 1
 ce8:	40 52       	subi	r20, 0x20	; 32
 cea:	41 93       	st	Z+, r20
 cec:	02 d0       	rcall	.+4      	; 0xcf2 <__ultoa_invert+0x84>
 cee:	a9 f7       	brne	.-22     	; 0xcda <__ultoa_invert+0x6c>
 cf0:	ea cf       	rjmp	.-44     	; 0xcc6 <__ultoa_invert+0x58>
 cf2:	b4 e0       	ldi	r27, 0x04	; 4
 cf4:	a6 95       	lsr	r26
 cf6:	97 95       	ror	r25
 cf8:	87 95       	ror	r24
 cfa:	77 95       	ror	r23
 cfc:	67 95       	ror	r22
 cfe:	ba 95       	dec	r27
 d00:	c9 f7       	brne	.-14     	; 0xcf4 <__ultoa_invert+0x86>
 d02:	00 97       	sbiw	r24, 0x00	; 0
 d04:	61 05       	cpc	r22, r1
 d06:	71 05       	cpc	r23, r1
 d08:	08 95       	ret
 d0a:	9b 01       	movw	r18, r22
 d0c:	ac 01       	movw	r20, r24
 d0e:	0a 2e       	mov	r0, r26
 d10:	06 94       	lsr	r0
 d12:	57 95       	ror	r21
 d14:	47 95       	ror	r20
 d16:	37 95       	ror	r19
 d18:	27 95       	ror	r18
 d1a:	ba 95       	dec	r27
 d1c:	c9 f7       	brne	.-14     	; 0xd10 <__ultoa_invert+0xa2>
 d1e:	62 0f       	add	r22, r18
 d20:	73 1f       	adc	r23, r19
 d22:	84 1f       	adc	r24, r20
 d24:	95 1f       	adc	r25, r21
 d26:	a0 1d       	adc	r26, r0
 d28:	08 95       	ret

00000d2a <__prologue_saves__>:
 d2a:	2f 92       	push	r2
 d2c:	3f 92       	push	r3
 d2e:	4f 92       	push	r4
 d30:	5f 92       	push	r5
 d32:	6f 92       	push	r6
 d34:	7f 92       	push	r7
 d36:	8f 92       	push	r8
 d38:	9f 92       	push	r9
 d3a:	af 92       	push	r10
 d3c:	bf 92       	push	r11
 d3e:	cf 92       	push	r12
 d40:	df 92       	push	r13
 d42:	ef 92       	push	r14
 d44:	ff 92       	push	r15
 d46:	0f 93       	push	r16
 d48:	1f 93       	push	r17
 d4a:	cf 93       	push	r28
 d4c:	df 93       	push	r29
 d4e:	cd b7       	in	r28, 0x3d	; 61
 d50:	de b7       	in	r29, 0x3e	; 62
 d52:	ca 1b       	sub	r28, r26
 d54:	db 0b       	sbc	r29, r27
 d56:	0f b6       	in	r0, 0x3f	; 63
 d58:	f8 94       	cli
 d5a:	de bf       	out	0x3e, r29	; 62
 d5c:	0f be       	out	0x3f, r0	; 63
 d5e:	cd bf       	out	0x3d, r28	; 61
 d60:	09 94       	ijmp

00000d62 <__epilogue_restores__>:
 d62:	2a 88       	ldd	r2, Y+18	; 0x12
 d64:	39 88       	ldd	r3, Y+17	; 0x11
 d66:	48 88       	ldd	r4, Y+16	; 0x10
 d68:	5f 84       	ldd	r5, Y+15	; 0x0f
 d6a:	6e 84       	ldd	r6, Y+14	; 0x0e
 d6c:	7d 84       	ldd	r7, Y+13	; 0x0d
 d6e:	8c 84       	ldd	r8, Y+12	; 0x0c
 d70:	9b 84       	ldd	r9, Y+11	; 0x0b
 d72:	aa 84       	ldd	r10, Y+10	; 0x0a
 d74:	b9 84       	ldd	r11, Y+9	; 0x09
 d76:	c8 84       	ldd	r12, Y+8	; 0x08
 d78:	df 80       	ldd	r13, Y+7	; 0x07
 d7a:	ee 80       	ldd	r14, Y+6	; 0x06
 d7c:	fd 80       	ldd	r15, Y+5	; 0x05
 d7e:	0c 81       	ldd	r16, Y+4	; 0x04
 d80:	1b 81       	ldd	r17, Y+3	; 0x03
 d82:	aa 81       	ldd	r26, Y+2	; 0x02
 d84:	b9 81       	ldd	r27, Y+1	; 0x01
 d86:	ce 0f       	add	r28, r30
 d88:	d1 1d       	adc	r29, r1
 d8a:	0f b6       	in	r0, 0x3f	; 63
 d8c:	f8 94       	cli
 d8e:	de bf       	out	0x3e, r29	; 62
 d90:	0f be       	out	0x3f, r0	; 63
 d92:	cd bf       	out	0x3d, r28	; 61
 d94:	ed 01       	movw	r28, r26
 d96:	08 95       	ret

00000d98 <_exit>:
 d98:	f8 94       	cli

00000d9a <__stop_program>:
 d9a:	ff cf       	rjmp	.-2      	; 0xd9a <__stop_program>
