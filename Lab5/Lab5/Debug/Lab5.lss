
Lab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000036  00800100  00000d7c  00000df0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d7c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000e26  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e84  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000ec4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000bce  00000000  00000000  00000f34  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000826  00000000  00000000  00001b02  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000432  00000000  00000000  00002328  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001a0  00000000  00000000  0000275c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000483  00000000  00000000  000028fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000527  00000000  00000000  00002d7f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  000032a6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e7       	ldi	r30, 0x7C	; 124
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 33       	cpi	r26, 0x36	; 54
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 75 01 	call	0x2ea	; 0x2ea <main>
  8e:	0c 94 bc 06 	jmp	0xd78	; 0xd78 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <usart_tx>:
	clock_t start_time = clock();
	
	// looping till required time is not achieved
	while (clock() < start_time + milli_seconds)
	;
}
  96:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  9a:	95 ff       	sbrs	r25, 5
  9c:	fc cf       	rjmp	.-8      	; 0x96 <usart_tx>
  9e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  a2:	08 95       	ret

000000a4 <print>:
  a4:	0f 93       	push	r16
  a6:	1f 93       	push	r17
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
  ac:	8c 01       	movw	r16, r24
  ae:	c0 e0       	ldi	r28, 0x00	; 0
  b0:	d0 e0       	ldi	r29, 0x00	; 0
  b2:	07 c0       	rjmp	.+14     	; 0xc2 <print+0x1e>
  b4:	f8 01       	movw	r30, r16
  b6:	ec 0f       	add	r30, r28
  b8:	fd 1f       	adc	r31, r29
  ba:	80 81       	ld	r24, Z
  bc:	0e 94 4b 00 	call	0x96	; 0x96 <usart_tx>
  c0:	21 96       	adiw	r28, 0x01	; 1
  c2:	f8 01       	movw	r30, r16
  c4:	01 90       	ld	r0, Z+
  c6:	00 20       	and	r0, r0
  c8:	e9 f7       	brne	.-6      	; 0xc4 <print+0x20>
  ca:	31 97       	sbiw	r30, 0x01	; 1
  cc:	e0 1b       	sub	r30, r16
  ce:	f1 0b       	sbc	r31, r17
  d0:	ce 17       	cp	r28, r30
  d2:	df 07       	cpc	r29, r31
  d4:	78 f3       	brcs	.-34     	; 0xb4 <print+0x10>
  d6:	df 91       	pop	r29
  d8:	cf 91       	pop	r28
  da:	1f 91       	pop	r17
  dc:	0f 91       	pop	r16
  de:	08 95       	ret

000000e0 <usart_init>:
  e0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  e4:	87 e6       	ldi	r24, 0x67	; 103
  e6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  ea:	e2 ec       	ldi	r30, 0xC2	; 194
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	86 60       	ori	r24, 0x06	; 6
  f2:	80 83       	st	Z, r24
  f4:	e1 ec       	ldi	r30, 0xC1	; 193
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	88 61       	ori	r24, 0x18	; 24
  fc:	80 83       	st	Z, r24
  fe:	08 95       	ret

00000100 <adc_read>:
 100:	ea e7       	ldi	r30, 0x7A	; 122
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	80 64       	ori	r24, 0x40	; 64
 108:	80 83       	st	Z, r24
 10a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 10e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 112:	08 95       	ret

00000114 <usart_rx>:
 114:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 118:	88 23       	and	r24, r24
 11a:	e4 f7       	brge	.-8      	; 0x114 <usart_rx>
 11c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	08 95       	ret

00000124 <adc_init>:
 124:	ec e7       	ldi	r30, 0x7C	; 124
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	80 81       	ld	r24, Z
 12a:	81 64       	ori	r24, 0x41	; 65
 12c:	80 83       	st	Z, r24
 12e:	ea e7       	ldi	r30, 0x7A	; 122
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	80 81       	ld	r24, Z
 134:	87 6c       	ori	r24, 0xC7	; 199
 136:	80 83       	st	Z, r24
 138:	08 95       	ret

0000013a <adc_get_double>:
 13a:	0e 94 80 00 	call	0x100	; 0x100 <adc_read>
 13e:	bc 01       	movw	r22, r24
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <__floatunsisf>
 148:	20 e0       	ldi	r18, 0x00	; 0
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	40 ea       	ldi	r20, 0xA0	; 160
 14e:	50 e4       	ldi	r21, 0x40	; 64
 150:	0e 94 0a 03 	call	0x614	; 0x614 <__mulsf3>
 154:	20 e0       	ldi	r18, 0x00	; 0
 156:	30 e0       	ldi	r19, 0x00	; 0
 158:	40 e8       	ldi	r20, 0x80	; 128
 15a:	5a e3       	ldi	r21, 0x3A	; 58
 15c:	0e 94 0a 03 	call	0x614	; 0x614 <__mulsf3>
 160:	08 95       	ret

00000162 <measure_multiple>:

/////////////////////////
// Function: measure_multiple
// Purpose: execute multiple measurements following M command
/////////////////////////
void measure_multiple(int n, int dt){
 162:	2f 92       	push	r2
 164:	3f 92       	push	r3
 166:	4f 92       	push	r4
 168:	5f 92       	push	r5
 16a:	6f 92       	push	r6
 16c:	7f 92       	push	r7
 16e:	8f 92       	push	r8
 170:	9f 92       	push	r9
 172:	af 92       	push	r10
 174:	bf 92       	push	r11
 176:	cf 92       	push	r12
 178:	df 92       	push	r13
 17a:	ef 92       	push	r14
 17c:	ff 92       	push	r15
 17e:	0f 93       	push	r16
 180:	1f 93       	push	r17
 182:	cf 93       	push	r28
 184:	df 93       	push	r29
 186:	00 d0       	rcall	.+0      	; 0x188 <measure_multiple+0x26>
 188:	00 d0       	rcall	.+0      	; 0x18a <measure_multiple+0x28>
 18a:	1f 92       	push	r1
 18c:	cd b7       	in	r28, 0x3d	; 61
 18e:	de b7       	in	r29, 0x3e	; 62
 190:	6c 01       	movw	r12, r24
 192:	1b 01       	movw	r2, r22
	char out[5];
	int dt_out = dt;
 194:	7b 01       	movw	r14, r22
	while (n > 0){
 196:	51 c0       	rjmp	.+162    	; 0x23a <measure_multiple+0xd8>
		print("t = ");
 198:	80 e0       	ldi	r24, 0x00	; 0
 19a:	91 e0       	ldi	r25, 0x01	; 1
 19c:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		sprintf(out,"%i",dt_out);
 1a0:	ff 92       	push	r15
 1a2:	ef 92       	push	r14
 1a4:	85 e0       	ldi	r24, 0x05	; 5
 1a6:	91 e0       	ldi	r25, 0x01	; 1
 1a8:	9f 93       	push	r25
 1aa:	8f 93       	push	r24
 1ac:	8e 01       	movw	r16, r28
 1ae:	0f 5f       	subi	r16, 0xFF	; 255
 1b0:	1f 4f       	sbci	r17, 0xFF	; 255
 1b2:	1f 93       	push	r17
 1b4:	0f 93       	push	r16
 1b6:	0e 94 c2 03 	call	0x784	; 0x784 <sprintf>
		print(out);
 1ba:	c8 01       	movw	r24, r16
 1bc:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		print(" s, V = ");
 1c0:	88 e0       	ldi	r24, 0x08	; 8
 1c2:	91 e0       	ldi	r25, 0x01	; 1
 1c4:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		double v = adc_get_double();
 1c8:	0e 94 9d 00 	call	0x13a	; 0x13a <adc_get_double>
 1cc:	2b 01       	movw	r4, r22
 1ce:	3c 01       	movw	r6, r24
		sprintf(out,"%d.%02u", (int) v, (int) ((v - (int) v ) * 100) );
 1d0:	0e 94 46 02 	call	0x48c	; 0x48c <__fixsfsi>
 1d4:	4b 01       	movw	r8, r22
 1d6:	5c 01       	movw	r10, r24
 1d8:	07 2e       	mov	r0, r23
 1da:	00 0c       	add	r0, r0
 1dc:	88 0b       	sbc	r24, r24
 1de:	99 0b       	sbc	r25, r25
 1e0:	0e 94 7e 02 	call	0x4fc	; 0x4fc <__floatsisf>
 1e4:	9b 01       	movw	r18, r22
 1e6:	ac 01       	movw	r20, r24
 1e8:	c3 01       	movw	r24, r6
 1ea:	b2 01       	movw	r22, r4
 1ec:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <__subsf3>
 1f0:	20 e0       	ldi	r18, 0x00	; 0
 1f2:	30 e0       	ldi	r19, 0x00	; 0
 1f4:	48 ec       	ldi	r20, 0xC8	; 200
 1f6:	52 e4       	ldi	r21, 0x42	; 66
 1f8:	0e 94 0a 03 	call	0x614	; 0x614 <__mulsf3>
 1fc:	0e 94 46 02 	call	0x48c	; 0x48c <__fixsfsi>
 200:	7f 93       	push	r23
 202:	6f 93       	push	r22
 204:	9f 92       	push	r9
 206:	8f 92       	push	r8
 208:	81 e1       	ldi	r24, 0x11	; 17
 20a:	91 e0       	ldi	r25, 0x01	; 1
 20c:	9f 93       	push	r25
 20e:	8f 93       	push	r24
 210:	1f 93       	push	r17
 212:	0f 93       	push	r16
 214:	0e 94 c2 03 	call	0x784	; 0x784 <sprintf>
		print(out);
 218:	c8 01       	movw	r24, r16
 21a:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		print("V\n");
 21e:	89 e1       	ldi	r24, 0x19	; 25
 220:	91 e0       	ldi	r25, 0x01	; 1
 222:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		
		n = n - 1;
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	c8 1a       	sub	r12, r24
 22a:	d1 08       	sbc	r13, r1
		dt_out = dt_out + dt;
 22c:	e2 0c       	add	r14, r2
 22e:	f3 1c       	adc	r15, r3
 230:	0f b6       	in	r0, 0x3f	; 63
 232:	f8 94       	cli
 234:	de bf       	out	0x3e, r29	; 62
 236:	0f be       	out	0x3f, r0	; 63
 238:	cd bf       	out	0x3d, r28	; 61
// Purpose: execute multiple measurements following M command
/////////////////////////
void measure_multiple(int n, int dt){
	char out[5];
	int dt_out = dt;
	while (n > 0){
 23a:	1c 14       	cp	r1, r12
 23c:	1d 04       	cpc	r1, r13
 23e:	0c f4       	brge	.+2      	; 0x242 <measure_multiple+0xe0>
 240:	ab cf       	rjmp	.-170    	; 0x198 <measure_multiple+0x36>
		n = n - 1;
		dt_out = dt_out + dt;
		//delay(dt);  TODO: figure out why this is throwing an error
		
	}
}
 242:	0f 90       	pop	r0
 244:	0f 90       	pop	r0
 246:	0f 90       	pop	r0
 248:	0f 90       	pop	r0
 24a:	0f 90       	pop	r0
 24c:	df 91       	pop	r29
 24e:	cf 91       	pop	r28
 250:	1f 91       	pop	r17
 252:	0f 91       	pop	r16
 254:	ff 90       	pop	r15
 256:	ef 90       	pop	r14
 258:	df 90       	pop	r13
 25a:	cf 90       	pop	r12
 25c:	bf 90       	pop	r11
 25e:	af 90       	pop	r10
 260:	9f 90       	pop	r9
 262:	8f 90       	pop	r8
 264:	7f 90       	pop	r7
 266:	6f 90       	pop	r6
 268:	5f 90       	pop	r5
 26a:	4f 90       	pop	r4
 26c:	3f 90       	pop	r3
 26e:	2f 90       	pop	r2
 270:	08 95       	ret

00000272 <get_string>:

////////////////////////
// Function: get_string
// Purpose: gets string from serial monitor
///////////////
const char* get_string(char input_str[]){
 272:	cf 92       	push	r12
 274:	df 92       	push	r13
 276:	ef 92       	push	r14
 278:	ff 92       	push	r15
 27a:	0f 93       	push	r16
 27c:	1f 93       	push	r17
 27e:	cf 93       	push	r28
 280:	df 93       	push	r29
 282:	cd b7       	in	r28, 0x3d	; 61
 284:	de b7       	in	r29, 0x3e	; 62
 286:	2a 97       	sbiw	r28, 0x0a	; 10
 288:	0f b6       	in	r0, 0x3f	; 63
 28a:	f8 94       	cli
 28c:	de bf       	out	0x3e, r29	; 62
 28e:	0f be       	out	0x3f, r0	; 63
 290:	cd bf       	out	0x3d, r28	; 61
 292:	6c 01       	movw	r12, r24
	char buffer[10];
	uint16_t input = usart_rx();
 294:	0e 94 8a 00 	call	0x114	; 0x114 <usart_rx>
	
	int i = 0;
 298:	00 e0       	ldi	r16, 0x00	; 0
 29a:	10 e0       	ldi	r17, 0x00	; 0
	while (input != 10){
 29c:	13 c0       	rjmp	.+38     	; 0x2c4 <get_string+0x52>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 29e:	4a e0       	ldi	r20, 0x0A	; 10
 2a0:	be 01       	movw	r22, r28
 2a2:	6f 5f       	subi	r22, 0xFF	; 255
 2a4:	7f 4f       	sbci	r23, 0xFF	; 255
 2a6:	0e 94 95 03 	call	0x72a	; 0x72a <__itoa_ncheck>
		itoa(input, buffer, 10);
		//print(buffer);
		input_str[i] = atoi(buffer);
 2aa:	76 01       	movw	r14, r12
 2ac:	e0 0e       	add	r14, r16
 2ae:	f1 1e       	adc	r15, r17
 2b0:	ce 01       	movw	r24, r28
 2b2:	01 96       	adiw	r24, 0x01	; 1
 2b4:	0e 94 77 03 	call	0x6ee	; 0x6ee <atoi>
 2b8:	f7 01       	movw	r30, r14
 2ba:	80 83       	st	Z, r24
		i = i + 1;
 2bc:	0f 5f       	subi	r16, 0xFF	; 255
 2be:	1f 4f       	sbci	r17, 0xFF	; 255
		input = usart_rx();
 2c0:	0e 94 8a 00 	call	0x114	; 0x114 <usart_rx>
const char* get_string(char input_str[]){
	char buffer[10];
	uint16_t input = usart_rx();
	
	int i = 0;
	while (input != 10){
 2c4:	8a 30       	cpi	r24, 0x0A	; 10
 2c6:	91 05       	cpc	r25, r1
 2c8:	51 f7       	brne	.-44     	; 0x29e <get_string+0x2c>
		i = i + 1;
		input = usart_rx();
	}
	
	return input_str;
}
 2ca:	c6 01       	movw	r24, r12
 2cc:	2a 96       	adiw	r28, 0x0a	; 10
 2ce:	0f b6       	in	r0, 0x3f	; 63
 2d0:	f8 94       	cli
 2d2:	de bf       	out	0x3e, r29	; 62
 2d4:	0f be       	out	0x3f, r0	; 63
 2d6:	cd bf       	out	0x3d, r28	; 61
 2d8:	df 91       	pop	r29
 2da:	cf 91       	pop	r28
 2dc:	1f 91       	pop	r17
 2de:	0f 91       	pop	r16
 2e0:	ff 90       	pop	r15
 2e2:	ef 90       	pop	r14
 2e4:	df 90       	pop	r13
 2e6:	cf 90       	pop	r12
 2e8:	08 95       	ret

000002ea <main>:
//
// Purpose: Drives the program
//
////////////////////////////////////////////////////////////////////
int main(void)
{	
 2ea:	cf 93       	push	r28
 2ec:	df 93       	push	r29
 2ee:	cd b7       	in	r28, 0x3d	; 61
 2f0:	de b7       	in	r29, 0x3e	; 62
 2f2:	6e 97       	sbiw	r28, 0x1e	; 30
 2f4:	0f b6       	in	r0, 0x3f	; 63
 2f6:	f8 94       	cli
 2f8:	de bf       	out	0x3e, r29	; 62
 2fa:	0f be       	out	0x3f, r0	; 63
 2fc:	cd bf       	out	0x3d, r28	; 61
	// Initializations
	usart_init();    
 2fe:	0e 94 70 00 	call	0xe0	; 0xe0 <usart_init>
	adc_init();
 302:	0e 94 92 00 	call	0x124	; 0x124 <adc_init>

	// main loop
    while (1)
    {	
		char input_str[10] = {};
 306:	8e 01       	movw	r16, r28
 308:	0b 5e       	subi	r16, 0xEB	; 235
 30a:	1f 4f       	sbci	r17, 0xFF	; 255
 30c:	8a e0       	ldi	r24, 0x0A	; 10
 30e:	f8 01       	movw	r30, r16
 310:	11 92       	st	Z+, r1
 312:	8a 95       	dec	r24
 314:	e9 f7       	brne	.-6      	; 0x310 <main+0x26>
		char output_str[20];
		get_string(input_str);
 316:	c8 01       	movw	r24, r16
 318:	0e 94 39 01 	call	0x272	; 0x272 <get_string>
		
		print("input_str: ");
 31c:	8c e1       	ldi	r24, 0x1C	; 28
 31e:	91 e0       	ldi	r25, 0x01	; 1
 320:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		print(input_str);
 324:	c8 01       	movw	r24, r16
 326:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		print("\n");
 32a:	8a e1       	ldi	r24, 0x1A	; 26
 32c:	91 e0       	ldi	r25, 0x01	; 1
 32e:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
	
		
		if (input_str[0] == 71){ // G
 332:	8d 89       	ldd	r24, Y+21	; 0x15
 334:	87 34       	cpi	r24, 0x47	; 71
 336:	91 f5       	brne	.+100    	; 0x39c <main+0xb2>
			double v = adc_get_double();
 338:	0e 94 9d 00 	call	0x13a	; 0x13a <adc_get_double>
 33c:	4b 01       	movw	r8, r22
 33e:	5c 01       	movw	r10, r24
			//print("G");
			sprintf(output_str,"V = %d.%02u V", (int) v, (int) ((v - (int) v ) * 100) );
 340:	0e 94 46 02 	call	0x48c	; 0x48c <__fixsfsi>
 344:	6b 01       	movw	r12, r22
 346:	7c 01       	movw	r14, r24
 348:	07 2e       	mov	r0, r23
 34a:	00 0c       	add	r0, r0
 34c:	88 0b       	sbc	r24, r24
 34e:	99 0b       	sbc	r25, r25
 350:	0e 94 7e 02 	call	0x4fc	; 0x4fc <__floatsisf>
 354:	9b 01       	movw	r18, r22
 356:	ac 01       	movw	r20, r24
 358:	c5 01       	movw	r24, r10
 35a:	b4 01       	movw	r22, r8
 35c:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <__subsf3>
 360:	20 e0       	ldi	r18, 0x00	; 0
 362:	30 e0       	ldi	r19, 0x00	; 0
 364:	48 ec       	ldi	r20, 0xC8	; 200
 366:	52 e4       	ldi	r21, 0x42	; 66
 368:	0e 94 0a 03 	call	0x614	; 0x614 <__mulsf3>
 36c:	0e 94 46 02 	call	0x48c	; 0x48c <__fixsfsi>
 370:	7f 93       	push	r23
 372:	6f 93       	push	r22
 374:	df 92       	push	r13
 376:	cf 92       	push	r12
 378:	88 e2       	ldi	r24, 0x28	; 40
 37a:	91 e0       	ldi	r25, 0x01	; 1
 37c:	9f 93       	push	r25
 37e:	8f 93       	push	r24
 380:	04 51       	subi	r16, 0x14	; 20
 382:	11 09       	sbc	r17, r1
 384:	1f 93       	push	r17
 386:	0f 93       	push	r16
 388:	0e 94 c2 03 	call	0x784	; 0x784 <sprintf>
			print(output_str);
 38c:	c8 01       	movw	r24, r16
 38e:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
 392:	0f b6       	in	r0, 0x3f	; 63
 394:	f8 94       	cli
 396:	de bf       	out	0x3e, r29	; 62
 398:	0f be       	out	0x3f, r0	; 63
 39a:	cd bf       	out	0x3d, r28	; 61
		}
		if (input_str[0] == 77){ // M
 39c:	8d 89       	ldd	r24, Y+21	; 0x15
 39e:	8d 34       	cpi	r24, 0x4D	; 77
 3a0:	09 f0       	breq	.+2      	; 0x3a4 <main+0xba>
 3a2:	b1 cf       	rjmp	.-158    	; 0x306 <main+0x1c>
			measure_multiple(5,10); // dummy values right now
 3a4:	6a e0       	ldi	r22, 0x0A	; 10
 3a6:	70 e0       	ldi	r23, 0x00	; 0
 3a8:	85 e0       	ldi	r24, 0x05	; 5
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	0e 94 b1 00 	call	0x162	; 0x162 <measure_multiple>
		}
    }
 3b0:	aa cf       	rjmp	.-172    	; 0x306 <main+0x1c>

000003b2 <__subsf3>:
 3b2:	50 58       	subi	r21, 0x80	; 128

000003b4 <__addsf3>:
 3b4:	bb 27       	eor	r27, r27
 3b6:	aa 27       	eor	r26, r26
 3b8:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__addsf3x>
 3bc:	0c 94 d0 02 	jmp	0x5a0	; 0x5a0 <__fp_round>
 3c0:	0e 94 c2 02 	call	0x584	; 0x584 <__fp_pscA>
 3c4:	38 f0       	brcs	.+14     	; 0x3d4 <__addsf3+0x20>
 3c6:	0e 94 c9 02 	call	0x592	; 0x592 <__fp_pscB>
 3ca:	20 f0       	brcs	.+8      	; 0x3d4 <__addsf3+0x20>
 3cc:	39 f4       	brne	.+14     	; 0x3dc <__addsf3+0x28>
 3ce:	9f 3f       	cpi	r25, 0xFF	; 255
 3d0:	19 f4       	brne	.+6      	; 0x3d8 <__addsf3+0x24>
 3d2:	26 f4       	brtc	.+8      	; 0x3dc <__addsf3+0x28>
 3d4:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__fp_nan>
 3d8:	0e f4       	brtc	.+2      	; 0x3dc <__addsf3+0x28>
 3da:	e0 95       	com	r30
 3dc:	e7 fb       	bst	r30, 7
 3de:	0c 94 b9 02 	jmp	0x572	; 0x572 <__fp_inf>

000003e2 <__addsf3x>:
 3e2:	e9 2f       	mov	r30, r25
 3e4:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__fp_split3>
 3e8:	58 f3       	brcs	.-42     	; 0x3c0 <__addsf3+0xc>
 3ea:	ba 17       	cp	r27, r26
 3ec:	62 07       	cpc	r22, r18
 3ee:	73 07       	cpc	r23, r19
 3f0:	84 07       	cpc	r24, r20
 3f2:	95 07       	cpc	r25, r21
 3f4:	20 f0       	brcs	.+8      	; 0x3fe <__addsf3x+0x1c>
 3f6:	79 f4       	brne	.+30     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 3f8:	a6 f5       	brtc	.+104    	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 3fa:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_zero>
 3fe:	0e f4       	brtc	.+2      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 400:	e0 95       	com	r30
 402:	0b 2e       	mov	r0, r27
 404:	ba 2f       	mov	r27, r26
 406:	a0 2d       	mov	r26, r0
 408:	0b 01       	movw	r0, r22
 40a:	b9 01       	movw	r22, r18
 40c:	90 01       	movw	r18, r0
 40e:	0c 01       	movw	r0, r24
 410:	ca 01       	movw	r24, r20
 412:	a0 01       	movw	r20, r0
 414:	11 24       	eor	r1, r1
 416:	ff 27       	eor	r31, r31
 418:	59 1b       	sub	r21, r25
 41a:	99 f0       	breq	.+38     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 41c:	59 3f       	cpi	r21, 0xF9	; 249
 41e:	50 f4       	brcc	.+20     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 420:	50 3e       	cpi	r21, 0xE0	; 224
 422:	68 f1       	brcs	.+90     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 424:	1a 16       	cp	r1, r26
 426:	f0 40       	sbci	r31, 0x00	; 0
 428:	a2 2f       	mov	r26, r18
 42a:	23 2f       	mov	r18, r19
 42c:	34 2f       	mov	r19, r20
 42e:	44 27       	eor	r20, r20
 430:	58 5f       	subi	r21, 0xF8	; 248
 432:	f3 cf       	rjmp	.-26     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 434:	46 95       	lsr	r20
 436:	37 95       	ror	r19
 438:	27 95       	ror	r18
 43a:	a7 95       	ror	r26
 43c:	f0 40       	sbci	r31, 0x00	; 0
 43e:	53 95       	inc	r21
 440:	c9 f7       	brne	.-14     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 442:	7e f4       	brtc	.+30     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 444:	1f 16       	cp	r1, r31
 446:	ba 0b       	sbc	r27, r26
 448:	62 0b       	sbc	r22, r18
 44a:	73 0b       	sbc	r23, r19
 44c:	84 0b       	sbc	r24, r20
 44e:	ba f0       	brmi	.+46     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 450:	91 50       	subi	r25, 0x01	; 1
 452:	a1 f0       	breq	.+40     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 454:	ff 0f       	add	r31, r31
 456:	bb 1f       	adc	r27, r27
 458:	66 1f       	adc	r22, r22
 45a:	77 1f       	adc	r23, r23
 45c:	88 1f       	adc	r24, r24
 45e:	c2 f7       	brpl	.-16     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 460:	0e c0       	rjmp	.+28     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 462:	ba 0f       	add	r27, r26
 464:	62 1f       	adc	r22, r18
 466:	73 1f       	adc	r23, r19
 468:	84 1f       	adc	r24, r20
 46a:	48 f4       	brcc	.+18     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 46c:	87 95       	ror	r24
 46e:	77 95       	ror	r23
 470:	67 95       	ror	r22
 472:	b7 95       	ror	r27
 474:	f7 95       	ror	r31
 476:	9e 3f       	cpi	r25, 0xFE	; 254
 478:	08 f0       	brcs	.+2      	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 47a:	b0 cf       	rjmp	.-160    	; 0x3dc <__addsf3+0x28>
 47c:	93 95       	inc	r25
 47e:	88 0f       	add	r24, r24
 480:	08 f0       	brcs	.+2      	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
 482:	99 27       	eor	r25, r25
 484:	ee 0f       	add	r30, r30
 486:	97 95       	ror	r25
 488:	87 95       	ror	r24
 48a:	08 95       	ret

0000048c <__fixsfsi>:
 48c:	0e 94 4d 02 	call	0x49a	; 0x49a <__fixunssfsi>
 490:	68 94       	set
 492:	b1 11       	cpse	r27, r1
 494:	0c 94 04 03 	jmp	0x608	; 0x608 <__fp_szero>
 498:	08 95       	ret

0000049a <__fixunssfsi>:
 49a:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <__fp_splitA>
 49e:	88 f0       	brcs	.+34     	; 0x4c2 <__fixunssfsi+0x28>
 4a0:	9f 57       	subi	r25, 0x7F	; 127
 4a2:	98 f0       	brcs	.+38     	; 0x4ca <__fixunssfsi+0x30>
 4a4:	b9 2f       	mov	r27, r25
 4a6:	99 27       	eor	r25, r25
 4a8:	b7 51       	subi	r27, 0x17	; 23
 4aa:	b0 f0       	brcs	.+44     	; 0x4d8 <__fixunssfsi+0x3e>
 4ac:	e1 f0       	breq	.+56     	; 0x4e6 <__fixunssfsi+0x4c>
 4ae:	66 0f       	add	r22, r22
 4b0:	77 1f       	adc	r23, r23
 4b2:	88 1f       	adc	r24, r24
 4b4:	99 1f       	adc	r25, r25
 4b6:	1a f0       	brmi	.+6      	; 0x4be <__fixunssfsi+0x24>
 4b8:	ba 95       	dec	r27
 4ba:	c9 f7       	brne	.-14     	; 0x4ae <__fixunssfsi+0x14>
 4bc:	14 c0       	rjmp	.+40     	; 0x4e6 <__fixunssfsi+0x4c>
 4be:	b1 30       	cpi	r27, 0x01	; 1
 4c0:	91 f0       	breq	.+36     	; 0x4e6 <__fixunssfsi+0x4c>
 4c2:	0e 94 03 03 	call	0x606	; 0x606 <__fp_zero>
 4c6:	b1 e0       	ldi	r27, 0x01	; 1
 4c8:	08 95       	ret
 4ca:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_zero>
 4ce:	67 2f       	mov	r22, r23
 4d0:	78 2f       	mov	r23, r24
 4d2:	88 27       	eor	r24, r24
 4d4:	b8 5f       	subi	r27, 0xF8	; 248
 4d6:	39 f0       	breq	.+14     	; 0x4e6 <__fixunssfsi+0x4c>
 4d8:	b9 3f       	cpi	r27, 0xF9	; 249
 4da:	cc f3       	brlt	.-14     	; 0x4ce <__fixunssfsi+0x34>
 4dc:	86 95       	lsr	r24
 4de:	77 95       	ror	r23
 4e0:	67 95       	ror	r22
 4e2:	b3 95       	inc	r27
 4e4:	d9 f7       	brne	.-10     	; 0x4dc <__fixunssfsi+0x42>
 4e6:	3e f4       	brtc	.+14     	; 0x4f6 <__fixunssfsi+0x5c>
 4e8:	90 95       	com	r25
 4ea:	80 95       	com	r24
 4ec:	70 95       	com	r23
 4ee:	61 95       	neg	r22
 4f0:	7f 4f       	sbci	r23, 0xFF	; 255
 4f2:	8f 4f       	sbci	r24, 0xFF	; 255
 4f4:	9f 4f       	sbci	r25, 0xFF	; 255
 4f6:	08 95       	ret

000004f8 <__floatunsisf>:
 4f8:	e8 94       	clt
 4fa:	09 c0       	rjmp	.+18     	; 0x50e <__floatsisf+0x12>

000004fc <__floatsisf>:
 4fc:	97 fb       	bst	r25, 7
 4fe:	3e f4       	brtc	.+14     	; 0x50e <__floatsisf+0x12>
 500:	90 95       	com	r25
 502:	80 95       	com	r24
 504:	70 95       	com	r23
 506:	61 95       	neg	r22
 508:	7f 4f       	sbci	r23, 0xFF	; 255
 50a:	8f 4f       	sbci	r24, 0xFF	; 255
 50c:	9f 4f       	sbci	r25, 0xFF	; 255
 50e:	99 23       	and	r25, r25
 510:	a9 f0       	breq	.+42     	; 0x53c <__floatsisf+0x40>
 512:	f9 2f       	mov	r31, r25
 514:	96 e9       	ldi	r25, 0x96	; 150
 516:	bb 27       	eor	r27, r27
 518:	93 95       	inc	r25
 51a:	f6 95       	lsr	r31
 51c:	87 95       	ror	r24
 51e:	77 95       	ror	r23
 520:	67 95       	ror	r22
 522:	b7 95       	ror	r27
 524:	f1 11       	cpse	r31, r1
 526:	f8 cf       	rjmp	.-16     	; 0x518 <__floatsisf+0x1c>
 528:	fa f4       	brpl	.+62     	; 0x568 <__floatsisf+0x6c>
 52a:	bb 0f       	add	r27, r27
 52c:	11 f4       	brne	.+4      	; 0x532 <__floatsisf+0x36>
 52e:	60 ff       	sbrs	r22, 0
 530:	1b c0       	rjmp	.+54     	; 0x568 <__floatsisf+0x6c>
 532:	6f 5f       	subi	r22, 0xFF	; 255
 534:	7f 4f       	sbci	r23, 0xFF	; 255
 536:	8f 4f       	sbci	r24, 0xFF	; 255
 538:	9f 4f       	sbci	r25, 0xFF	; 255
 53a:	16 c0       	rjmp	.+44     	; 0x568 <__floatsisf+0x6c>
 53c:	88 23       	and	r24, r24
 53e:	11 f0       	breq	.+4      	; 0x544 <__floatsisf+0x48>
 540:	96 e9       	ldi	r25, 0x96	; 150
 542:	11 c0       	rjmp	.+34     	; 0x566 <__floatsisf+0x6a>
 544:	77 23       	and	r23, r23
 546:	21 f0       	breq	.+8      	; 0x550 <__floatsisf+0x54>
 548:	9e e8       	ldi	r25, 0x8E	; 142
 54a:	87 2f       	mov	r24, r23
 54c:	76 2f       	mov	r23, r22
 54e:	05 c0       	rjmp	.+10     	; 0x55a <__floatsisf+0x5e>
 550:	66 23       	and	r22, r22
 552:	71 f0       	breq	.+28     	; 0x570 <__floatsisf+0x74>
 554:	96 e8       	ldi	r25, 0x86	; 134
 556:	86 2f       	mov	r24, r22
 558:	70 e0       	ldi	r23, 0x00	; 0
 55a:	60 e0       	ldi	r22, 0x00	; 0
 55c:	2a f0       	brmi	.+10     	; 0x568 <__floatsisf+0x6c>
 55e:	9a 95       	dec	r25
 560:	66 0f       	add	r22, r22
 562:	77 1f       	adc	r23, r23
 564:	88 1f       	adc	r24, r24
 566:	da f7       	brpl	.-10     	; 0x55e <__floatsisf+0x62>
 568:	88 0f       	add	r24, r24
 56a:	96 95       	lsr	r25
 56c:	87 95       	ror	r24
 56e:	97 f9       	bld	r25, 7
 570:	08 95       	ret

00000572 <__fp_inf>:
 572:	97 f9       	bld	r25, 7
 574:	9f 67       	ori	r25, 0x7F	; 127
 576:	80 e8       	ldi	r24, 0x80	; 128
 578:	70 e0       	ldi	r23, 0x00	; 0
 57a:	60 e0       	ldi	r22, 0x00	; 0
 57c:	08 95       	ret

0000057e <__fp_nan>:
 57e:	9f ef       	ldi	r25, 0xFF	; 255
 580:	80 ec       	ldi	r24, 0xC0	; 192
 582:	08 95       	ret

00000584 <__fp_pscA>:
 584:	00 24       	eor	r0, r0
 586:	0a 94       	dec	r0
 588:	16 16       	cp	r1, r22
 58a:	17 06       	cpc	r1, r23
 58c:	18 06       	cpc	r1, r24
 58e:	09 06       	cpc	r0, r25
 590:	08 95       	ret

00000592 <__fp_pscB>:
 592:	00 24       	eor	r0, r0
 594:	0a 94       	dec	r0
 596:	12 16       	cp	r1, r18
 598:	13 06       	cpc	r1, r19
 59a:	14 06       	cpc	r1, r20
 59c:	05 06       	cpc	r0, r21
 59e:	08 95       	ret

000005a0 <__fp_round>:
 5a0:	09 2e       	mov	r0, r25
 5a2:	03 94       	inc	r0
 5a4:	00 0c       	add	r0, r0
 5a6:	11 f4       	brne	.+4      	; 0x5ac <__fp_round+0xc>
 5a8:	88 23       	and	r24, r24
 5aa:	52 f0       	brmi	.+20     	; 0x5c0 <__fp_round+0x20>
 5ac:	bb 0f       	add	r27, r27
 5ae:	40 f4       	brcc	.+16     	; 0x5c0 <__fp_round+0x20>
 5b0:	bf 2b       	or	r27, r31
 5b2:	11 f4       	brne	.+4      	; 0x5b8 <__fp_round+0x18>
 5b4:	60 ff       	sbrs	r22, 0
 5b6:	04 c0       	rjmp	.+8      	; 0x5c0 <__fp_round+0x20>
 5b8:	6f 5f       	subi	r22, 0xFF	; 255
 5ba:	7f 4f       	sbci	r23, 0xFF	; 255
 5bc:	8f 4f       	sbci	r24, 0xFF	; 255
 5be:	9f 4f       	sbci	r25, 0xFF	; 255
 5c0:	08 95       	ret

000005c2 <__fp_split3>:
 5c2:	57 fd       	sbrc	r21, 7
 5c4:	90 58       	subi	r25, 0x80	; 128
 5c6:	44 0f       	add	r20, r20
 5c8:	55 1f       	adc	r21, r21
 5ca:	59 f0       	breq	.+22     	; 0x5e2 <__fp_splitA+0x10>
 5cc:	5f 3f       	cpi	r21, 0xFF	; 255
 5ce:	71 f0       	breq	.+28     	; 0x5ec <__fp_splitA+0x1a>
 5d0:	47 95       	ror	r20

000005d2 <__fp_splitA>:
 5d2:	88 0f       	add	r24, r24
 5d4:	97 fb       	bst	r25, 7
 5d6:	99 1f       	adc	r25, r25
 5d8:	61 f0       	breq	.+24     	; 0x5f2 <__fp_splitA+0x20>
 5da:	9f 3f       	cpi	r25, 0xFF	; 255
 5dc:	79 f0       	breq	.+30     	; 0x5fc <__fp_splitA+0x2a>
 5de:	87 95       	ror	r24
 5e0:	08 95       	ret
 5e2:	12 16       	cp	r1, r18
 5e4:	13 06       	cpc	r1, r19
 5e6:	14 06       	cpc	r1, r20
 5e8:	55 1f       	adc	r21, r21
 5ea:	f2 cf       	rjmp	.-28     	; 0x5d0 <__fp_split3+0xe>
 5ec:	46 95       	lsr	r20
 5ee:	f1 df       	rcall	.-30     	; 0x5d2 <__fp_splitA>
 5f0:	08 c0       	rjmp	.+16     	; 0x602 <__fp_splitA+0x30>
 5f2:	16 16       	cp	r1, r22
 5f4:	17 06       	cpc	r1, r23
 5f6:	18 06       	cpc	r1, r24
 5f8:	99 1f       	adc	r25, r25
 5fa:	f1 cf       	rjmp	.-30     	; 0x5de <__fp_splitA+0xc>
 5fc:	86 95       	lsr	r24
 5fe:	71 05       	cpc	r23, r1
 600:	61 05       	cpc	r22, r1
 602:	08 94       	sec
 604:	08 95       	ret

00000606 <__fp_zero>:
 606:	e8 94       	clt

00000608 <__fp_szero>:
 608:	bb 27       	eor	r27, r27
 60a:	66 27       	eor	r22, r22
 60c:	77 27       	eor	r23, r23
 60e:	cb 01       	movw	r24, r22
 610:	97 f9       	bld	r25, 7
 612:	08 95       	ret

00000614 <__mulsf3>:
 614:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3x>
 618:	0c 94 d0 02 	jmp	0x5a0	; 0x5a0 <__fp_round>
 61c:	0e 94 c2 02 	call	0x584	; 0x584 <__fp_pscA>
 620:	38 f0       	brcs	.+14     	; 0x630 <__mulsf3+0x1c>
 622:	0e 94 c9 02 	call	0x592	; 0x592 <__fp_pscB>
 626:	20 f0       	brcs	.+8      	; 0x630 <__mulsf3+0x1c>
 628:	95 23       	and	r25, r21
 62a:	11 f0       	breq	.+4      	; 0x630 <__mulsf3+0x1c>
 62c:	0c 94 b9 02 	jmp	0x572	; 0x572 <__fp_inf>
 630:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__fp_nan>
 634:	11 24       	eor	r1, r1
 636:	0c 94 04 03 	jmp	0x608	; 0x608 <__fp_szero>

0000063a <__mulsf3x>:
 63a:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__fp_split3>
 63e:	70 f3       	brcs	.-36     	; 0x61c <__mulsf3+0x8>

00000640 <__mulsf3_pse>:
 640:	95 9f       	mul	r25, r21
 642:	c1 f3       	breq	.-16     	; 0x634 <__mulsf3+0x20>
 644:	95 0f       	add	r25, r21
 646:	50 e0       	ldi	r21, 0x00	; 0
 648:	55 1f       	adc	r21, r21
 64a:	62 9f       	mul	r22, r18
 64c:	f0 01       	movw	r30, r0
 64e:	72 9f       	mul	r23, r18
 650:	bb 27       	eor	r27, r27
 652:	f0 0d       	add	r31, r0
 654:	b1 1d       	adc	r27, r1
 656:	63 9f       	mul	r22, r19
 658:	aa 27       	eor	r26, r26
 65a:	f0 0d       	add	r31, r0
 65c:	b1 1d       	adc	r27, r1
 65e:	aa 1f       	adc	r26, r26
 660:	64 9f       	mul	r22, r20
 662:	66 27       	eor	r22, r22
 664:	b0 0d       	add	r27, r0
 666:	a1 1d       	adc	r26, r1
 668:	66 1f       	adc	r22, r22
 66a:	82 9f       	mul	r24, r18
 66c:	22 27       	eor	r18, r18
 66e:	b0 0d       	add	r27, r0
 670:	a1 1d       	adc	r26, r1
 672:	62 1f       	adc	r22, r18
 674:	73 9f       	mul	r23, r19
 676:	b0 0d       	add	r27, r0
 678:	a1 1d       	adc	r26, r1
 67a:	62 1f       	adc	r22, r18
 67c:	83 9f       	mul	r24, r19
 67e:	a0 0d       	add	r26, r0
 680:	61 1d       	adc	r22, r1
 682:	22 1f       	adc	r18, r18
 684:	74 9f       	mul	r23, r20
 686:	33 27       	eor	r19, r19
 688:	a0 0d       	add	r26, r0
 68a:	61 1d       	adc	r22, r1
 68c:	23 1f       	adc	r18, r19
 68e:	84 9f       	mul	r24, r20
 690:	60 0d       	add	r22, r0
 692:	21 1d       	adc	r18, r1
 694:	82 2f       	mov	r24, r18
 696:	76 2f       	mov	r23, r22
 698:	6a 2f       	mov	r22, r26
 69a:	11 24       	eor	r1, r1
 69c:	9f 57       	subi	r25, 0x7F	; 127
 69e:	50 40       	sbci	r21, 0x00	; 0
 6a0:	9a f0       	brmi	.+38     	; 0x6c8 <__mulsf3_pse+0x88>
 6a2:	f1 f0       	breq	.+60     	; 0x6e0 <__mulsf3_pse+0xa0>
 6a4:	88 23       	and	r24, r24
 6a6:	4a f0       	brmi	.+18     	; 0x6ba <__mulsf3_pse+0x7a>
 6a8:	ee 0f       	add	r30, r30
 6aa:	ff 1f       	adc	r31, r31
 6ac:	bb 1f       	adc	r27, r27
 6ae:	66 1f       	adc	r22, r22
 6b0:	77 1f       	adc	r23, r23
 6b2:	88 1f       	adc	r24, r24
 6b4:	91 50       	subi	r25, 0x01	; 1
 6b6:	50 40       	sbci	r21, 0x00	; 0
 6b8:	a9 f7       	brne	.-22     	; 0x6a4 <__mulsf3_pse+0x64>
 6ba:	9e 3f       	cpi	r25, 0xFE	; 254
 6bc:	51 05       	cpc	r21, r1
 6be:	80 f0       	brcs	.+32     	; 0x6e0 <__mulsf3_pse+0xa0>
 6c0:	0c 94 b9 02 	jmp	0x572	; 0x572 <__fp_inf>
 6c4:	0c 94 04 03 	jmp	0x608	; 0x608 <__fp_szero>
 6c8:	5f 3f       	cpi	r21, 0xFF	; 255
 6ca:	e4 f3       	brlt	.-8      	; 0x6c4 <__mulsf3_pse+0x84>
 6cc:	98 3e       	cpi	r25, 0xE8	; 232
 6ce:	d4 f3       	brlt	.-12     	; 0x6c4 <__mulsf3_pse+0x84>
 6d0:	86 95       	lsr	r24
 6d2:	77 95       	ror	r23
 6d4:	67 95       	ror	r22
 6d6:	b7 95       	ror	r27
 6d8:	f7 95       	ror	r31
 6da:	e7 95       	ror	r30
 6dc:	9f 5f       	subi	r25, 0xFF	; 255
 6de:	c1 f7       	brne	.-16     	; 0x6d0 <__mulsf3_pse+0x90>
 6e0:	fe 2b       	or	r31, r30
 6e2:	88 0f       	add	r24, r24
 6e4:	91 1d       	adc	r25, r1
 6e6:	96 95       	lsr	r25
 6e8:	87 95       	ror	r24
 6ea:	97 f9       	bld	r25, 7
 6ec:	08 95       	ret

000006ee <atoi>:
 6ee:	fc 01       	movw	r30, r24
 6f0:	88 27       	eor	r24, r24
 6f2:	99 27       	eor	r25, r25
 6f4:	e8 94       	clt
 6f6:	21 91       	ld	r18, Z+
 6f8:	20 32       	cpi	r18, 0x20	; 32
 6fa:	e9 f3       	breq	.-6      	; 0x6f6 <atoi+0x8>
 6fc:	29 30       	cpi	r18, 0x09	; 9
 6fe:	10 f0       	brcs	.+4      	; 0x704 <atoi+0x16>
 700:	2e 30       	cpi	r18, 0x0E	; 14
 702:	c8 f3       	brcs	.-14     	; 0x6f6 <atoi+0x8>
 704:	2b 32       	cpi	r18, 0x2B	; 43
 706:	41 f0       	breq	.+16     	; 0x718 <atoi+0x2a>
 708:	2d 32       	cpi	r18, 0x2D	; 45
 70a:	39 f4       	brne	.+14     	; 0x71a <atoi+0x2c>
 70c:	68 94       	set
 70e:	04 c0       	rjmp	.+8      	; 0x718 <atoi+0x2a>
 710:	0e 94 a0 03 	call	0x740	; 0x740 <__mulhi_const_10>
 714:	82 0f       	add	r24, r18
 716:	91 1d       	adc	r25, r1
 718:	21 91       	ld	r18, Z+
 71a:	20 53       	subi	r18, 0x30	; 48
 71c:	2a 30       	cpi	r18, 0x0A	; 10
 71e:	c0 f3       	brcs	.-16     	; 0x710 <atoi+0x22>
 720:	1e f4       	brtc	.+6      	; 0x728 <atoi+0x3a>
 722:	90 95       	com	r25
 724:	81 95       	neg	r24
 726:	9f 4f       	sbci	r25, 0xFF	; 255
 728:	08 95       	ret

0000072a <__itoa_ncheck>:
 72a:	bb 27       	eor	r27, r27
 72c:	4a 30       	cpi	r20, 0x0A	; 10
 72e:	31 f4       	brne	.+12     	; 0x73c <__itoa_ncheck+0x12>
 730:	99 23       	and	r25, r25
 732:	22 f4       	brpl	.+8      	; 0x73c <__itoa_ncheck+0x12>
 734:	bd e2       	ldi	r27, 0x2D	; 45
 736:	90 95       	com	r25
 738:	81 95       	neg	r24
 73a:	9f 4f       	sbci	r25, 0xFF	; 255
 73c:	0c 94 a9 03 	jmp	0x752	; 0x752 <__utoa_common>

00000740 <__mulhi_const_10>:
 740:	7a e0       	ldi	r23, 0x0A	; 10
 742:	97 9f       	mul	r25, r23
 744:	90 2d       	mov	r25, r0
 746:	87 9f       	mul	r24, r23
 748:	80 2d       	mov	r24, r0
 74a:	91 0d       	add	r25, r1
 74c:	11 24       	eor	r1, r1
 74e:	08 95       	ret

00000750 <__utoa_ncheck>:
 750:	bb 27       	eor	r27, r27

00000752 <__utoa_common>:
 752:	fb 01       	movw	r30, r22
 754:	55 27       	eor	r21, r21
 756:	aa 27       	eor	r26, r26
 758:	88 0f       	add	r24, r24
 75a:	99 1f       	adc	r25, r25
 75c:	aa 1f       	adc	r26, r26
 75e:	a4 17       	cp	r26, r20
 760:	10 f0       	brcs	.+4      	; 0x766 <__utoa_common+0x14>
 762:	a4 1b       	sub	r26, r20
 764:	83 95       	inc	r24
 766:	50 51       	subi	r21, 0x10	; 16
 768:	b9 f7       	brne	.-18     	; 0x758 <__utoa_common+0x6>
 76a:	a0 5d       	subi	r26, 0xD0	; 208
 76c:	aa 33       	cpi	r26, 0x3A	; 58
 76e:	08 f0       	brcs	.+2      	; 0x772 <__utoa_common+0x20>
 770:	a9 5d       	subi	r26, 0xD9	; 217
 772:	a1 93       	st	Z+, r26
 774:	00 97       	sbiw	r24, 0x00	; 0
 776:	79 f7       	brne	.-34     	; 0x756 <__utoa_common+0x4>
 778:	b1 11       	cpse	r27, r1
 77a:	b1 93       	st	Z+, r27
 77c:	11 92       	st	Z+, r1
 77e:	cb 01       	movw	r24, r22
 780:	0c 94 db 05 	jmp	0xbb6	; 0xbb6 <strrev>

00000784 <sprintf>:
 784:	ae e0       	ldi	r26, 0x0E	; 14
 786:	b0 e0       	ldi	r27, 0x00	; 0
 788:	e8 ec       	ldi	r30, 0xC8	; 200
 78a:	f3 e0       	ldi	r31, 0x03	; 3
 78c:	0c 94 93 06 	jmp	0xd26	; 0xd26 <__prologue_saves__+0x1c>
 790:	0d 89       	ldd	r16, Y+21	; 0x15
 792:	1e 89       	ldd	r17, Y+22	; 0x16
 794:	86 e0       	ldi	r24, 0x06	; 6
 796:	8c 83       	std	Y+4, r24	; 0x04
 798:	1a 83       	std	Y+2, r17	; 0x02
 79a:	09 83       	std	Y+1, r16	; 0x01
 79c:	8f ef       	ldi	r24, 0xFF	; 255
 79e:	9f e7       	ldi	r25, 0x7F	; 127
 7a0:	9e 83       	std	Y+6, r25	; 0x06
 7a2:	8d 83       	std	Y+5, r24	; 0x05
 7a4:	ae 01       	movw	r20, r28
 7a6:	47 5e       	subi	r20, 0xE7	; 231
 7a8:	5f 4f       	sbci	r21, 0xFF	; 255
 7aa:	6f 89       	ldd	r22, Y+23	; 0x17
 7ac:	78 8d       	ldd	r23, Y+24	; 0x18
 7ae:	ce 01       	movw	r24, r28
 7b0:	01 96       	adiw	r24, 0x01	; 1
 7b2:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <vfprintf>
 7b6:	ef 81       	ldd	r30, Y+7	; 0x07
 7b8:	f8 85       	ldd	r31, Y+8	; 0x08
 7ba:	e0 0f       	add	r30, r16
 7bc:	f1 1f       	adc	r31, r17
 7be:	10 82       	st	Z, r1
 7c0:	2e 96       	adiw	r28, 0x0e	; 14
 7c2:	e4 e0       	ldi	r30, 0x04	; 4
 7c4:	0c 94 af 06 	jmp	0xd5e	; 0xd5e <__epilogue_restores__+0x1c>

000007c8 <vfprintf>:
 7c8:	ab e0       	ldi	r26, 0x0B	; 11
 7ca:	b0 e0       	ldi	r27, 0x00	; 0
 7cc:	ea ee       	ldi	r30, 0xEA	; 234
 7ce:	f3 e0       	ldi	r31, 0x03	; 3
 7d0:	0c 94 85 06 	jmp	0xd0a	; 0xd0a <__prologue_saves__>
 7d4:	6c 01       	movw	r12, r24
 7d6:	7b 01       	movw	r14, r22
 7d8:	8a 01       	movw	r16, r20
 7da:	fc 01       	movw	r30, r24
 7dc:	17 82       	std	Z+7, r1	; 0x07
 7de:	16 82       	std	Z+6, r1	; 0x06
 7e0:	83 81       	ldd	r24, Z+3	; 0x03
 7e2:	81 ff       	sbrs	r24, 1
 7e4:	cc c1       	rjmp	.+920    	; 0xb7e <__stack+0x27f>
 7e6:	ce 01       	movw	r24, r28
 7e8:	01 96       	adiw	r24, 0x01	; 1
 7ea:	3c 01       	movw	r6, r24
 7ec:	f6 01       	movw	r30, r12
 7ee:	93 81       	ldd	r25, Z+3	; 0x03
 7f0:	f7 01       	movw	r30, r14
 7f2:	93 fd       	sbrc	r25, 3
 7f4:	85 91       	lpm	r24, Z+
 7f6:	93 ff       	sbrs	r25, 3
 7f8:	81 91       	ld	r24, Z+
 7fa:	7f 01       	movw	r14, r30
 7fc:	88 23       	and	r24, r24
 7fe:	09 f4       	brne	.+2      	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 800:	ba c1       	rjmp	.+884    	; 0xb76 <__stack+0x277>
 802:	85 32       	cpi	r24, 0x25	; 37
 804:	39 f4       	brne	.+14     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 806:	93 fd       	sbrc	r25, 3
 808:	85 91       	lpm	r24, Z+
 80a:	93 ff       	sbrs	r25, 3
 80c:	81 91       	ld	r24, Z+
 80e:	7f 01       	movw	r14, r30
 810:	85 32       	cpi	r24, 0x25	; 37
 812:	29 f4       	brne	.+10     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 814:	b6 01       	movw	r22, r12
 816:	90 e0       	ldi	r25, 0x00	; 0
 818:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <fputc>
 81c:	e7 cf       	rjmp	.-50     	; 0x7ec <vfprintf+0x24>
 81e:	91 2c       	mov	r9, r1
 820:	21 2c       	mov	r2, r1
 822:	31 2c       	mov	r3, r1
 824:	ff e1       	ldi	r31, 0x1F	; 31
 826:	f3 15       	cp	r31, r3
 828:	d8 f0       	brcs	.+54     	; 0x860 <__DATA_REGION_LENGTH__+0x60>
 82a:	8b 32       	cpi	r24, 0x2B	; 43
 82c:	79 f0       	breq	.+30     	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 82e:	38 f4       	brcc	.+14     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 830:	80 32       	cpi	r24, 0x20	; 32
 832:	79 f0       	breq	.+30     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 834:	83 32       	cpi	r24, 0x23	; 35
 836:	a1 f4       	brne	.+40     	; 0x860 <__DATA_REGION_LENGTH__+0x60>
 838:	23 2d       	mov	r18, r3
 83a:	20 61       	ori	r18, 0x10	; 16
 83c:	1d c0       	rjmp	.+58     	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 83e:	8d 32       	cpi	r24, 0x2D	; 45
 840:	61 f0       	breq	.+24     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 842:	80 33       	cpi	r24, 0x30	; 48
 844:	69 f4       	brne	.+26     	; 0x860 <__DATA_REGION_LENGTH__+0x60>
 846:	23 2d       	mov	r18, r3
 848:	21 60       	ori	r18, 0x01	; 1
 84a:	16 c0       	rjmp	.+44     	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 84c:	83 2d       	mov	r24, r3
 84e:	82 60       	ori	r24, 0x02	; 2
 850:	38 2e       	mov	r3, r24
 852:	e3 2d       	mov	r30, r3
 854:	e4 60       	ori	r30, 0x04	; 4
 856:	3e 2e       	mov	r3, r30
 858:	2a c0       	rjmp	.+84     	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 85a:	f3 2d       	mov	r31, r3
 85c:	f8 60       	ori	r31, 0x08	; 8
 85e:	1d c0       	rjmp	.+58     	; 0x89a <__DATA_REGION_LENGTH__+0x9a>
 860:	37 fc       	sbrc	r3, 7
 862:	2d c0       	rjmp	.+90     	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
 864:	20 ed       	ldi	r18, 0xD0	; 208
 866:	28 0f       	add	r18, r24
 868:	2a 30       	cpi	r18, 0x0A	; 10
 86a:	40 f0       	brcs	.+16     	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
 86c:	8e 32       	cpi	r24, 0x2E	; 46
 86e:	b9 f4       	brne	.+46     	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 870:	36 fc       	sbrc	r3, 6
 872:	81 c1       	rjmp	.+770    	; 0xb76 <__stack+0x277>
 874:	23 2d       	mov	r18, r3
 876:	20 64       	ori	r18, 0x40	; 64
 878:	32 2e       	mov	r3, r18
 87a:	19 c0       	rjmp	.+50     	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 87c:	36 fe       	sbrs	r3, 6
 87e:	06 c0       	rjmp	.+12     	; 0x88c <__DATA_REGION_LENGTH__+0x8c>
 880:	8a e0       	ldi	r24, 0x0A	; 10
 882:	98 9e       	mul	r9, r24
 884:	20 0d       	add	r18, r0
 886:	11 24       	eor	r1, r1
 888:	92 2e       	mov	r9, r18
 88a:	11 c0       	rjmp	.+34     	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 88c:	ea e0       	ldi	r30, 0x0A	; 10
 88e:	2e 9e       	mul	r2, r30
 890:	20 0d       	add	r18, r0
 892:	11 24       	eor	r1, r1
 894:	22 2e       	mov	r2, r18
 896:	f3 2d       	mov	r31, r3
 898:	f0 62       	ori	r31, 0x20	; 32
 89a:	3f 2e       	mov	r3, r31
 89c:	08 c0       	rjmp	.+16     	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 89e:	8c 36       	cpi	r24, 0x6C	; 108
 8a0:	21 f4       	brne	.+8      	; 0x8aa <__DATA_REGION_LENGTH__+0xaa>
 8a2:	83 2d       	mov	r24, r3
 8a4:	80 68       	ori	r24, 0x80	; 128
 8a6:	38 2e       	mov	r3, r24
 8a8:	02 c0       	rjmp	.+4      	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 8aa:	88 36       	cpi	r24, 0x68	; 104
 8ac:	41 f4       	brne	.+16     	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
 8ae:	f7 01       	movw	r30, r14
 8b0:	93 fd       	sbrc	r25, 3
 8b2:	85 91       	lpm	r24, Z+
 8b4:	93 ff       	sbrs	r25, 3
 8b6:	81 91       	ld	r24, Z+
 8b8:	7f 01       	movw	r14, r30
 8ba:	81 11       	cpse	r24, r1
 8bc:	b3 cf       	rjmp	.-154    	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 8be:	98 2f       	mov	r25, r24
 8c0:	9f 7d       	andi	r25, 0xDF	; 223
 8c2:	95 54       	subi	r25, 0x45	; 69
 8c4:	93 30       	cpi	r25, 0x03	; 3
 8c6:	28 f4       	brcc	.+10     	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
 8c8:	0c 5f       	subi	r16, 0xFC	; 252
 8ca:	1f 4f       	sbci	r17, 0xFF	; 255
 8cc:	9f e3       	ldi	r25, 0x3F	; 63
 8ce:	99 83       	std	Y+1, r25	; 0x01
 8d0:	0d c0       	rjmp	.+26     	; 0x8ec <__DATA_REGION_LENGTH__+0xec>
 8d2:	83 36       	cpi	r24, 0x63	; 99
 8d4:	31 f0       	breq	.+12     	; 0x8e2 <__DATA_REGION_LENGTH__+0xe2>
 8d6:	83 37       	cpi	r24, 0x73	; 115
 8d8:	71 f0       	breq	.+28     	; 0x8f6 <__DATA_REGION_LENGTH__+0xf6>
 8da:	83 35       	cpi	r24, 0x53	; 83
 8dc:	09 f0       	breq	.+2      	; 0x8e0 <__DATA_REGION_LENGTH__+0xe0>
 8de:	59 c0       	rjmp	.+178    	; 0x992 <__stack+0x93>
 8e0:	21 c0       	rjmp	.+66     	; 0x924 <__stack+0x25>
 8e2:	f8 01       	movw	r30, r16
 8e4:	80 81       	ld	r24, Z
 8e6:	89 83       	std	Y+1, r24	; 0x01
 8e8:	0e 5f       	subi	r16, 0xFE	; 254
 8ea:	1f 4f       	sbci	r17, 0xFF	; 255
 8ec:	88 24       	eor	r8, r8
 8ee:	83 94       	inc	r8
 8f0:	91 2c       	mov	r9, r1
 8f2:	53 01       	movw	r10, r6
 8f4:	13 c0       	rjmp	.+38     	; 0x91c <__stack+0x1d>
 8f6:	28 01       	movw	r4, r16
 8f8:	f2 e0       	ldi	r31, 0x02	; 2
 8fa:	4f 0e       	add	r4, r31
 8fc:	51 1c       	adc	r5, r1
 8fe:	f8 01       	movw	r30, r16
 900:	a0 80       	ld	r10, Z
 902:	b1 80       	ldd	r11, Z+1	; 0x01
 904:	36 fe       	sbrs	r3, 6
 906:	03 c0       	rjmp	.+6      	; 0x90e <__stack+0xf>
 908:	69 2d       	mov	r22, r9
 90a:	70 e0       	ldi	r23, 0x00	; 0
 90c:	02 c0       	rjmp	.+4      	; 0x912 <__stack+0x13>
 90e:	6f ef       	ldi	r22, 0xFF	; 255
 910:	7f ef       	ldi	r23, 0xFF	; 255
 912:	c5 01       	movw	r24, r10
 914:	0e 94 d0 05 	call	0xba0	; 0xba0 <strnlen>
 918:	4c 01       	movw	r8, r24
 91a:	82 01       	movw	r16, r4
 91c:	f3 2d       	mov	r31, r3
 91e:	ff 77       	andi	r31, 0x7F	; 127
 920:	3f 2e       	mov	r3, r31
 922:	16 c0       	rjmp	.+44     	; 0x950 <__stack+0x51>
 924:	28 01       	movw	r4, r16
 926:	22 e0       	ldi	r18, 0x02	; 2
 928:	42 0e       	add	r4, r18
 92a:	51 1c       	adc	r5, r1
 92c:	f8 01       	movw	r30, r16
 92e:	a0 80       	ld	r10, Z
 930:	b1 80       	ldd	r11, Z+1	; 0x01
 932:	36 fe       	sbrs	r3, 6
 934:	03 c0       	rjmp	.+6      	; 0x93c <__stack+0x3d>
 936:	69 2d       	mov	r22, r9
 938:	70 e0       	ldi	r23, 0x00	; 0
 93a:	02 c0       	rjmp	.+4      	; 0x940 <__stack+0x41>
 93c:	6f ef       	ldi	r22, 0xFF	; 255
 93e:	7f ef       	ldi	r23, 0xFF	; 255
 940:	c5 01       	movw	r24, r10
 942:	0e 94 c5 05 	call	0xb8a	; 0xb8a <strnlen_P>
 946:	4c 01       	movw	r8, r24
 948:	f3 2d       	mov	r31, r3
 94a:	f0 68       	ori	r31, 0x80	; 128
 94c:	3f 2e       	mov	r3, r31
 94e:	82 01       	movw	r16, r4
 950:	33 fc       	sbrc	r3, 3
 952:	1b c0       	rjmp	.+54     	; 0x98a <__stack+0x8b>
 954:	82 2d       	mov	r24, r2
 956:	90 e0       	ldi	r25, 0x00	; 0
 958:	88 16       	cp	r8, r24
 95a:	99 06       	cpc	r9, r25
 95c:	b0 f4       	brcc	.+44     	; 0x98a <__stack+0x8b>
 95e:	b6 01       	movw	r22, r12
 960:	80 e2       	ldi	r24, 0x20	; 32
 962:	90 e0       	ldi	r25, 0x00	; 0
 964:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <fputc>
 968:	2a 94       	dec	r2
 96a:	f4 cf       	rjmp	.-24     	; 0x954 <__stack+0x55>
 96c:	f5 01       	movw	r30, r10
 96e:	37 fc       	sbrc	r3, 7
 970:	85 91       	lpm	r24, Z+
 972:	37 fe       	sbrs	r3, 7
 974:	81 91       	ld	r24, Z+
 976:	5f 01       	movw	r10, r30
 978:	b6 01       	movw	r22, r12
 97a:	90 e0       	ldi	r25, 0x00	; 0
 97c:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <fputc>
 980:	21 10       	cpse	r2, r1
 982:	2a 94       	dec	r2
 984:	21 e0       	ldi	r18, 0x01	; 1
 986:	82 1a       	sub	r8, r18
 988:	91 08       	sbc	r9, r1
 98a:	81 14       	cp	r8, r1
 98c:	91 04       	cpc	r9, r1
 98e:	71 f7       	brne	.-36     	; 0x96c <__stack+0x6d>
 990:	e8 c0       	rjmp	.+464    	; 0xb62 <__stack+0x263>
 992:	84 36       	cpi	r24, 0x64	; 100
 994:	11 f0       	breq	.+4      	; 0x99a <__stack+0x9b>
 996:	89 36       	cpi	r24, 0x69	; 105
 998:	41 f5       	brne	.+80     	; 0x9ea <__stack+0xeb>
 99a:	f8 01       	movw	r30, r16
 99c:	37 fe       	sbrs	r3, 7
 99e:	07 c0       	rjmp	.+14     	; 0x9ae <__stack+0xaf>
 9a0:	60 81       	ld	r22, Z
 9a2:	71 81       	ldd	r23, Z+1	; 0x01
 9a4:	82 81       	ldd	r24, Z+2	; 0x02
 9a6:	93 81       	ldd	r25, Z+3	; 0x03
 9a8:	0c 5f       	subi	r16, 0xFC	; 252
 9aa:	1f 4f       	sbci	r17, 0xFF	; 255
 9ac:	08 c0       	rjmp	.+16     	; 0x9be <__stack+0xbf>
 9ae:	60 81       	ld	r22, Z
 9b0:	71 81       	ldd	r23, Z+1	; 0x01
 9b2:	07 2e       	mov	r0, r23
 9b4:	00 0c       	add	r0, r0
 9b6:	88 0b       	sbc	r24, r24
 9b8:	99 0b       	sbc	r25, r25
 9ba:	0e 5f       	subi	r16, 0xFE	; 254
 9bc:	1f 4f       	sbci	r17, 0xFF	; 255
 9be:	f3 2d       	mov	r31, r3
 9c0:	ff 76       	andi	r31, 0x6F	; 111
 9c2:	3f 2e       	mov	r3, r31
 9c4:	97 ff       	sbrs	r25, 7
 9c6:	09 c0       	rjmp	.+18     	; 0x9da <__stack+0xdb>
 9c8:	90 95       	com	r25
 9ca:	80 95       	com	r24
 9cc:	70 95       	com	r23
 9ce:	61 95       	neg	r22
 9d0:	7f 4f       	sbci	r23, 0xFF	; 255
 9d2:	8f 4f       	sbci	r24, 0xFF	; 255
 9d4:	9f 4f       	sbci	r25, 0xFF	; 255
 9d6:	f0 68       	ori	r31, 0x80	; 128
 9d8:	3f 2e       	mov	r3, r31
 9da:	2a e0       	ldi	r18, 0x0A	; 10
 9dc:	30 e0       	ldi	r19, 0x00	; 0
 9de:	a3 01       	movw	r20, r6
 9e0:	0e 94 27 06 	call	0xc4e	; 0xc4e <__ultoa_invert>
 9e4:	88 2e       	mov	r8, r24
 9e6:	86 18       	sub	r8, r6
 9e8:	45 c0       	rjmp	.+138    	; 0xa74 <__stack+0x175>
 9ea:	85 37       	cpi	r24, 0x75	; 117
 9ec:	31 f4       	brne	.+12     	; 0x9fa <__stack+0xfb>
 9ee:	23 2d       	mov	r18, r3
 9f0:	2f 7e       	andi	r18, 0xEF	; 239
 9f2:	b2 2e       	mov	r11, r18
 9f4:	2a e0       	ldi	r18, 0x0A	; 10
 9f6:	30 e0       	ldi	r19, 0x00	; 0
 9f8:	25 c0       	rjmp	.+74     	; 0xa44 <__stack+0x145>
 9fa:	93 2d       	mov	r25, r3
 9fc:	99 7f       	andi	r25, 0xF9	; 249
 9fe:	b9 2e       	mov	r11, r25
 a00:	8f 36       	cpi	r24, 0x6F	; 111
 a02:	c1 f0       	breq	.+48     	; 0xa34 <__stack+0x135>
 a04:	18 f4       	brcc	.+6      	; 0xa0c <__stack+0x10d>
 a06:	88 35       	cpi	r24, 0x58	; 88
 a08:	79 f0       	breq	.+30     	; 0xa28 <__stack+0x129>
 a0a:	b5 c0       	rjmp	.+362    	; 0xb76 <__stack+0x277>
 a0c:	80 37       	cpi	r24, 0x70	; 112
 a0e:	19 f0       	breq	.+6      	; 0xa16 <__stack+0x117>
 a10:	88 37       	cpi	r24, 0x78	; 120
 a12:	21 f0       	breq	.+8      	; 0xa1c <__stack+0x11d>
 a14:	b0 c0       	rjmp	.+352    	; 0xb76 <__stack+0x277>
 a16:	e9 2f       	mov	r30, r25
 a18:	e0 61       	ori	r30, 0x10	; 16
 a1a:	be 2e       	mov	r11, r30
 a1c:	b4 fe       	sbrs	r11, 4
 a1e:	0d c0       	rjmp	.+26     	; 0xa3a <__stack+0x13b>
 a20:	fb 2d       	mov	r31, r11
 a22:	f4 60       	ori	r31, 0x04	; 4
 a24:	bf 2e       	mov	r11, r31
 a26:	09 c0       	rjmp	.+18     	; 0xa3a <__stack+0x13b>
 a28:	34 fe       	sbrs	r3, 4
 a2a:	0a c0       	rjmp	.+20     	; 0xa40 <__stack+0x141>
 a2c:	29 2f       	mov	r18, r25
 a2e:	26 60       	ori	r18, 0x06	; 6
 a30:	b2 2e       	mov	r11, r18
 a32:	06 c0       	rjmp	.+12     	; 0xa40 <__stack+0x141>
 a34:	28 e0       	ldi	r18, 0x08	; 8
 a36:	30 e0       	ldi	r19, 0x00	; 0
 a38:	05 c0       	rjmp	.+10     	; 0xa44 <__stack+0x145>
 a3a:	20 e1       	ldi	r18, 0x10	; 16
 a3c:	30 e0       	ldi	r19, 0x00	; 0
 a3e:	02 c0       	rjmp	.+4      	; 0xa44 <__stack+0x145>
 a40:	20 e1       	ldi	r18, 0x10	; 16
 a42:	32 e0       	ldi	r19, 0x02	; 2
 a44:	f8 01       	movw	r30, r16
 a46:	b7 fe       	sbrs	r11, 7
 a48:	07 c0       	rjmp	.+14     	; 0xa58 <__stack+0x159>
 a4a:	60 81       	ld	r22, Z
 a4c:	71 81       	ldd	r23, Z+1	; 0x01
 a4e:	82 81       	ldd	r24, Z+2	; 0x02
 a50:	93 81       	ldd	r25, Z+3	; 0x03
 a52:	0c 5f       	subi	r16, 0xFC	; 252
 a54:	1f 4f       	sbci	r17, 0xFF	; 255
 a56:	06 c0       	rjmp	.+12     	; 0xa64 <__stack+0x165>
 a58:	60 81       	ld	r22, Z
 a5a:	71 81       	ldd	r23, Z+1	; 0x01
 a5c:	80 e0       	ldi	r24, 0x00	; 0
 a5e:	90 e0       	ldi	r25, 0x00	; 0
 a60:	0e 5f       	subi	r16, 0xFE	; 254
 a62:	1f 4f       	sbci	r17, 0xFF	; 255
 a64:	a3 01       	movw	r20, r6
 a66:	0e 94 27 06 	call	0xc4e	; 0xc4e <__ultoa_invert>
 a6a:	88 2e       	mov	r8, r24
 a6c:	86 18       	sub	r8, r6
 a6e:	fb 2d       	mov	r31, r11
 a70:	ff 77       	andi	r31, 0x7F	; 127
 a72:	3f 2e       	mov	r3, r31
 a74:	36 fe       	sbrs	r3, 6
 a76:	0d c0       	rjmp	.+26     	; 0xa92 <__stack+0x193>
 a78:	23 2d       	mov	r18, r3
 a7a:	2e 7f       	andi	r18, 0xFE	; 254
 a7c:	a2 2e       	mov	r10, r18
 a7e:	89 14       	cp	r8, r9
 a80:	58 f4       	brcc	.+22     	; 0xa98 <__stack+0x199>
 a82:	34 fe       	sbrs	r3, 4
 a84:	0b c0       	rjmp	.+22     	; 0xa9c <__stack+0x19d>
 a86:	32 fc       	sbrc	r3, 2
 a88:	09 c0       	rjmp	.+18     	; 0xa9c <__stack+0x19d>
 a8a:	83 2d       	mov	r24, r3
 a8c:	8e 7e       	andi	r24, 0xEE	; 238
 a8e:	a8 2e       	mov	r10, r24
 a90:	05 c0       	rjmp	.+10     	; 0xa9c <__stack+0x19d>
 a92:	b8 2c       	mov	r11, r8
 a94:	a3 2c       	mov	r10, r3
 a96:	03 c0       	rjmp	.+6      	; 0xa9e <__stack+0x19f>
 a98:	b8 2c       	mov	r11, r8
 a9a:	01 c0       	rjmp	.+2      	; 0xa9e <__stack+0x19f>
 a9c:	b9 2c       	mov	r11, r9
 a9e:	a4 fe       	sbrs	r10, 4
 aa0:	0f c0       	rjmp	.+30     	; 0xac0 <__stack+0x1c1>
 aa2:	fe 01       	movw	r30, r28
 aa4:	e8 0d       	add	r30, r8
 aa6:	f1 1d       	adc	r31, r1
 aa8:	80 81       	ld	r24, Z
 aaa:	80 33       	cpi	r24, 0x30	; 48
 aac:	21 f4       	brne	.+8      	; 0xab6 <__stack+0x1b7>
 aae:	9a 2d       	mov	r25, r10
 ab0:	99 7e       	andi	r25, 0xE9	; 233
 ab2:	a9 2e       	mov	r10, r25
 ab4:	09 c0       	rjmp	.+18     	; 0xac8 <__stack+0x1c9>
 ab6:	a2 fe       	sbrs	r10, 2
 ab8:	06 c0       	rjmp	.+12     	; 0xac6 <__stack+0x1c7>
 aba:	b3 94       	inc	r11
 abc:	b3 94       	inc	r11
 abe:	04 c0       	rjmp	.+8      	; 0xac8 <__stack+0x1c9>
 ac0:	8a 2d       	mov	r24, r10
 ac2:	86 78       	andi	r24, 0x86	; 134
 ac4:	09 f0       	breq	.+2      	; 0xac8 <__stack+0x1c9>
 ac6:	b3 94       	inc	r11
 ac8:	a3 fc       	sbrc	r10, 3
 aca:	11 c0       	rjmp	.+34     	; 0xaee <__stack+0x1ef>
 acc:	a0 fe       	sbrs	r10, 0
 ace:	06 c0       	rjmp	.+12     	; 0xadc <__stack+0x1dd>
 ad0:	b2 14       	cp	r11, r2
 ad2:	88 f4       	brcc	.+34     	; 0xaf6 <__stack+0x1f7>
 ad4:	28 0c       	add	r2, r8
 ad6:	92 2c       	mov	r9, r2
 ad8:	9b 18       	sub	r9, r11
 ada:	0e c0       	rjmp	.+28     	; 0xaf8 <__stack+0x1f9>
 adc:	b2 14       	cp	r11, r2
 ade:	60 f4       	brcc	.+24     	; 0xaf8 <__stack+0x1f9>
 ae0:	b6 01       	movw	r22, r12
 ae2:	80 e2       	ldi	r24, 0x20	; 32
 ae4:	90 e0       	ldi	r25, 0x00	; 0
 ae6:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <fputc>
 aea:	b3 94       	inc	r11
 aec:	f7 cf       	rjmp	.-18     	; 0xadc <__stack+0x1dd>
 aee:	b2 14       	cp	r11, r2
 af0:	18 f4       	brcc	.+6      	; 0xaf8 <__stack+0x1f9>
 af2:	2b 18       	sub	r2, r11
 af4:	02 c0       	rjmp	.+4      	; 0xafa <__stack+0x1fb>
 af6:	98 2c       	mov	r9, r8
 af8:	21 2c       	mov	r2, r1
 afa:	a4 fe       	sbrs	r10, 4
 afc:	10 c0       	rjmp	.+32     	; 0xb1e <__stack+0x21f>
 afe:	b6 01       	movw	r22, r12
 b00:	80 e3       	ldi	r24, 0x30	; 48
 b02:	90 e0       	ldi	r25, 0x00	; 0
 b04:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <fputc>
 b08:	a2 fe       	sbrs	r10, 2
 b0a:	17 c0       	rjmp	.+46     	; 0xb3a <__stack+0x23b>
 b0c:	a1 fc       	sbrc	r10, 1
 b0e:	03 c0       	rjmp	.+6      	; 0xb16 <__stack+0x217>
 b10:	88 e7       	ldi	r24, 0x78	; 120
 b12:	90 e0       	ldi	r25, 0x00	; 0
 b14:	02 c0       	rjmp	.+4      	; 0xb1a <__stack+0x21b>
 b16:	88 e5       	ldi	r24, 0x58	; 88
 b18:	90 e0       	ldi	r25, 0x00	; 0
 b1a:	b6 01       	movw	r22, r12
 b1c:	0c c0       	rjmp	.+24     	; 0xb36 <__stack+0x237>
 b1e:	8a 2d       	mov	r24, r10
 b20:	86 78       	andi	r24, 0x86	; 134
 b22:	59 f0       	breq	.+22     	; 0xb3a <__stack+0x23b>
 b24:	a1 fe       	sbrs	r10, 1
 b26:	02 c0       	rjmp	.+4      	; 0xb2c <__stack+0x22d>
 b28:	8b e2       	ldi	r24, 0x2B	; 43
 b2a:	01 c0       	rjmp	.+2      	; 0xb2e <__stack+0x22f>
 b2c:	80 e2       	ldi	r24, 0x20	; 32
 b2e:	a7 fc       	sbrc	r10, 7
 b30:	8d e2       	ldi	r24, 0x2D	; 45
 b32:	b6 01       	movw	r22, r12
 b34:	90 e0       	ldi	r25, 0x00	; 0
 b36:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <fputc>
 b3a:	89 14       	cp	r8, r9
 b3c:	38 f4       	brcc	.+14     	; 0xb4c <__stack+0x24d>
 b3e:	b6 01       	movw	r22, r12
 b40:	80 e3       	ldi	r24, 0x30	; 48
 b42:	90 e0       	ldi	r25, 0x00	; 0
 b44:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <fputc>
 b48:	9a 94       	dec	r9
 b4a:	f7 cf       	rjmp	.-18     	; 0xb3a <__stack+0x23b>
 b4c:	8a 94       	dec	r8
 b4e:	f3 01       	movw	r30, r6
 b50:	e8 0d       	add	r30, r8
 b52:	f1 1d       	adc	r31, r1
 b54:	80 81       	ld	r24, Z
 b56:	b6 01       	movw	r22, r12
 b58:	90 e0       	ldi	r25, 0x00	; 0
 b5a:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <fputc>
 b5e:	81 10       	cpse	r8, r1
 b60:	f5 cf       	rjmp	.-22     	; 0xb4c <__stack+0x24d>
 b62:	22 20       	and	r2, r2
 b64:	09 f4       	brne	.+2      	; 0xb68 <__stack+0x269>
 b66:	42 ce       	rjmp	.-892    	; 0x7ec <vfprintf+0x24>
 b68:	b6 01       	movw	r22, r12
 b6a:	80 e2       	ldi	r24, 0x20	; 32
 b6c:	90 e0       	ldi	r25, 0x00	; 0
 b6e:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <fputc>
 b72:	2a 94       	dec	r2
 b74:	f6 cf       	rjmp	.-20     	; 0xb62 <__stack+0x263>
 b76:	f6 01       	movw	r30, r12
 b78:	86 81       	ldd	r24, Z+6	; 0x06
 b7a:	97 81       	ldd	r25, Z+7	; 0x07
 b7c:	02 c0       	rjmp	.+4      	; 0xb82 <__stack+0x283>
 b7e:	8f ef       	ldi	r24, 0xFF	; 255
 b80:	9f ef       	ldi	r25, 0xFF	; 255
 b82:	2b 96       	adiw	r28, 0x0b	; 11
 b84:	e2 e1       	ldi	r30, 0x12	; 18
 b86:	0c 94 a1 06 	jmp	0xd42	; 0xd42 <__epilogue_restores__>

00000b8a <strnlen_P>:
 b8a:	fc 01       	movw	r30, r24
 b8c:	05 90       	lpm	r0, Z+
 b8e:	61 50       	subi	r22, 0x01	; 1
 b90:	70 40       	sbci	r23, 0x00	; 0
 b92:	01 10       	cpse	r0, r1
 b94:	d8 f7       	brcc	.-10     	; 0xb8c <strnlen_P+0x2>
 b96:	80 95       	com	r24
 b98:	90 95       	com	r25
 b9a:	8e 0f       	add	r24, r30
 b9c:	9f 1f       	adc	r25, r31
 b9e:	08 95       	ret

00000ba0 <strnlen>:
 ba0:	fc 01       	movw	r30, r24
 ba2:	61 50       	subi	r22, 0x01	; 1
 ba4:	70 40       	sbci	r23, 0x00	; 0
 ba6:	01 90       	ld	r0, Z+
 ba8:	01 10       	cpse	r0, r1
 baa:	d8 f7       	brcc	.-10     	; 0xba2 <strnlen+0x2>
 bac:	80 95       	com	r24
 bae:	90 95       	com	r25
 bb0:	8e 0f       	add	r24, r30
 bb2:	9f 1f       	adc	r25, r31
 bb4:	08 95       	ret

00000bb6 <strrev>:
 bb6:	dc 01       	movw	r26, r24
 bb8:	fc 01       	movw	r30, r24
 bba:	67 2f       	mov	r22, r23
 bbc:	71 91       	ld	r23, Z+
 bbe:	77 23       	and	r23, r23
 bc0:	e1 f7       	brne	.-8      	; 0xbba <strrev+0x4>
 bc2:	32 97       	sbiw	r30, 0x02	; 2
 bc4:	04 c0       	rjmp	.+8      	; 0xbce <strrev+0x18>
 bc6:	7c 91       	ld	r23, X
 bc8:	6d 93       	st	X+, r22
 bca:	70 83       	st	Z, r23
 bcc:	62 91       	ld	r22, -Z
 bce:	ae 17       	cp	r26, r30
 bd0:	bf 07       	cpc	r27, r31
 bd2:	c8 f3       	brcs	.-14     	; 0xbc6 <strrev+0x10>
 bd4:	08 95       	ret

00000bd6 <fputc>:
 bd6:	0f 93       	push	r16
 bd8:	1f 93       	push	r17
 bda:	cf 93       	push	r28
 bdc:	df 93       	push	r29
 bde:	fb 01       	movw	r30, r22
 be0:	23 81       	ldd	r18, Z+3	; 0x03
 be2:	21 fd       	sbrc	r18, 1
 be4:	03 c0       	rjmp	.+6      	; 0xbec <fputc+0x16>
 be6:	8f ef       	ldi	r24, 0xFF	; 255
 be8:	9f ef       	ldi	r25, 0xFF	; 255
 bea:	2c c0       	rjmp	.+88     	; 0xc44 <fputc+0x6e>
 bec:	22 ff       	sbrs	r18, 2
 bee:	16 c0       	rjmp	.+44     	; 0xc1c <fputc+0x46>
 bf0:	46 81       	ldd	r20, Z+6	; 0x06
 bf2:	57 81       	ldd	r21, Z+7	; 0x07
 bf4:	24 81       	ldd	r18, Z+4	; 0x04
 bf6:	35 81       	ldd	r19, Z+5	; 0x05
 bf8:	42 17       	cp	r20, r18
 bfa:	53 07       	cpc	r21, r19
 bfc:	44 f4       	brge	.+16     	; 0xc0e <fputc+0x38>
 bfe:	a0 81       	ld	r26, Z
 c00:	b1 81       	ldd	r27, Z+1	; 0x01
 c02:	9d 01       	movw	r18, r26
 c04:	2f 5f       	subi	r18, 0xFF	; 255
 c06:	3f 4f       	sbci	r19, 0xFF	; 255
 c08:	31 83       	std	Z+1, r19	; 0x01
 c0a:	20 83       	st	Z, r18
 c0c:	8c 93       	st	X, r24
 c0e:	26 81       	ldd	r18, Z+6	; 0x06
 c10:	37 81       	ldd	r19, Z+7	; 0x07
 c12:	2f 5f       	subi	r18, 0xFF	; 255
 c14:	3f 4f       	sbci	r19, 0xFF	; 255
 c16:	37 83       	std	Z+7, r19	; 0x07
 c18:	26 83       	std	Z+6, r18	; 0x06
 c1a:	14 c0       	rjmp	.+40     	; 0xc44 <fputc+0x6e>
 c1c:	8b 01       	movw	r16, r22
 c1e:	ec 01       	movw	r28, r24
 c20:	fb 01       	movw	r30, r22
 c22:	00 84       	ldd	r0, Z+8	; 0x08
 c24:	f1 85       	ldd	r31, Z+9	; 0x09
 c26:	e0 2d       	mov	r30, r0
 c28:	09 95       	icall
 c2a:	89 2b       	or	r24, r25
 c2c:	e1 f6       	brne	.-72     	; 0xbe6 <fputc+0x10>
 c2e:	d8 01       	movw	r26, r16
 c30:	16 96       	adiw	r26, 0x06	; 6
 c32:	8d 91       	ld	r24, X+
 c34:	9c 91       	ld	r25, X
 c36:	17 97       	sbiw	r26, 0x07	; 7
 c38:	01 96       	adiw	r24, 0x01	; 1
 c3a:	17 96       	adiw	r26, 0x07	; 7
 c3c:	9c 93       	st	X, r25
 c3e:	8e 93       	st	-X, r24
 c40:	16 97       	sbiw	r26, 0x06	; 6
 c42:	ce 01       	movw	r24, r28
 c44:	df 91       	pop	r29
 c46:	cf 91       	pop	r28
 c48:	1f 91       	pop	r17
 c4a:	0f 91       	pop	r16
 c4c:	08 95       	ret

00000c4e <__ultoa_invert>:
 c4e:	fa 01       	movw	r30, r20
 c50:	aa 27       	eor	r26, r26
 c52:	28 30       	cpi	r18, 0x08	; 8
 c54:	51 f1       	breq	.+84     	; 0xcaa <__ultoa_invert+0x5c>
 c56:	20 31       	cpi	r18, 0x10	; 16
 c58:	81 f1       	breq	.+96     	; 0xcba <__ultoa_invert+0x6c>
 c5a:	e8 94       	clt
 c5c:	6f 93       	push	r22
 c5e:	6e 7f       	andi	r22, 0xFE	; 254
 c60:	6e 5f       	subi	r22, 0xFE	; 254
 c62:	7f 4f       	sbci	r23, 0xFF	; 255
 c64:	8f 4f       	sbci	r24, 0xFF	; 255
 c66:	9f 4f       	sbci	r25, 0xFF	; 255
 c68:	af 4f       	sbci	r26, 0xFF	; 255
 c6a:	b1 e0       	ldi	r27, 0x01	; 1
 c6c:	3e d0       	rcall	.+124    	; 0xcea <__ultoa_invert+0x9c>
 c6e:	b4 e0       	ldi	r27, 0x04	; 4
 c70:	3c d0       	rcall	.+120    	; 0xcea <__ultoa_invert+0x9c>
 c72:	67 0f       	add	r22, r23
 c74:	78 1f       	adc	r23, r24
 c76:	89 1f       	adc	r24, r25
 c78:	9a 1f       	adc	r25, r26
 c7a:	a1 1d       	adc	r26, r1
 c7c:	68 0f       	add	r22, r24
 c7e:	79 1f       	adc	r23, r25
 c80:	8a 1f       	adc	r24, r26
 c82:	91 1d       	adc	r25, r1
 c84:	a1 1d       	adc	r26, r1
 c86:	6a 0f       	add	r22, r26
 c88:	71 1d       	adc	r23, r1
 c8a:	81 1d       	adc	r24, r1
 c8c:	91 1d       	adc	r25, r1
 c8e:	a1 1d       	adc	r26, r1
 c90:	20 d0       	rcall	.+64     	; 0xcd2 <__ultoa_invert+0x84>
 c92:	09 f4       	brne	.+2      	; 0xc96 <__ultoa_invert+0x48>
 c94:	68 94       	set
 c96:	3f 91       	pop	r19
 c98:	2a e0       	ldi	r18, 0x0A	; 10
 c9a:	26 9f       	mul	r18, r22
 c9c:	11 24       	eor	r1, r1
 c9e:	30 19       	sub	r19, r0
 ca0:	30 5d       	subi	r19, 0xD0	; 208
 ca2:	31 93       	st	Z+, r19
 ca4:	de f6       	brtc	.-74     	; 0xc5c <__ultoa_invert+0xe>
 ca6:	cf 01       	movw	r24, r30
 ca8:	08 95       	ret
 caa:	46 2f       	mov	r20, r22
 cac:	47 70       	andi	r20, 0x07	; 7
 cae:	40 5d       	subi	r20, 0xD0	; 208
 cb0:	41 93       	st	Z+, r20
 cb2:	b3 e0       	ldi	r27, 0x03	; 3
 cb4:	0f d0       	rcall	.+30     	; 0xcd4 <__ultoa_invert+0x86>
 cb6:	c9 f7       	brne	.-14     	; 0xcaa <__ultoa_invert+0x5c>
 cb8:	f6 cf       	rjmp	.-20     	; 0xca6 <__ultoa_invert+0x58>
 cba:	46 2f       	mov	r20, r22
 cbc:	4f 70       	andi	r20, 0x0F	; 15
 cbe:	40 5d       	subi	r20, 0xD0	; 208
 cc0:	4a 33       	cpi	r20, 0x3A	; 58
 cc2:	18 f0       	brcs	.+6      	; 0xcca <__ultoa_invert+0x7c>
 cc4:	49 5d       	subi	r20, 0xD9	; 217
 cc6:	31 fd       	sbrc	r19, 1
 cc8:	40 52       	subi	r20, 0x20	; 32
 cca:	41 93       	st	Z+, r20
 ccc:	02 d0       	rcall	.+4      	; 0xcd2 <__ultoa_invert+0x84>
 cce:	a9 f7       	brne	.-22     	; 0xcba <__ultoa_invert+0x6c>
 cd0:	ea cf       	rjmp	.-44     	; 0xca6 <__ultoa_invert+0x58>
 cd2:	b4 e0       	ldi	r27, 0x04	; 4
 cd4:	a6 95       	lsr	r26
 cd6:	97 95       	ror	r25
 cd8:	87 95       	ror	r24
 cda:	77 95       	ror	r23
 cdc:	67 95       	ror	r22
 cde:	ba 95       	dec	r27
 ce0:	c9 f7       	brne	.-14     	; 0xcd4 <__ultoa_invert+0x86>
 ce2:	00 97       	sbiw	r24, 0x00	; 0
 ce4:	61 05       	cpc	r22, r1
 ce6:	71 05       	cpc	r23, r1
 ce8:	08 95       	ret
 cea:	9b 01       	movw	r18, r22
 cec:	ac 01       	movw	r20, r24
 cee:	0a 2e       	mov	r0, r26
 cf0:	06 94       	lsr	r0
 cf2:	57 95       	ror	r21
 cf4:	47 95       	ror	r20
 cf6:	37 95       	ror	r19
 cf8:	27 95       	ror	r18
 cfa:	ba 95       	dec	r27
 cfc:	c9 f7       	brne	.-14     	; 0xcf0 <__ultoa_invert+0xa2>
 cfe:	62 0f       	add	r22, r18
 d00:	73 1f       	adc	r23, r19
 d02:	84 1f       	adc	r24, r20
 d04:	95 1f       	adc	r25, r21
 d06:	a0 1d       	adc	r26, r0
 d08:	08 95       	ret

00000d0a <__prologue_saves__>:
 d0a:	2f 92       	push	r2
 d0c:	3f 92       	push	r3
 d0e:	4f 92       	push	r4
 d10:	5f 92       	push	r5
 d12:	6f 92       	push	r6
 d14:	7f 92       	push	r7
 d16:	8f 92       	push	r8
 d18:	9f 92       	push	r9
 d1a:	af 92       	push	r10
 d1c:	bf 92       	push	r11
 d1e:	cf 92       	push	r12
 d20:	df 92       	push	r13
 d22:	ef 92       	push	r14
 d24:	ff 92       	push	r15
 d26:	0f 93       	push	r16
 d28:	1f 93       	push	r17
 d2a:	cf 93       	push	r28
 d2c:	df 93       	push	r29
 d2e:	cd b7       	in	r28, 0x3d	; 61
 d30:	de b7       	in	r29, 0x3e	; 62
 d32:	ca 1b       	sub	r28, r26
 d34:	db 0b       	sbc	r29, r27
 d36:	0f b6       	in	r0, 0x3f	; 63
 d38:	f8 94       	cli
 d3a:	de bf       	out	0x3e, r29	; 62
 d3c:	0f be       	out	0x3f, r0	; 63
 d3e:	cd bf       	out	0x3d, r28	; 61
 d40:	09 94       	ijmp

00000d42 <__epilogue_restores__>:
 d42:	2a 88       	ldd	r2, Y+18	; 0x12
 d44:	39 88       	ldd	r3, Y+17	; 0x11
 d46:	48 88       	ldd	r4, Y+16	; 0x10
 d48:	5f 84       	ldd	r5, Y+15	; 0x0f
 d4a:	6e 84       	ldd	r6, Y+14	; 0x0e
 d4c:	7d 84       	ldd	r7, Y+13	; 0x0d
 d4e:	8c 84       	ldd	r8, Y+12	; 0x0c
 d50:	9b 84       	ldd	r9, Y+11	; 0x0b
 d52:	aa 84       	ldd	r10, Y+10	; 0x0a
 d54:	b9 84       	ldd	r11, Y+9	; 0x09
 d56:	c8 84       	ldd	r12, Y+8	; 0x08
 d58:	df 80       	ldd	r13, Y+7	; 0x07
 d5a:	ee 80       	ldd	r14, Y+6	; 0x06
 d5c:	fd 80       	ldd	r15, Y+5	; 0x05
 d5e:	0c 81       	ldd	r16, Y+4	; 0x04
 d60:	1b 81       	ldd	r17, Y+3	; 0x03
 d62:	aa 81       	ldd	r26, Y+2	; 0x02
 d64:	b9 81       	ldd	r27, Y+1	; 0x01
 d66:	ce 0f       	add	r28, r30
 d68:	d1 1d       	adc	r29, r1
 d6a:	0f b6       	in	r0, 0x3f	; 63
 d6c:	f8 94       	cli
 d6e:	de bf       	out	0x3e, r29	; 62
 d70:	0f be       	out	0x3f, r0	; 63
 d72:	cd bf       	out	0x3d, r28	; 61
 d74:	ed 01       	movw	r28, r26
 d76:	08 95       	ret

00000d78 <_exit>:
 d78:	f8 94       	cli

00000d7a <__stop_program>:
 d7a:	ff cf       	rjmp	.-2      	; 0xd7a <__stop_program>
