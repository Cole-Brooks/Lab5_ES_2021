
Lab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  00000d84  00000df8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d84  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000e18  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e74  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000eb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c3b  00000000  00000000  00000f1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000803  00000000  00000000  00001b57  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000046f  00000000  00000000  0000235a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000160  00000000  00000000  000027cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000047d  00000000  00000000  0000292c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000050f  00000000  00000000  00002da9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  000032b8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e8       	ldi	r30, 0x84	; 132
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 32       	cpi	r26, 0x20	; 32
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 39 01 	call	0x272	; 0x272 <main>
  8e:	0c 94 c0 06 	jmp	0xd80	; 0xd80 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <usart_tx>:
	clock_t start_time = clock();
	
	// looping till required time is not achieved
	while (clock() < start_time + milli_seconds)
	;
}
  96:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  9a:	95 ff       	sbrs	r25, 5
  9c:	fc cf       	rjmp	.-8      	; 0x96 <usart_tx>
  9e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  a2:	08 95       	ret

000000a4 <print>:
  a4:	0f 93       	push	r16
  a6:	1f 93       	push	r17
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
  ac:	8c 01       	movw	r16, r24
  ae:	c0 e0       	ldi	r28, 0x00	; 0
  b0:	d0 e0       	ldi	r29, 0x00	; 0
  b2:	07 c0       	rjmp	.+14     	; 0xc2 <print+0x1e>
  b4:	f8 01       	movw	r30, r16
  b6:	ec 0f       	add	r30, r28
  b8:	fd 1f       	adc	r31, r29
  ba:	80 81       	ld	r24, Z
  bc:	0e 94 4b 00 	call	0x96	; 0x96 <usart_tx>
  c0:	21 96       	adiw	r28, 0x01	; 1
  c2:	f8 01       	movw	r30, r16
  c4:	01 90       	ld	r0, Z+
  c6:	00 20       	and	r0, r0
  c8:	e9 f7       	brne	.-6      	; 0xc4 <print+0x20>
  ca:	31 97       	sbiw	r30, 0x01	; 1
  cc:	e0 1b       	sub	r30, r16
  ce:	f1 0b       	sbc	r31, r17
  d0:	ce 17       	cp	r28, r30
  d2:	df 07       	cpc	r29, r31
  d4:	78 f3       	brcs	.-34     	; 0xb4 <print+0x10>
  d6:	df 91       	pop	r29
  d8:	cf 91       	pop	r28
  da:	1f 91       	pop	r17
  dc:	0f 91       	pop	r16
  de:	08 95       	ret

000000e0 <usart_init>:
  e0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  e4:	87 e6       	ldi	r24, 0x67	; 103
  e6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  ea:	e2 ec       	ldi	r30, 0xC2	; 194
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	86 60       	ori	r24, 0x06	; 6
  f2:	80 83       	st	Z, r24
  f4:	e1 ec       	ldi	r30, 0xC1	; 193
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	88 61       	ori	r24, 0x18	; 24
  fc:	80 83       	st	Z, r24
  fe:	08 95       	ret

00000100 <adc_read>:
 100:	ea e7       	ldi	r30, 0x7A	; 122
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	80 64       	ori	r24, 0x40	; 64
 108:	80 83       	st	Z, r24
 10a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 10e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 112:	08 95       	ret

00000114 <usart_rx>:
 114:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 118:	88 23       	and	r24, r24
 11a:	e4 f7       	brge	.-8      	; 0x114 <usart_rx>
 11c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	08 95       	ret

00000124 <adc_init>:
 124:	ec e7       	ldi	r30, 0x7C	; 124
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	80 81       	ld	r24, Z
 12a:	81 64       	ori	r24, 0x41	; 65
 12c:	80 83       	st	Z, r24
 12e:	ea e7       	ldi	r30, 0x7A	; 122
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	80 81       	ld	r24, Z
 134:	87 6c       	ori	r24, 0xC7	; 199
 136:	80 83       	st	Z, r24
 138:	08 95       	ret

0000013a <adc_get_double>:
 13a:	0e 94 80 00 	call	0x100	; 0x100 <adc_read>
 13e:	bc 01       	movw	r22, r24
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	0e 94 80 02 	call	0x500	; 0x500 <__floatunsisf>
 148:	20 e0       	ldi	r18, 0x00	; 0
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	40 ea       	ldi	r20, 0xA0	; 160
 14e:	50 e4       	ldi	r21, 0x40	; 64
 150:	0e 94 0e 03 	call	0x61c	; 0x61c <__mulsf3>
 154:	20 e0       	ldi	r18, 0x00	; 0
 156:	30 e0       	ldi	r19, 0x00	; 0
 158:	40 e8       	ldi	r20, 0x80	; 128
 15a:	5a e3       	ldi	r21, 0x3A	; 58
 15c:	0e 94 0e 03 	call	0x61c	; 0x61c <__mulsf3>
 160:	08 95       	ret

00000162 <measure_multiple>:

/////////////////////////
// Function: measure_multiple
// Purpose: execute multiple measurements following M command
/////////////////////////
void measure_multiple(int n, int dt){
 162:	2f 92       	push	r2
 164:	3f 92       	push	r3
 166:	4f 92       	push	r4
 168:	5f 92       	push	r5
 16a:	6f 92       	push	r6
 16c:	7f 92       	push	r7
 16e:	8f 92       	push	r8
 170:	9f 92       	push	r9
 172:	af 92       	push	r10
 174:	bf 92       	push	r11
 176:	cf 92       	push	r12
 178:	df 92       	push	r13
 17a:	ef 92       	push	r14
 17c:	ff 92       	push	r15
 17e:	0f 93       	push	r16
 180:	1f 93       	push	r17
 182:	cf 93       	push	r28
 184:	df 93       	push	r29
 186:	00 d0       	rcall	.+0      	; 0x188 <measure_multiple+0x26>
 188:	00 d0       	rcall	.+0      	; 0x18a <measure_multiple+0x28>
 18a:	1f 92       	push	r1
 18c:	cd b7       	in	r28, 0x3d	; 61
 18e:	de b7       	in	r29, 0x3e	; 62
 190:	6c 01       	movw	r12, r24
 192:	1b 01       	movw	r2, r22
	char out[5];
	int dt_out = dt;
 194:	7b 01       	movw	r14, r22
	while (n > 0){
 196:	51 c0       	rjmp	.+162    	; 0x23a <measure_multiple+0xd8>
		print("t = ");
 198:	80 e0       	ldi	r24, 0x00	; 0
 19a:	91 e0       	ldi	r25, 0x01	; 1
 19c:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		sprintf(out,"%i",dt_out);
 1a0:	ff 92       	push	r15
 1a2:	ef 92       	push	r14
 1a4:	85 e0       	ldi	r24, 0x05	; 5
 1a6:	91 e0       	ldi	r25, 0x01	; 1
 1a8:	9f 93       	push	r25
 1aa:	8f 93       	push	r24
 1ac:	8e 01       	movw	r16, r28
 1ae:	0f 5f       	subi	r16, 0xFF	; 255
 1b0:	1f 4f       	sbci	r17, 0xFF	; 255
 1b2:	1f 93       	push	r17
 1b4:	0f 93       	push	r16
 1b6:	0e 94 c6 03 	call	0x78c	; 0x78c <sprintf>
		print(out);
 1ba:	c8 01       	movw	r24, r16
 1bc:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		print(" s, V = ");
 1c0:	88 e0       	ldi	r24, 0x08	; 8
 1c2:	91 e0       	ldi	r25, 0x01	; 1
 1c4:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		double v = adc_get_double();
 1c8:	0e 94 9d 00 	call	0x13a	; 0x13a <adc_get_double>
 1cc:	2b 01       	movw	r4, r22
 1ce:	3c 01       	movw	r6, r24
		sprintf(out,"%d.%02u", (int) v, (int) ((v - (int) v ) * 100) );
 1d0:	0e 94 4a 02 	call	0x494	; 0x494 <__fixsfsi>
 1d4:	4b 01       	movw	r8, r22
 1d6:	5c 01       	movw	r10, r24
 1d8:	07 2e       	mov	r0, r23
 1da:	00 0c       	add	r0, r0
 1dc:	88 0b       	sbc	r24, r24
 1de:	99 0b       	sbc	r25, r25
 1e0:	0e 94 82 02 	call	0x504	; 0x504 <__floatsisf>
 1e4:	9b 01       	movw	r18, r22
 1e6:	ac 01       	movw	r20, r24
 1e8:	c3 01       	movw	r24, r6
 1ea:	b2 01       	movw	r22, r4
 1ec:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__subsf3>
 1f0:	20 e0       	ldi	r18, 0x00	; 0
 1f2:	30 e0       	ldi	r19, 0x00	; 0
 1f4:	48 ec       	ldi	r20, 0xC8	; 200
 1f6:	52 e4       	ldi	r21, 0x42	; 66
 1f8:	0e 94 0e 03 	call	0x61c	; 0x61c <__mulsf3>
 1fc:	0e 94 4a 02 	call	0x494	; 0x494 <__fixsfsi>
 200:	7f 93       	push	r23
 202:	6f 93       	push	r22
 204:	9f 92       	push	r9
 206:	8f 92       	push	r8
 208:	81 e1       	ldi	r24, 0x11	; 17
 20a:	91 e0       	ldi	r25, 0x01	; 1
 20c:	9f 93       	push	r25
 20e:	8f 93       	push	r24
 210:	1f 93       	push	r17
 212:	0f 93       	push	r16
 214:	0e 94 c6 03 	call	0x78c	; 0x78c <sprintf>
		print(out);
 218:	c8 01       	movw	r24, r16
 21a:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		print("V\n");
 21e:	8a e1       	ldi	r24, 0x1A	; 26
 220:	91 e0       	ldi	r25, 0x01	; 1
 222:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		
		n = n - 1;
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	c8 1a       	sub	r12, r24
 22a:	d1 08       	sbc	r13, r1
		dt_out = dt_out + dt;
 22c:	e2 0c       	add	r14, r2
 22e:	f3 1c       	adc	r15, r3
 230:	0f b6       	in	r0, 0x3f	; 63
 232:	f8 94       	cli
 234:	de bf       	out	0x3e, r29	; 62
 236:	0f be       	out	0x3f, r0	; 63
 238:	cd bf       	out	0x3d, r28	; 61
// Purpose: execute multiple measurements following M command
/////////////////////////
void measure_multiple(int n, int dt){
	char out[5];
	int dt_out = dt;
	while (n > 0){
 23a:	1c 14       	cp	r1, r12
 23c:	1d 04       	cpc	r1, r13
 23e:	0c f4       	brge	.+2      	; 0x242 <measure_multiple+0xe0>
 240:	ab cf       	rjmp	.-170    	; 0x198 <measure_multiple+0x36>
		n = n - 1;
		dt_out = dt_out + dt;
		//delay(dt);
		
	}
}
 242:	0f 90       	pop	r0
 244:	0f 90       	pop	r0
 246:	0f 90       	pop	r0
 248:	0f 90       	pop	r0
 24a:	0f 90       	pop	r0
 24c:	df 91       	pop	r29
 24e:	cf 91       	pop	r28
 250:	1f 91       	pop	r17
 252:	0f 91       	pop	r16
 254:	ff 90       	pop	r15
 256:	ef 90       	pop	r14
 258:	df 90       	pop	r13
 25a:	cf 90       	pop	r12
 25c:	bf 90       	pop	r11
 25e:	af 90       	pop	r10
 260:	9f 90       	pop	r9
 262:	8f 90       	pop	r8
 264:	7f 90       	pop	r7
 266:	6f 90       	pop	r6
 268:	5f 90       	pop	r5
 26a:	4f 90       	pop	r4
 26c:	3f 90       	pop	r3
 26e:	2f 90       	pop	r2
 270:	08 95       	ret

00000272 <main>:
//
// Purpose: Drives the program
//
////////////////////////////////////////////////////////////////////
int main(void)
{	
 272:	cf 93       	push	r28
 274:	df 93       	push	r29
 276:	cd b7       	in	r28, 0x3d	; 61
 278:	de b7       	in	r29, 0x3e	; 62
 27a:	28 97       	sbiw	r28, 0x08	; 8
 27c:	0f b6       	in	r0, 0x3f	; 63
 27e:	f8 94       	cli
 280:	de bf       	out	0x3e, r29	; 62
 282:	0f be       	out	0x3f, r0	; 63
 284:	cd bf       	out	0x3d, r28	; 61
	// Initializations
	usart_init();    
 286:	0e 94 70 00 	call	0xe0	; 0xe0 <usart_init>
	adc_init();
 28a:	0e 94 92 00 	call	0x124	; 0x124 <adc_init>
	
	// main loop
    while (1) 
    {
		uint16_t input = usart_rx();
 28e:	0e 94 8a 00 	call	0x114	; 0x114 <usart_rx>
 292:	8c 01       	movw	r16, r24
		char output_str[5];
		if(input == 'G')  // user entered G
 294:	87 34       	cpi	r24, 0x47	; 71
 296:	91 05       	cpc	r25, r1
 298:	d9 f5       	brne	.+118    	; 0x310 <main+0x9e>
		{
			double adc_val = adc_get_double();
 29a:	0e 94 9d 00 	call	0x13a	; 0x13a <adc_get_double>
 29e:	4b 01       	movw	r8, r22
 2a0:	5c 01       	movw	r10, r24
			
			// do some c nonsense to convert float to string
			char out[8];
			sprintf(out,"%d.%02u", (int) adc_val, (int) ((adc_val - (int) adc_val ) * 100) );
 2a2:	0e 94 4a 02 	call	0x494	; 0x494 <__fixsfsi>
 2a6:	6b 01       	movw	r12, r22
 2a8:	7c 01       	movw	r14, r24
 2aa:	07 2e       	mov	r0, r23
 2ac:	00 0c       	add	r0, r0
 2ae:	88 0b       	sbc	r24, r24
 2b0:	99 0b       	sbc	r25, r25
 2b2:	0e 94 82 02 	call	0x504	; 0x504 <__floatsisf>
 2b6:	9b 01       	movw	r18, r22
 2b8:	ac 01       	movw	r20, r24
 2ba:	c5 01       	movw	r24, r10
 2bc:	b4 01       	movw	r22, r8
 2be:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__subsf3>
 2c2:	20 e0       	ldi	r18, 0x00	; 0
 2c4:	30 e0       	ldi	r19, 0x00	; 0
 2c6:	48 ec       	ldi	r20, 0xC8	; 200
 2c8:	52 e4       	ldi	r21, 0x42	; 66
 2ca:	0e 94 0e 03 	call	0x61c	; 0x61c <__mulsf3>
 2ce:	0e 94 4a 02 	call	0x494	; 0x494 <__fixsfsi>
 2d2:	7f 93       	push	r23
 2d4:	6f 93       	push	r22
 2d6:	df 92       	push	r13
 2d8:	cf 92       	push	r12
 2da:	81 e1       	ldi	r24, 0x11	; 17
 2dc:	91 e0       	ldi	r25, 0x01	; 1
 2de:	9f 93       	push	r25
 2e0:	8f 93       	push	r24
 2e2:	ce 01       	movw	r24, r28
 2e4:	01 96       	adiw	r24, 0x01	; 1
 2e6:	7c 01       	movw	r14, r24
 2e8:	9f 93       	push	r25
 2ea:	8f 93       	push	r24
 2ec:	0e 94 c6 03 	call	0x78c	; 0x78c <sprintf>
			
			print("V = ");
 2f0:	8c e0       	ldi	r24, 0x0C	; 12
 2f2:	91 e0       	ldi	r25, 0x01	; 1
 2f4:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
			print(out);
 2f8:	c7 01       	movw	r24, r14
 2fa:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
			print(" V\n");
 2fe:	89 e1       	ldi	r24, 0x19	; 25
 300:	91 e0       	ldi	r25, 0x01	; 1
 302:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
 306:	0f b6       	in	r0, 0x3f	; 63
 308:	f8 94       	cli
 30a:	de bf       	out	0x3e, r29	; 62
 30c:	0f be       	out	0x3f, r0	; 63
 30e:	cd bf       	out	0x3d, r28	; 61
		}
		if(input == 'M')  // user entered M, will also print ascii of everything following M
 310:	0d 34       	cpi	r16, 0x4D	; 77
 312:	11 05       	cpc	r17, r1
 314:	09 f0       	breq	.+2      	; 0x318 <main+0xa6>
 316:	bb cf       	rjmp	.-138    	; 0x28e <main+0x1c>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 318:	4a e0       	ldi	r20, 0x0A	; 10
 31a:	be 01       	movw	r22, r28
 31c:	6f 5f       	subi	r22, 0xFF	; 255
 31e:	7f 4f       	sbci	r23, 0xFF	; 255
 320:	c8 01       	movw	r24, r16
 322:	0e 94 99 03 	call	0x732	; 0x732 <__itoa_ncheck>
			int num_temp = 0; // temporary storage of n and dt
			int n = 0;
			int dt = 0;
			int gotn = 0;	
			itoa(input, output_str,10);
			print(output_str);
 326:	ce 01       	movw	r24, r28
 328:	01 96       	adiw	r24, 0x01	; 1
 32a:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
			print("\n");
 32e:	8e e1       	ldi	r24, 0x1E	; 30
 330:	91 e0       	ldi	r25, 0x01	; 1
 332:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
		if(input == 'M')  // user entered M, will also print ascii of everything following M
		{
			int num_temp = 0; // temporary storage of n and dt
			int n = 0;
			int dt = 0;
			int gotn = 0;	
 336:	c1 2c       	mov	r12, r1
 338:	d1 2c       	mov	r13, r1
		}
		if(input == 'M')  // user entered M, will also print ascii of everything following M
		{
			int num_temp = 0; // temporary storage of n and dt
			int n = 0;
			int dt = 0;
 33a:	81 2c       	mov	r8, r1
 33c:	91 2c       	mov	r9, r1
			print(" V\n");
		}
		if(input == 'M')  // user entered M, will also print ascii of everything following M
		{
			int num_temp = 0; // temporary storage of n and dt
			int n = 0;
 33e:	a1 2c       	mov	r10, r1
 340:	b1 2c       	mov	r11, r1
			print(out);
			print(" V\n");
		}
		if(input == 'M')  // user entered M, will also print ascii of everything following M
		{
			int num_temp = 0; // temporary storage of n and dt
 342:	e1 2c       	mov	r14, r1
 344:	f1 2c       	mov	r15, r1
			int dt = 0;
			int gotn = 0;	
			itoa(input, output_str,10);
			print(output_str);
			print("\n");
			while (input != 10){  // not at end of string
 346:	2b c0       	rjmp	.+86     	; 0x39e <main+0x12c>
				input = usart_rx();
 348:	0e 94 8a 00 	call	0x114	; 0x114 <usart_rx>
 34c:	8c 01       	movw	r16, r24
				if (input == 44){ // found comma
 34e:	8c 97       	sbiw	r24, 0x2c	; 44
 350:	31 f5       	brne	.+76     	; 0x39e <main+0x12c>
					input = usart_rx();
 352:	0e 94 8a 00 	call	0x114	; 0x114 <usart_rx>
 356:	8c 01       	movw	r16, r24
					while (input != 44){
 358:	0f c0       	rjmp	.+30     	; 0x378 <main+0x106>
						input = usart_rx();
 35a:	0e 94 8a 00 	call	0x114	; 0x114 <usart_rx>
 35e:	8c 01       	movw	r16, r24
 360:	4a e0       	ldi	r20, 0x0A	; 10
 362:	be 01       	movw	r22, r28
 364:	6f 5f       	subi	r22, 0xFF	; 255
 366:	7f 4f       	sbci	r23, 0xFF	; 255
 368:	0e 94 99 03 	call	0x732	; 0x732 <__itoa_ncheck>
						itoa(input, output_str,10);
						num_temp += atoi(output_str);
 36c:	ce 01       	movw	r24, r28
 36e:	01 96       	adiw	r24, 0x01	; 1
 370:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <atoi>
 374:	e8 0e       	add	r14, r24
 376:	f9 1e       	adc	r15, r25
			print("\n");
			while (input != 10){  // not at end of string
				input = usart_rx();
				if (input == 44){ // found comma
					input = usart_rx();
					while (input != 44){
 378:	0c 32       	cpi	r16, 0x2C	; 44
 37a:	11 05       	cpc	r17, r1
 37c:	71 f7       	brne	.-36     	; 0x35a <main+0xe8>
						input = usart_rx();
						itoa(input, output_str,10);
						num_temp += atoi(output_str);
					}
					if (gotn == 0){
 37e:	c1 14       	cp	r12, r1
 380:	d1 04       	cpc	r13, r1
 382:	29 f0       	breq	.+10     	; 0x38e <main+0x11c>
						n = num_temp;
						gotn = 1;
					}
					else if (gotn == 1){
 384:	91 e0       	ldi	r25, 0x01	; 1
 386:	c9 16       	cp	r12, r25
 388:	d1 04       	cpc	r13, r1
 38a:	49 f4       	brne	.+18     	; 0x39e <main+0x12c>
 38c:	06 c0       	rjmp	.+12     	; 0x39a <main+0x128>
						input = usart_rx();
						itoa(input, output_str,10);
						num_temp += atoi(output_str);
					}
					if (gotn == 0){
						n = num_temp;
 38e:	ae 2c       	mov	r10, r14
 390:	bf 2c       	mov	r11, r15
						gotn = 1;
 392:	cc 24       	eor	r12, r12
 394:	c3 94       	inc	r12
 396:	d1 2c       	mov	r13, r1
 398:	02 c0       	rjmp	.+4      	; 0x39e <main+0x12c>
					}
					else if (gotn == 1){
						dt = num_temp;
 39a:	8e 2c       	mov	r8, r14
 39c:	9f 2c       	mov	r9, r15
			int dt = 0;
			int gotn = 0;	
			itoa(input, output_str,10);
			print(output_str);
			print("\n");
			while (input != 10){  // not at end of string
 39e:	0a 30       	cpi	r16, 0x0A	; 10
 3a0:	11 05       	cpc	r17, r1
 3a2:	91 f6       	brne	.-92     	; 0x348 <main+0xd6>
					
				}
			}


			print("\n\n");
 3a4:	8d e1       	ldi	r24, 0x1D	; 29
 3a6:	91 e0       	ldi	r25, 0x01	; 1
 3a8:	0e 94 52 00 	call	0xa4	; 0xa4 <print>
			measure_multiple(n,dt);
 3ac:	68 2d       	mov	r22, r8
 3ae:	79 2d       	mov	r23, r9
 3b0:	8a 2d       	mov	r24, r10
 3b2:	9b 2d       	mov	r25, r11
 3b4:	0e 94 b1 00 	call	0x162	; 0x162 <measure_multiple>
		}
		if(input == 4) // EOT
		{
			// do nothing (prevents double print at end for some reason)
		}
    }
 3b8:	6a cf       	rjmp	.-300    	; 0x28e <main+0x1c>

000003ba <__subsf3>:
 3ba:	50 58       	subi	r21, 0x80	; 128

000003bc <__addsf3>:
 3bc:	bb 27       	eor	r27, r27
 3be:	aa 27       	eor	r26, r26
 3c0:	0e 94 f5 01 	call	0x3ea	; 0x3ea <__addsf3x>
 3c4:	0c 94 d4 02 	jmp	0x5a8	; 0x5a8 <__fp_round>
 3c8:	0e 94 c6 02 	call	0x58c	; 0x58c <__fp_pscA>
 3cc:	38 f0       	brcs	.+14     	; 0x3dc <__addsf3+0x20>
 3ce:	0e 94 cd 02 	call	0x59a	; 0x59a <__fp_pscB>
 3d2:	20 f0       	brcs	.+8      	; 0x3dc <__addsf3+0x20>
 3d4:	39 f4       	brne	.+14     	; 0x3e4 <__addsf3+0x28>
 3d6:	9f 3f       	cpi	r25, 0xFF	; 255
 3d8:	19 f4       	brne	.+6      	; 0x3e0 <__addsf3+0x24>
 3da:	26 f4       	brtc	.+8      	; 0x3e4 <__addsf3+0x28>
 3dc:	0c 94 c3 02 	jmp	0x586	; 0x586 <__fp_nan>
 3e0:	0e f4       	brtc	.+2      	; 0x3e4 <__addsf3+0x28>
 3e2:	e0 95       	com	r30
 3e4:	e7 fb       	bst	r30, 7
 3e6:	0c 94 bd 02 	jmp	0x57a	; 0x57a <__fp_inf>

000003ea <__addsf3x>:
 3ea:	e9 2f       	mov	r30, r25
 3ec:	0e 94 e5 02 	call	0x5ca	; 0x5ca <__fp_split3>
 3f0:	58 f3       	brcs	.-42     	; 0x3c8 <__addsf3+0xc>
 3f2:	ba 17       	cp	r27, r26
 3f4:	62 07       	cpc	r22, r18
 3f6:	73 07       	cpc	r23, r19
 3f8:	84 07       	cpc	r24, r20
 3fa:	95 07       	cpc	r25, r21
 3fc:	20 f0       	brcs	.+8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3fe:	79 f4       	brne	.+30     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 400:	a6 f5       	brtc	.+104    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 402:	0c 94 07 03 	jmp	0x60e	; 0x60e <__fp_zero>
 406:	0e f4       	brtc	.+2      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 408:	e0 95       	com	r30
 40a:	0b 2e       	mov	r0, r27
 40c:	ba 2f       	mov	r27, r26
 40e:	a0 2d       	mov	r26, r0
 410:	0b 01       	movw	r0, r22
 412:	b9 01       	movw	r22, r18
 414:	90 01       	movw	r18, r0
 416:	0c 01       	movw	r0, r24
 418:	ca 01       	movw	r24, r20
 41a:	a0 01       	movw	r20, r0
 41c:	11 24       	eor	r1, r1
 41e:	ff 27       	eor	r31, r31
 420:	59 1b       	sub	r21, r25
 422:	99 f0       	breq	.+38     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 424:	59 3f       	cpi	r21, 0xF9	; 249
 426:	50 f4       	brcc	.+20     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 428:	50 3e       	cpi	r21, 0xE0	; 224
 42a:	68 f1       	brcs	.+90     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 42c:	1a 16       	cp	r1, r26
 42e:	f0 40       	sbci	r31, 0x00	; 0
 430:	a2 2f       	mov	r26, r18
 432:	23 2f       	mov	r18, r19
 434:	34 2f       	mov	r19, r20
 436:	44 27       	eor	r20, r20
 438:	58 5f       	subi	r21, 0xF8	; 248
 43a:	f3 cf       	rjmp	.-26     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 43c:	46 95       	lsr	r20
 43e:	37 95       	ror	r19
 440:	27 95       	ror	r18
 442:	a7 95       	ror	r26
 444:	f0 40       	sbci	r31, 0x00	; 0
 446:	53 95       	inc	r21
 448:	c9 f7       	brne	.-14     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 44a:	7e f4       	brtc	.+30     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 44c:	1f 16       	cp	r1, r31
 44e:	ba 0b       	sbc	r27, r26
 450:	62 0b       	sbc	r22, r18
 452:	73 0b       	sbc	r23, r19
 454:	84 0b       	sbc	r24, r20
 456:	ba f0       	brmi	.+46     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 458:	91 50       	subi	r25, 0x01	; 1
 45a:	a1 f0       	breq	.+40     	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
 45c:	ff 0f       	add	r31, r31
 45e:	bb 1f       	adc	r27, r27
 460:	66 1f       	adc	r22, r22
 462:	77 1f       	adc	r23, r23
 464:	88 1f       	adc	r24, r24
 466:	c2 f7       	brpl	.-16     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 468:	0e c0       	rjmp	.+28     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 46a:	ba 0f       	add	r27, r26
 46c:	62 1f       	adc	r22, r18
 46e:	73 1f       	adc	r23, r19
 470:	84 1f       	adc	r24, r20
 472:	48 f4       	brcc	.+18     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 474:	87 95       	ror	r24
 476:	77 95       	ror	r23
 478:	67 95       	ror	r22
 47a:	b7 95       	ror	r27
 47c:	f7 95       	ror	r31
 47e:	9e 3f       	cpi	r25, 0xFE	; 254
 480:	08 f0       	brcs	.+2      	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
 482:	b0 cf       	rjmp	.-160    	; 0x3e4 <__addsf3+0x28>
 484:	93 95       	inc	r25
 486:	88 0f       	add	r24, r24
 488:	08 f0       	brcs	.+2      	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 48a:	99 27       	eor	r25, r25
 48c:	ee 0f       	add	r30, r30
 48e:	97 95       	ror	r25
 490:	87 95       	ror	r24
 492:	08 95       	ret

00000494 <__fixsfsi>:
 494:	0e 94 51 02 	call	0x4a2	; 0x4a2 <__fixunssfsi>
 498:	68 94       	set
 49a:	b1 11       	cpse	r27, r1
 49c:	0c 94 08 03 	jmp	0x610	; 0x610 <__fp_szero>
 4a0:	08 95       	ret

000004a2 <__fixunssfsi>:
 4a2:	0e 94 ed 02 	call	0x5da	; 0x5da <__fp_splitA>
 4a6:	88 f0       	brcs	.+34     	; 0x4ca <__fixunssfsi+0x28>
 4a8:	9f 57       	subi	r25, 0x7F	; 127
 4aa:	98 f0       	brcs	.+38     	; 0x4d2 <__fixunssfsi+0x30>
 4ac:	b9 2f       	mov	r27, r25
 4ae:	99 27       	eor	r25, r25
 4b0:	b7 51       	subi	r27, 0x17	; 23
 4b2:	b0 f0       	brcs	.+44     	; 0x4e0 <__fixunssfsi+0x3e>
 4b4:	e1 f0       	breq	.+56     	; 0x4ee <__fixunssfsi+0x4c>
 4b6:	66 0f       	add	r22, r22
 4b8:	77 1f       	adc	r23, r23
 4ba:	88 1f       	adc	r24, r24
 4bc:	99 1f       	adc	r25, r25
 4be:	1a f0       	brmi	.+6      	; 0x4c6 <__fixunssfsi+0x24>
 4c0:	ba 95       	dec	r27
 4c2:	c9 f7       	brne	.-14     	; 0x4b6 <__fixunssfsi+0x14>
 4c4:	14 c0       	rjmp	.+40     	; 0x4ee <__fixunssfsi+0x4c>
 4c6:	b1 30       	cpi	r27, 0x01	; 1
 4c8:	91 f0       	breq	.+36     	; 0x4ee <__fixunssfsi+0x4c>
 4ca:	0e 94 07 03 	call	0x60e	; 0x60e <__fp_zero>
 4ce:	b1 e0       	ldi	r27, 0x01	; 1
 4d0:	08 95       	ret
 4d2:	0c 94 07 03 	jmp	0x60e	; 0x60e <__fp_zero>
 4d6:	67 2f       	mov	r22, r23
 4d8:	78 2f       	mov	r23, r24
 4da:	88 27       	eor	r24, r24
 4dc:	b8 5f       	subi	r27, 0xF8	; 248
 4de:	39 f0       	breq	.+14     	; 0x4ee <__fixunssfsi+0x4c>
 4e0:	b9 3f       	cpi	r27, 0xF9	; 249
 4e2:	cc f3       	brlt	.-14     	; 0x4d6 <__fixunssfsi+0x34>
 4e4:	86 95       	lsr	r24
 4e6:	77 95       	ror	r23
 4e8:	67 95       	ror	r22
 4ea:	b3 95       	inc	r27
 4ec:	d9 f7       	brne	.-10     	; 0x4e4 <__fixunssfsi+0x42>
 4ee:	3e f4       	brtc	.+14     	; 0x4fe <__fixunssfsi+0x5c>
 4f0:	90 95       	com	r25
 4f2:	80 95       	com	r24
 4f4:	70 95       	com	r23
 4f6:	61 95       	neg	r22
 4f8:	7f 4f       	sbci	r23, 0xFF	; 255
 4fa:	8f 4f       	sbci	r24, 0xFF	; 255
 4fc:	9f 4f       	sbci	r25, 0xFF	; 255
 4fe:	08 95       	ret

00000500 <__floatunsisf>:
 500:	e8 94       	clt
 502:	09 c0       	rjmp	.+18     	; 0x516 <__floatsisf+0x12>

00000504 <__floatsisf>:
 504:	97 fb       	bst	r25, 7
 506:	3e f4       	brtc	.+14     	; 0x516 <__floatsisf+0x12>
 508:	90 95       	com	r25
 50a:	80 95       	com	r24
 50c:	70 95       	com	r23
 50e:	61 95       	neg	r22
 510:	7f 4f       	sbci	r23, 0xFF	; 255
 512:	8f 4f       	sbci	r24, 0xFF	; 255
 514:	9f 4f       	sbci	r25, 0xFF	; 255
 516:	99 23       	and	r25, r25
 518:	a9 f0       	breq	.+42     	; 0x544 <__floatsisf+0x40>
 51a:	f9 2f       	mov	r31, r25
 51c:	96 e9       	ldi	r25, 0x96	; 150
 51e:	bb 27       	eor	r27, r27
 520:	93 95       	inc	r25
 522:	f6 95       	lsr	r31
 524:	87 95       	ror	r24
 526:	77 95       	ror	r23
 528:	67 95       	ror	r22
 52a:	b7 95       	ror	r27
 52c:	f1 11       	cpse	r31, r1
 52e:	f8 cf       	rjmp	.-16     	; 0x520 <__floatsisf+0x1c>
 530:	fa f4       	brpl	.+62     	; 0x570 <__floatsisf+0x6c>
 532:	bb 0f       	add	r27, r27
 534:	11 f4       	brne	.+4      	; 0x53a <__floatsisf+0x36>
 536:	60 ff       	sbrs	r22, 0
 538:	1b c0       	rjmp	.+54     	; 0x570 <__floatsisf+0x6c>
 53a:	6f 5f       	subi	r22, 0xFF	; 255
 53c:	7f 4f       	sbci	r23, 0xFF	; 255
 53e:	8f 4f       	sbci	r24, 0xFF	; 255
 540:	9f 4f       	sbci	r25, 0xFF	; 255
 542:	16 c0       	rjmp	.+44     	; 0x570 <__floatsisf+0x6c>
 544:	88 23       	and	r24, r24
 546:	11 f0       	breq	.+4      	; 0x54c <__floatsisf+0x48>
 548:	96 e9       	ldi	r25, 0x96	; 150
 54a:	11 c0       	rjmp	.+34     	; 0x56e <__floatsisf+0x6a>
 54c:	77 23       	and	r23, r23
 54e:	21 f0       	breq	.+8      	; 0x558 <__floatsisf+0x54>
 550:	9e e8       	ldi	r25, 0x8E	; 142
 552:	87 2f       	mov	r24, r23
 554:	76 2f       	mov	r23, r22
 556:	05 c0       	rjmp	.+10     	; 0x562 <__floatsisf+0x5e>
 558:	66 23       	and	r22, r22
 55a:	71 f0       	breq	.+28     	; 0x578 <__floatsisf+0x74>
 55c:	96 e8       	ldi	r25, 0x86	; 134
 55e:	86 2f       	mov	r24, r22
 560:	70 e0       	ldi	r23, 0x00	; 0
 562:	60 e0       	ldi	r22, 0x00	; 0
 564:	2a f0       	brmi	.+10     	; 0x570 <__floatsisf+0x6c>
 566:	9a 95       	dec	r25
 568:	66 0f       	add	r22, r22
 56a:	77 1f       	adc	r23, r23
 56c:	88 1f       	adc	r24, r24
 56e:	da f7       	brpl	.-10     	; 0x566 <__floatsisf+0x62>
 570:	88 0f       	add	r24, r24
 572:	96 95       	lsr	r25
 574:	87 95       	ror	r24
 576:	97 f9       	bld	r25, 7
 578:	08 95       	ret

0000057a <__fp_inf>:
 57a:	97 f9       	bld	r25, 7
 57c:	9f 67       	ori	r25, 0x7F	; 127
 57e:	80 e8       	ldi	r24, 0x80	; 128
 580:	70 e0       	ldi	r23, 0x00	; 0
 582:	60 e0       	ldi	r22, 0x00	; 0
 584:	08 95       	ret

00000586 <__fp_nan>:
 586:	9f ef       	ldi	r25, 0xFF	; 255
 588:	80 ec       	ldi	r24, 0xC0	; 192
 58a:	08 95       	ret

0000058c <__fp_pscA>:
 58c:	00 24       	eor	r0, r0
 58e:	0a 94       	dec	r0
 590:	16 16       	cp	r1, r22
 592:	17 06       	cpc	r1, r23
 594:	18 06       	cpc	r1, r24
 596:	09 06       	cpc	r0, r25
 598:	08 95       	ret

0000059a <__fp_pscB>:
 59a:	00 24       	eor	r0, r0
 59c:	0a 94       	dec	r0
 59e:	12 16       	cp	r1, r18
 5a0:	13 06       	cpc	r1, r19
 5a2:	14 06       	cpc	r1, r20
 5a4:	05 06       	cpc	r0, r21
 5a6:	08 95       	ret

000005a8 <__fp_round>:
 5a8:	09 2e       	mov	r0, r25
 5aa:	03 94       	inc	r0
 5ac:	00 0c       	add	r0, r0
 5ae:	11 f4       	brne	.+4      	; 0x5b4 <__fp_round+0xc>
 5b0:	88 23       	and	r24, r24
 5b2:	52 f0       	brmi	.+20     	; 0x5c8 <__fp_round+0x20>
 5b4:	bb 0f       	add	r27, r27
 5b6:	40 f4       	brcc	.+16     	; 0x5c8 <__fp_round+0x20>
 5b8:	bf 2b       	or	r27, r31
 5ba:	11 f4       	brne	.+4      	; 0x5c0 <__fp_round+0x18>
 5bc:	60 ff       	sbrs	r22, 0
 5be:	04 c0       	rjmp	.+8      	; 0x5c8 <__fp_round+0x20>
 5c0:	6f 5f       	subi	r22, 0xFF	; 255
 5c2:	7f 4f       	sbci	r23, 0xFF	; 255
 5c4:	8f 4f       	sbci	r24, 0xFF	; 255
 5c6:	9f 4f       	sbci	r25, 0xFF	; 255
 5c8:	08 95       	ret

000005ca <__fp_split3>:
 5ca:	57 fd       	sbrc	r21, 7
 5cc:	90 58       	subi	r25, 0x80	; 128
 5ce:	44 0f       	add	r20, r20
 5d0:	55 1f       	adc	r21, r21
 5d2:	59 f0       	breq	.+22     	; 0x5ea <__fp_splitA+0x10>
 5d4:	5f 3f       	cpi	r21, 0xFF	; 255
 5d6:	71 f0       	breq	.+28     	; 0x5f4 <__fp_splitA+0x1a>
 5d8:	47 95       	ror	r20

000005da <__fp_splitA>:
 5da:	88 0f       	add	r24, r24
 5dc:	97 fb       	bst	r25, 7
 5de:	99 1f       	adc	r25, r25
 5e0:	61 f0       	breq	.+24     	; 0x5fa <__fp_splitA+0x20>
 5e2:	9f 3f       	cpi	r25, 0xFF	; 255
 5e4:	79 f0       	breq	.+30     	; 0x604 <__fp_splitA+0x2a>
 5e6:	87 95       	ror	r24
 5e8:	08 95       	ret
 5ea:	12 16       	cp	r1, r18
 5ec:	13 06       	cpc	r1, r19
 5ee:	14 06       	cpc	r1, r20
 5f0:	55 1f       	adc	r21, r21
 5f2:	f2 cf       	rjmp	.-28     	; 0x5d8 <__fp_split3+0xe>
 5f4:	46 95       	lsr	r20
 5f6:	f1 df       	rcall	.-30     	; 0x5da <__fp_splitA>
 5f8:	08 c0       	rjmp	.+16     	; 0x60a <__fp_splitA+0x30>
 5fa:	16 16       	cp	r1, r22
 5fc:	17 06       	cpc	r1, r23
 5fe:	18 06       	cpc	r1, r24
 600:	99 1f       	adc	r25, r25
 602:	f1 cf       	rjmp	.-30     	; 0x5e6 <__fp_splitA+0xc>
 604:	86 95       	lsr	r24
 606:	71 05       	cpc	r23, r1
 608:	61 05       	cpc	r22, r1
 60a:	08 94       	sec
 60c:	08 95       	ret

0000060e <__fp_zero>:
 60e:	e8 94       	clt

00000610 <__fp_szero>:
 610:	bb 27       	eor	r27, r27
 612:	66 27       	eor	r22, r22
 614:	77 27       	eor	r23, r23
 616:	cb 01       	movw	r24, r22
 618:	97 f9       	bld	r25, 7
 61a:	08 95       	ret

0000061c <__mulsf3>:
 61c:	0e 94 21 03 	call	0x642	; 0x642 <__mulsf3x>
 620:	0c 94 d4 02 	jmp	0x5a8	; 0x5a8 <__fp_round>
 624:	0e 94 c6 02 	call	0x58c	; 0x58c <__fp_pscA>
 628:	38 f0       	brcs	.+14     	; 0x638 <__mulsf3+0x1c>
 62a:	0e 94 cd 02 	call	0x59a	; 0x59a <__fp_pscB>
 62e:	20 f0       	brcs	.+8      	; 0x638 <__mulsf3+0x1c>
 630:	95 23       	and	r25, r21
 632:	11 f0       	breq	.+4      	; 0x638 <__mulsf3+0x1c>
 634:	0c 94 bd 02 	jmp	0x57a	; 0x57a <__fp_inf>
 638:	0c 94 c3 02 	jmp	0x586	; 0x586 <__fp_nan>
 63c:	11 24       	eor	r1, r1
 63e:	0c 94 08 03 	jmp	0x610	; 0x610 <__fp_szero>

00000642 <__mulsf3x>:
 642:	0e 94 e5 02 	call	0x5ca	; 0x5ca <__fp_split3>
 646:	70 f3       	brcs	.-36     	; 0x624 <__mulsf3+0x8>

00000648 <__mulsf3_pse>:
 648:	95 9f       	mul	r25, r21
 64a:	c1 f3       	breq	.-16     	; 0x63c <__mulsf3+0x20>
 64c:	95 0f       	add	r25, r21
 64e:	50 e0       	ldi	r21, 0x00	; 0
 650:	55 1f       	adc	r21, r21
 652:	62 9f       	mul	r22, r18
 654:	f0 01       	movw	r30, r0
 656:	72 9f       	mul	r23, r18
 658:	bb 27       	eor	r27, r27
 65a:	f0 0d       	add	r31, r0
 65c:	b1 1d       	adc	r27, r1
 65e:	63 9f       	mul	r22, r19
 660:	aa 27       	eor	r26, r26
 662:	f0 0d       	add	r31, r0
 664:	b1 1d       	adc	r27, r1
 666:	aa 1f       	adc	r26, r26
 668:	64 9f       	mul	r22, r20
 66a:	66 27       	eor	r22, r22
 66c:	b0 0d       	add	r27, r0
 66e:	a1 1d       	adc	r26, r1
 670:	66 1f       	adc	r22, r22
 672:	82 9f       	mul	r24, r18
 674:	22 27       	eor	r18, r18
 676:	b0 0d       	add	r27, r0
 678:	a1 1d       	adc	r26, r1
 67a:	62 1f       	adc	r22, r18
 67c:	73 9f       	mul	r23, r19
 67e:	b0 0d       	add	r27, r0
 680:	a1 1d       	adc	r26, r1
 682:	62 1f       	adc	r22, r18
 684:	83 9f       	mul	r24, r19
 686:	a0 0d       	add	r26, r0
 688:	61 1d       	adc	r22, r1
 68a:	22 1f       	adc	r18, r18
 68c:	74 9f       	mul	r23, r20
 68e:	33 27       	eor	r19, r19
 690:	a0 0d       	add	r26, r0
 692:	61 1d       	adc	r22, r1
 694:	23 1f       	adc	r18, r19
 696:	84 9f       	mul	r24, r20
 698:	60 0d       	add	r22, r0
 69a:	21 1d       	adc	r18, r1
 69c:	82 2f       	mov	r24, r18
 69e:	76 2f       	mov	r23, r22
 6a0:	6a 2f       	mov	r22, r26
 6a2:	11 24       	eor	r1, r1
 6a4:	9f 57       	subi	r25, 0x7F	; 127
 6a6:	50 40       	sbci	r21, 0x00	; 0
 6a8:	9a f0       	brmi	.+38     	; 0x6d0 <__mulsf3_pse+0x88>
 6aa:	f1 f0       	breq	.+60     	; 0x6e8 <__mulsf3_pse+0xa0>
 6ac:	88 23       	and	r24, r24
 6ae:	4a f0       	brmi	.+18     	; 0x6c2 <__mulsf3_pse+0x7a>
 6b0:	ee 0f       	add	r30, r30
 6b2:	ff 1f       	adc	r31, r31
 6b4:	bb 1f       	adc	r27, r27
 6b6:	66 1f       	adc	r22, r22
 6b8:	77 1f       	adc	r23, r23
 6ba:	88 1f       	adc	r24, r24
 6bc:	91 50       	subi	r25, 0x01	; 1
 6be:	50 40       	sbci	r21, 0x00	; 0
 6c0:	a9 f7       	brne	.-22     	; 0x6ac <__mulsf3_pse+0x64>
 6c2:	9e 3f       	cpi	r25, 0xFE	; 254
 6c4:	51 05       	cpc	r21, r1
 6c6:	80 f0       	brcs	.+32     	; 0x6e8 <__mulsf3_pse+0xa0>
 6c8:	0c 94 bd 02 	jmp	0x57a	; 0x57a <__fp_inf>
 6cc:	0c 94 08 03 	jmp	0x610	; 0x610 <__fp_szero>
 6d0:	5f 3f       	cpi	r21, 0xFF	; 255
 6d2:	e4 f3       	brlt	.-8      	; 0x6cc <__mulsf3_pse+0x84>
 6d4:	98 3e       	cpi	r25, 0xE8	; 232
 6d6:	d4 f3       	brlt	.-12     	; 0x6cc <__mulsf3_pse+0x84>
 6d8:	86 95       	lsr	r24
 6da:	77 95       	ror	r23
 6dc:	67 95       	ror	r22
 6de:	b7 95       	ror	r27
 6e0:	f7 95       	ror	r31
 6e2:	e7 95       	ror	r30
 6e4:	9f 5f       	subi	r25, 0xFF	; 255
 6e6:	c1 f7       	brne	.-16     	; 0x6d8 <__mulsf3_pse+0x90>
 6e8:	fe 2b       	or	r31, r30
 6ea:	88 0f       	add	r24, r24
 6ec:	91 1d       	adc	r25, r1
 6ee:	96 95       	lsr	r25
 6f0:	87 95       	ror	r24
 6f2:	97 f9       	bld	r25, 7
 6f4:	08 95       	ret

000006f6 <atoi>:
 6f6:	fc 01       	movw	r30, r24
 6f8:	88 27       	eor	r24, r24
 6fa:	99 27       	eor	r25, r25
 6fc:	e8 94       	clt
 6fe:	21 91       	ld	r18, Z+
 700:	20 32       	cpi	r18, 0x20	; 32
 702:	e9 f3       	breq	.-6      	; 0x6fe <atoi+0x8>
 704:	29 30       	cpi	r18, 0x09	; 9
 706:	10 f0       	brcs	.+4      	; 0x70c <atoi+0x16>
 708:	2e 30       	cpi	r18, 0x0E	; 14
 70a:	c8 f3       	brcs	.-14     	; 0x6fe <atoi+0x8>
 70c:	2b 32       	cpi	r18, 0x2B	; 43
 70e:	41 f0       	breq	.+16     	; 0x720 <atoi+0x2a>
 710:	2d 32       	cpi	r18, 0x2D	; 45
 712:	39 f4       	brne	.+14     	; 0x722 <atoi+0x2c>
 714:	68 94       	set
 716:	04 c0       	rjmp	.+8      	; 0x720 <atoi+0x2a>
 718:	0e 94 a4 03 	call	0x748	; 0x748 <__mulhi_const_10>
 71c:	82 0f       	add	r24, r18
 71e:	91 1d       	adc	r25, r1
 720:	21 91       	ld	r18, Z+
 722:	20 53       	subi	r18, 0x30	; 48
 724:	2a 30       	cpi	r18, 0x0A	; 10
 726:	c0 f3       	brcs	.-16     	; 0x718 <atoi+0x22>
 728:	1e f4       	brtc	.+6      	; 0x730 <atoi+0x3a>
 72a:	90 95       	com	r25
 72c:	81 95       	neg	r24
 72e:	9f 4f       	sbci	r25, 0xFF	; 255
 730:	08 95       	ret

00000732 <__itoa_ncheck>:
 732:	bb 27       	eor	r27, r27
 734:	4a 30       	cpi	r20, 0x0A	; 10
 736:	31 f4       	brne	.+12     	; 0x744 <__itoa_ncheck+0x12>
 738:	99 23       	and	r25, r25
 73a:	22 f4       	brpl	.+8      	; 0x744 <__itoa_ncheck+0x12>
 73c:	bd e2       	ldi	r27, 0x2D	; 45
 73e:	90 95       	com	r25
 740:	81 95       	neg	r24
 742:	9f 4f       	sbci	r25, 0xFF	; 255
 744:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__utoa_common>

00000748 <__mulhi_const_10>:
 748:	7a e0       	ldi	r23, 0x0A	; 10
 74a:	97 9f       	mul	r25, r23
 74c:	90 2d       	mov	r25, r0
 74e:	87 9f       	mul	r24, r23
 750:	80 2d       	mov	r24, r0
 752:	91 0d       	add	r25, r1
 754:	11 24       	eor	r1, r1
 756:	08 95       	ret

00000758 <__utoa_ncheck>:
 758:	bb 27       	eor	r27, r27

0000075a <__utoa_common>:
 75a:	fb 01       	movw	r30, r22
 75c:	55 27       	eor	r21, r21
 75e:	aa 27       	eor	r26, r26
 760:	88 0f       	add	r24, r24
 762:	99 1f       	adc	r25, r25
 764:	aa 1f       	adc	r26, r26
 766:	a4 17       	cp	r26, r20
 768:	10 f0       	brcs	.+4      	; 0x76e <__utoa_common+0x14>
 76a:	a4 1b       	sub	r26, r20
 76c:	83 95       	inc	r24
 76e:	50 51       	subi	r21, 0x10	; 16
 770:	b9 f7       	brne	.-18     	; 0x760 <__utoa_common+0x6>
 772:	a0 5d       	subi	r26, 0xD0	; 208
 774:	aa 33       	cpi	r26, 0x3A	; 58
 776:	08 f0       	brcs	.+2      	; 0x77a <__utoa_common+0x20>
 778:	a9 5d       	subi	r26, 0xD9	; 217
 77a:	a1 93       	st	Z+, r26
 77c:	00 97       	sbiw	r24, 0x00	; 0
 77e:	79 f7       	brne	.-34     	; 0x75e <__utoa_common+0x4>
 780:	b1 11       	cpse	r27, r1
 782:	b1 93       	st	Z+, r27
 784:	11 92       	st	Z+, r1
 786:	cb 01       	movw	r24, r22
 788:	0c 94 df 05 	jmp	0xbbe	; 0xbbe <strrev>

0000078c <sprintf>:
 78c:	ae e0       	ldi	r26, 0x0E	; 14
 78e:	b0 e0       	ldi	r27, 0x00	; 0
 790:	ec ec       	ldi	r30, 0xCC	; 204
 792:	f3 e0       	ldi	r31, 0x03	; 3
 794:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__prologue_saves__+0x1c>
 798:	0d 89       	ldd	r16, Y+21	; 0x15
 79a:	1e 89       	ldd	r17, Y+22	; 0x16
 79c:	86 e0       	ldi	r24, 0x06	; 6
 79e:	8c 83       	std	Y+4, r24	; 0x04
 7a0:	1a 83       	std	Y+2, r17	; 0x02
 7a2:	09 83       	std	Y+1, r16	; 0x01
 7a4:	8f ef       	ldi	r24, 0xFF	; 255
 7a6:	9f e7       	ldi	r25, 0x7F	; 127
 7a8:	9e 83       	std	Y+6, r25	; 0x06
 7aa:	8d 83       	std	Y+5, r24	; 0x05
 7ac:	ae 01       	movw	r20, r28
 7ae:	47 5e       	subi	r20, 0xE7	; 231
 7b0:	5f 4f       	sbci	r21, 0xFF	; 255
 7b2:	6f 89       	ldd	r22, Y+23	; 0x17
 7b4:	78 8d       	ldd	r23, Y+24	; 0x18
 7b6:	ce 01       	movw	r24, r28
 7b8:	01 96       	adiw	r24, 0x01	; 1
 7ba:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <vfprintf>
 7be:	ef 81       	ldd	r30, Y+7	; 0x07
 7c0:	f8 85       	ldd	r31, Y+8	; 0x08
 7c2:	e0 0f       	add	r30, r16
 7c4:	f1 1f       	adc	r31, r17
 7c6:	10 82       	st	Z, r1
 7c8:	2e 96       	adiw	r28, 0x0e	; 14
 7ca:	e4 e0       	ldi	r30, 0x04	; 4
 7cc:	0c 94 b3 06 	jmp	0xd66	; 0xd66 <__epilogue_restores__+0x1c>

000007d0 <vfprintf>:
 7d0:	ab e0       	ldi	r26, 0x0B	; 11
 7d2:	b0 e0       	ldi	r27, 0x00	; 0
 7d4:	ee ee       	ldi	r30, 0xEE	; 238
 7d6:	f3 e0       	ldi	r31, 0x03	; 3
 7d8:	0c 94 89 06 	jmp	0xd12	; 0xd12 <__prologue_saves__>
 7dc:	6c 01       	movw	r12, r24
 7de:	7b 01       	movw	r14, r22
 7e0:	8a 01       	movw	r16, r20
 7e2:	fc 01       	movw	r30, r24
 7e4:	17 82       	std	Z+7, r1	; 0x07
 7e6:	16 82       	std	Z+6, r1	; 0x06
 7e8:	83 81       	ldd	r24, Z+3	; 0x03
 7ea:	81 ff       	sbrs	r24, 1
 7ec:	cc c1       	rjmp	.+920    	; 0xb86 <__stack+0x287>
 7ee:	ce 01       	movw	r24, r28
 7f0:	01 96       	adiw	r24, 0x01	; 1
 7f2:	3c 01       	movw	r6, r24
 7f4:	f6 01       	movw	r30, r12
 7f6:	93 81       	ldd	r25, Z+3	; 0x03
 7f8:	f7 01       	movw	r30, r14
 7fa:	93 fd       	sbrc	r25, 3
 7fc:	85 91       	lpm	r24, Z+
 7fe:	93 ff       	sbrs	r25, 3
 800:	81 91       	ld	r24, Z+
 802:	7f 01       	movw	r14, r30
 804:	88 23       	and	r24, r24
 806:	09 f4       	brne	.+2      	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 808:	ba c1       	rjmp	.+884    	; 0xb7e <__stack+0x27f>
 80a:	85 32       	cpi	r24, 0x25	; 37
 80c:	39 f4       	brne	.+14     	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 80e:	93 fd       	sbrc	r25, 3
 810:	85 91       	lpm	r24, Z+
 812:	93 ff       	sbrs	r25, 3
 814:	81 91       	ld	r24, Z+
 816:	7f 01       	movw	r14, r30
 818:	85 32       	cpi	r24, 0x25	; 37
 81a:	29 f4       	brne	.+10     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 81c:	b6 01       	movw	r22, r12
 81e:	90 e0       	ldi	r25, 0x00	; 0
 820:	0e 94 ef 05 	call	0xbde	; 0xbde <fputc>
 824:	e7 cf       	rjmp	.-50     	; 0x7f4 <vfprintf+0x24>
 826:	91 2c       	mov	r9, r1
 828:	21 2c       	mov	r2, r1
 82a:	31 2c       	mov	r3, r1
 82c:	ff e1       	ldi	r31, 0x1F	; 31
 82e:	f3 15       	cp	r31, r3
 830:	d8 f0       	brcs	.+54     	; 0x868 <__DATA_REGION_LENGTH__+0x68>
 832:	8b 32       	cpi	r24, 0x2B	; 43
 834:	79 f0       	breq	.+30     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
 836:	38 f4       	brcc	.+14     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 838:	80 32       	cpi	r24, 0x20	; 32
 83a:	79 f0       	breq	.+30     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 83c:	83 32       	cpi	r24, 0x23	; 35
 83e:	a1 f4       	brne	.+40     	; 0x868 <__DATA_REGION_LENGTH__+0x68>
 840:	23 2d       	mov	r18, r3
 842:	20 61       	ori	r18, 0x10	; 16
 844:	1d c0       	rjmp	.+58     	; 0x880 <__DATA_REGION_LENGTH__+0x80>
 846:	8d 32       	cpi	r24, 0x2D	; 45
 848:	61 f0       	breq	.+24     	; 0x862 <__DATA_REGION_LENGTH__+0x62>
 84a:	80 33       	cpi	r24, 0x30	; 48
 84c:	69 f4       	brne	.+26     	; 0x868 <__DATA_REGION_LENGTH__+0x68>
 84e:	23 2d       	mov	r18, r3
 850:	21 60       	ori	r18, 0x01	; 1
 852:	16 c0       	rjmp	.+44     	; 0x880 <__DATA_REGION_LENGTH__+0x80>
 854:	83 2d       	mov	r24, r3
 856:	82 60       	ori	r24, 0x02	; 2
 858:	38 2e       	mov	r3, r24
 85a:	e3 2d       	mov	r30, r3
 85c:	e4 60       	ori	r30, 0x04	; 4
 85e:	3e 2e       	mov	r3, r30
 860:	2a c0       	rjmp	.+84     	; 0x8b6 <__DATA_REGION_LENGTH__+0xb6>
 862:	f3 2d       	mov	r31, r3
 864:	f8 60       	ori	r31, 0x08	; 8
 866:	1d c0       	rjmp	.+58     	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
 868:	37 fc       	sbrc	r3, 7
 86a:	2d c0       	rjmp	.+90     	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
 86c:	20 ed       	ldi	r18, 0xD0	; 208
 86e:	28 0f       	add	r18, r24
 870:	2a 30       	cpi	r18, 0x0A	; 10
 872:	40 f0       	brcs	.+16     	; 0x884 <__DATA_REGION_LENGTH__+0x84>
 874:	8e 32       	cpi	r24, 0x2E	; 46
 876:	b9 f4       	brne	.+46     	; 0x8a6 <__DATA_REGION_LENGTH__+0xa6>
 878:	36 fc       	sbrc	r3, 6
 87a:	81 c1       	rjmp	.+770    	; 0xb7e <__stack+0x27f>
 87c:	23 2d       	mov	r18, r3
 87e:	20 64       	ori	r18, 0x40	; 64
 880:	32 2e       	mov	r3, r18
 882:	19 c0       	rjmp	.+50     	; 0x8b6 <__DATA_REGION_LENGTH__+0xb6>
 884:	36 fe       	sbrs	r3, 6
 886:	06 c0       	rjmp	.+12     	; 0x894 <__DATA_REGION_LENGTH__+0x94>
 888:	8a e0       	ldi	r24, 0x0A	; 10
 88a:	98 9e       	mul	r9, r24
 88c:	20 0d       	add	r18, r0
 88e:	11 24       	eor	r1, r1
 890:	92 2e       	mov	r9, r18
 892:	11 c0       	rjmp	.+34     	; 0x8b6 <__DATA_REGION_LENGTH__+0xb6>
 894:	ea e0       	ldi	r30, 0x0A	; 10
 896:	2e 9e       	mul	r2, r30
 898:	20 0d       	add	r18, r0
 89a:	11 24       	eor	r1, r1
 89c:	22 2e       	mov	r2, r18
 89e:	f3 2d       	mov	r31, r3
 8a0:	f0 62       	ori	r31, 0x20	; 32
 8a2:	3f 2e       	mov	r3, r31
 8a4:	08 c0       	rjmp	.+16     	; 0x8b6 <__DATA_REGION_LENGTH__+0xb6>
 8a6:	8c 36       	cpi	r24, 0x6C	; 108
 8a8:	21 f4       	brne	.+8      	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
 8aa:	83 2d       	mov	r24, r3
 8ac:	80 68       	ori	r24, 0x80	; 128
 8ae:	38 2e       	mov	r3, r24
 8b0:	02 c0       	rjmp	.+4      	; 0x8b6 <__DATA_REGION_LENGTH__+0xb6>
 8b2:	88 36       	cpi	r24, 0x68	; 104
 8b4:	41 f4       	brne	.+16     	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
 8b6:	f7 01       	movw	r30, r14
 8b8:	93 fd       	sbrc	r25, 3
 8ba:	85 91       	lpm	r24, Z+
 8bc:	93 ff       	sbrs	r25, 3
 8be:	81 91       	ld	r24, Z+
 8c0:	7f 01       	movw	r14, r30
 8c2:	81 11       	cpse	r24, r1
 8c4:	b3 cf       	rjmp	.-154    	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
 8c6:	98 2f       	mov	r25, r24
 8c8:	9f 7d       	andi	r25, 0xDF	; 223
 8ca:	95 54       	subi	r25, 0x45	; 69
 8cc:	93 30       	cpi	r25, 0x03	; 3
 8ce:	28 f4       	brcc	.+10     	; 0x8da <__DATA_REGION_LENGTH__+0xda>
 8d0:	0c 5f       	subi	r16, 0xFC	; 252
 8d2:	1f 4f       	sbci	r17, 0xFF	; 255
 8d4:	9f e3       	ldi	r25, 0x3F	; 63
 8d6:	99 83       	std	Y+1, r25	; 0x01
 8d8:	0d c0       	rjmp	.+26     	; 0x8f4 <__DATA_REGION_LENGTH__+0xf4>
 8da:	83 36       	cpi	r24, 0x63	; 99
 8dc:	31 f0       	breq	.+12     	; 0x8ea <__DATA_REGION_LENGTH__+0xea>
 8de:	83 37       	cpi	r24, 0x73	; 115
 8e0:	71 f0       	breq	.+28     	; 0x8fe <__DATA_REGION_LENGTH__+0xfe>
 8e2:	83 35       	cpi	r24, 0x53	; 83
 8e4:	09 f0       	breq	.+2      	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
 8e6:	59 c0       	rjmp	.+178    	; 0x99a <__stack+0x9b>
 8e8:	21 c0       	rjmp	.+66     	; 0x92c <__stack+0x2d>
 8ea:	f8 01       	movw	r30, r16
 8ec:	80 81       	ld	r24, Z
 8ee:	89 83       	std	Y+1, r24	; 0x01
 8f0:	0e 5f       	subi	r16, 0xFE	; 254
 8f2:	1f 4f       	sbci	r17, 0xFF	; 255
 8f4:	88 24       	eor	r8, r8
 8f6:	83 94       	inc	r8
 8f8:	91 2c       	mov	r9, r1
 8fa:	53 01       	movw	r10, r6
 8fc:	13 c0       	rjmp	.+38     	; 0x924 <__stack+0x25>
 8fe:	28 01       	movw	r4, r16
 900:	f2 e0       	ldi	r31, 0x02	; 2
 902:	4f 0e       	add	r4, r31
 904:	51 1c       	adc	r5, r1
 906:	f8 01       	movw	r30, r16
 908:	a0 80       	ld	r10, Z
 90a:	b1 80       	ldd	r11, Z+1	; 0x01
 90c:	36 fe       	sbrs	r3, 6
 90e:	03 c0       	rjmp	.+6      	; 0x916 <__stack+0x17>
 910:	69 2d       	mov	r22, r9
 912:	70 e0       	ldi	r23, 0x00	; 0
 914:	02 c0       	rjmp	.+4      	; 0x91a <__stack+0x1b>
 916:	6f ef       	ldi	r22, 0xFF	; 255
 918:	7f ef       	ldi	r23, 0xFF	; 255
 91a:	c5 01       	movw	r24, r10
 91c:	0e 94 d4 05 	call	0xba8	; 0xba8 <strnlen>
 920:	4c 01       	movw	r8, r24
 922:	82 01       	movw	r16, r4
 924:	f3 2d       	mov	r31, r3
 926:	ff 77       	andi	r31, 0x7F	; 127
 928:	3f 2e       	mov	r3, r31
 92a:	16 c0       	rjmp	.+44     	; 0x958 <__stack+0x59>
 92c:	28 01       	movw	r4, r16
 92e:	22 e0       	ldi	r18, 0x02	; 2
 930:	42 0e       	add	r4, r18
 932:	51 1c       	adc	r5, r1
 934:	f8 01       	movw	r30, r16
 936:	a0 80       	ld	r10, Z
 938:	b1 80       	ldd	r11, Z+1	; 0x01
 93a:	36 fe       	sbrs	r3, 6
 93c:	03 c0       	rjmp	.+6      	; 0x944 <__stack+0x45>
 93e:	69 2d       	mov	r22, r9
 940:	70 e0       	ldi	r23, 0x00	; 0
 942:	02 c0       	rjmp	.+4      	; 0x948 <__stack+0x49>
 944:	6f ef       	ldi	r22, 0xFF	; 255
 946:	7f ef       	ldi	r23, 0xFF	; 255
 948:	c5 01       	movw	r24, r10
 94a:	0e 94 c9 05 	call	0xb92	; 0xb92 <strnlen_P>
 94e:	4c 01       	movw	r8, r24
 950:	f3 2d       	mov	r31, r3
 952:	f0 68       	ori	r31, 0x80	; 128
 954:	3f 2e       	mov	r3, r31
 956:	82 01       	movw	r16, r4
 958:	33 fc       	sbrc	r3, 3
 95a:	1b c0       	rjmp	.+54     	; 0x992 <__stack+0x93>
 95c:	82 2d       	mov	r24, r2
 95e:	90 e0       	ldi	r25, 0x00	; 0
 960:	88 16       	cp	r8, r24
 962:	99 06       	cpc	r9, r25
 964:	b0 f4       	brcc	.+44     	; 0x992 <__stack+0x93>
 966:	b6 01       	movw	r22, r12
 968:	80 e2       	ldi	r24, 0x20	; 32
 96a:	90 e0       	ldi	r25, 0x00	; 0
 96c:	0e 94 ef 05 	call	0xbde	; 0xbde <fputc>
 970:	2a 94       	dec	r2
 972:	f4 cf       	rjmp	.-24     	; 0x95c <__stack+0x5d>
 974:	f5 01       	movw	r30, r10
 976:	37 fc       	sbrc	r3, 7
 978:	85 91       	lpm	r24, Z+
 97a:	37 fe       	sbrs	r3, 7
 97c:	81 91       	ld	r24, Z+
 97e:	5f 01       	movw	r10, r30
 980:	b6 01       	movw	r22, r12
 982:	90 e0       	ldi	r25, 0x00	; 0
 984:	0e 94 ef 05 	call	0xbde	; 0xbde <fputc>
 988:	21 10       	cpse	r2, r1
 98a:	2a 94       	dec	r2
 98c:	21 e0       	ldi	r18, 0x01	; 1
 98e:	82 1a       	sub	r8, r18
 990:	91 08       	sbc	r9, r1
 992:	81 14       	cp	r8, r1
 994:	91 04       	cpc	r9, r1
 996:	71 f7       	brne	.-36     	; 0x974 <__stack+0x75>
 998:	e8 c0       	rjmp	.+464    	; 0xb6a <__stack+0x26b>
 99a:	84 36       	cpi	r24, 0x64	; 100
 99c:	11 f0       	breq	.+4      	; 0x9a2 <__stack+0xa3>
 99e:	89 36       	cpi	r24, 0x69	; 105
 9a0:	41 f5       	brne	.+80     	; 0x9f2 <__stack+0xf3>
 9a2:	f8 01       	movw	r30, r16
 9a4:	37 fe       	sbrs	r3, 7
 9a6:	07 c0       	rjmp	.+14     	; 0x9b6 <__stack+0xb7>
 9a8:	60 81       	ld	r22, Z
 9aa:	71 81       	ldd	r23, Z+1	; 0x01
 9ac:	82 81       	ldd	r24, Z+2	; 0x02
 9ae:	93 81       	ldd	r25, Z+3	; 0x03
 9b0:	0c 5f       	subi	r16, 0xFC	; 252
 9b2:	1f 4f       	sbci	r17, 0xFF	; 255
 9b4:	08 c0       	rjmp	.+16     	; 0x9c6 <__stack+0xc7>
 9b6:	60 81       	ld	r22, Z
 9b8:	71 81       	ldd	r23, Z+1	; 0x01
 9ba:	07 2e       	mov	r0, r23
 9bc:	00 0c       	add	r0, r0
 9be:	88 0b       	sbc	r24, r24
 9c0:	99 0b       	sbc	r25, r25
 9c2:	0e 5f       	subi	r16, 0xFE	; 254
 9c4:	1f 4f       	sbci	r17, 0xFF	; 255
 9c6:	f3 2d       	mov	r31, r3
 9c8:	ff 76       	andi	r31, 0x6F	; 111
 9ca:	3f 2e       	mov	r3, r31
 9cc:	97 ff       	sbrs	r25, 7
 9ce:	09 c0       	rjmp	.+18     	; 0x9e2 <__stack+0xe3>
 9d0:	90 95       	com	r25
 9d2:	80 95       	com	r24
 9d4:	70 95       	com	r23
 9d6:	61 95       	neg	r22
 9d8:	7f 4f       	sbci	r23, 0xFF	; 255
 9da:	8f 4f       	sbci	r24, 0xFF	; 255
 9dc:	9f 4f       	sbci	r25, 0xFF	; 255
 9de:	f0 68       	ori	r31, 0x80	; 128
 9e0:	3f 2e       	mov	r3, r31
 9e2:	2a e0       	ldi	r18, 0x0A	; 10
 9e4:	30 e0       	ldi	r19, 0x00	; 0
 9e6:	a3 01       	movw	r20, r6
 9e8:	0e 94 2b 06 	call	0xc56	; 0xc56 <__ultoa_invert>
 9ec:	88 2e       	mov	r8, r24
 9ee:	86 18       	sub	r8, r6
 9f0:	45 c0       	rjmp	.+138    	; 0xa7c <__stack+0x17d>
 9f2:	85 37       	cpi	r24, 0x75	; 117
 9f4:	31 f4       	brne	.+12     	; 0xa02 <__stack+0x103>
 9f6:	23 2d       	mov	r18, r3
 9f8:	2f 7e       	andi	r18, 0xEF	; 239
 9fa:	b2 2e       	mov	r11, r18
 9fc:	2a e0       	ldi	r18, 0x0A	; 10
 9fe:	30 e0       	ldi	r19, 0x00	; 0
 a00:	25 c0       	rjmp	.+74     	; 0xa4c <__stack+0x14d>
 a02:	93 2d       	mov	r25, r3
 a04:	99 7f       	andi	r25, 0xF9	; 249
 a06:	b9 2e       	mov	r11, r25
 a08:	8f 36       	cpi	r24, 0x6F	; 111
 a0a:	c1 f0       	breq	.+48     	; 0xa3c <__stack+0x13d>
 a0c:	18 f4       	brcc	.+6      	; 0xa14 <__stack+0x115>
 a0e:	88 35       	cpi	r24, 0x58	; 88
 a10:	79 f0       	breq	.+30     	; 0xa30 <__stack+0x131>
 a12:	b5 c0       	rjmp	.+362    	; 0xb7e <__stack+0x27f>
 a14:	80 37       	cpi	r24, 0x70	; 112
 a16:	19 f0       	breq	.+6      	; 0xa1e <__stack+0x11f>
 a18:	88 37       	cpi	r24, 0x78	; 120
 a1a:	21 f0       	breq	.+8      	; 0xa24 <__stack+0x125>
 a1c:	b0 c0       	rjmp	.+352    	; 0xb7e <__stack+0x27f>
 a1e:	e9 2f       	mov	r30, r25
 a20:	e0 61       	ori	r30, 0x10	; 16
 a22:	be 2e       	mov	r11, r30
 a24:	b4 fe       	sbrs	r11, 4
 a26:	0d c0       	rjmp	.+26     	; 0xa42 <__stack+0x143>
 a28:	fb 2d       	mov	r31, r11
 a2a:	f4 60       	ori	r31, 0x04	; 4
 a2c:	bf 2e       	mov	r11, r31
 a2e:	09 c0       	rjmp	.+18     	; 0xa42 <__stack+0x143>
 a30:	34 fe       	sbrs	r3, 4
 a32:	0a c0       	rjmp	.+20     	; 0xa48 <__stack+0x149>
 a34:	29 2f       	mov	r18, r25
 a36:	26 60       	ori	r18, 0x06	; 6
 a38:	b2 2e       	mov	r11, r18
 a3a:	06 c0       	rjmp	.+12     	; 0xa48 <__stack+0x149>
 a3c:	28 e0       	ldi	r18, 0x08	; 8
 a3e:	30 e0       	ldi	r19, 0x00	; 0
 a40:	05 c0       	rjmp	.+10     	; 0xa4c <__stack+0x14d>
 a42:	20 e1       	ldi	r18, 0x10	; 16
 a44:	30 e0       	ldi	r19, 0x00	; 0
 a46:	02 c0       	rjmp	.+4      	; 0xa4c <__stack+0x14d>
 a48:	20 e1       	ldi	r18, 0x10	; 16
 a4a:	32 e0       	ldi	r19, 0x02	; 2
 a4c:	f8 01       	movw	r30, r16
 a4e:	b7 fe       	sbrs	r11, 7
 a50:	07 c0       	rjmp	.+14     	; 0xa60 <__stack+0x161>
 a52:	60 81       	ld	r22, Z
 a54:	71 81       	ldd	r23, Z+1	; 0x01
 a56:	82 81       	ldd	r24, Z+2	; 0x02
 a58:	93 81       	ldd	r25, Z+3	; 0x03
 a5a:	0c 5f       	subi	r16, 0xFC	; 252
 a5c:	1f 4f       	sbci	r17, 0xFF	; 255
 a5e:	06 c0       	rjmp	.+12     	; 0xa6c <__stack+0x16d>
 a60:	60 81       	ld	r22, Z
 a62:	71 81       	ldd	r23, Z+1	; 0x01
 a64:	80 e0       	ldi	r24, 0x00	; 0
 a66:	90 e0       	ldi	r25, 0x00	; 0
 a68:	0e 5f       	subi	r16, 0xFE	; 254
 a6a:	1f 4f       	sbci	r17, 0xFF	; 255
 a6c:	a3 01       	movw	r20, r6
 a6e:	0e 94 2b 06 	call	0xc56	; 0xc56 <__ultoa_invert>
 a72:	88 2e       	mov	r8, r24
 a74:	86 18       	sub	r8, r6
 a76:	fb 2d       	mov	r31, r11
 a78:	ff 77       	andi	r31, 0x7F	; 127
 a7a:	3f 2e       	mov	r3, r31
 a7c:	36 fe       	sbrs	r3, 6
 a7e:	0d c0       	rjmp	.+26     	; 0xa9a <__stack+0x19b>
 a80:	23 2d       	mov	r18, r3
 a82:	2e 7f       	andi	r18, 0xFE	; 254
 a84:	a2 2e       	mov	r10, r18
 a86:	89 14       	cp	r8, r9
 a88:	58 f4       	brcc	.+22     	; 0xaa0 <__stack+0x1a1>
 a8a:	34 fe       	sbrs	r3, 4
 a8c:	0b c0       	rjmp	.+22     	; 0xaa4 <__stack+0x1a5>
 a8e:	32 fc       	sbrc	r3, 2
 a90:	09 c0       	rjmp	.+18     	; 0xaa4 <__stack+0x1a5>
 a92:	83 2d       	mov	r24, r3
 a94:	8e 7e       	andi	r24, 0xEE	; 238
 a96:	a8 2e       	mov	r10, r24
 a98:	05 c0       	rjmp	.+10     	; 0xaa4 <__stack+0x1a5>
 a9a:	b8 2c       	mov	r11, r8
 a9c:	a3 2c       	mov	r10, r3
 a9e:	03 c0       	rjmp	.+6      	; 0xaa6 <__stack+0x1a7>
 aa0:	b8 2c       	mov	r11, r8
 aa2:	01 c0       	rjmp	.+2      	; 0xaa6 <__stack+0x1a7>
 aa4:	b9 2c       	mov	r11, r9
 aa6:	a4 fe       	sbrs	r10, 4
 aa8:	0f c0       	rjmp	.+30     	; 0xac8 <__stack+0x1c9>
 aaa:	fe 01       	movw	r30, r28
 aac:	e8 0d       	add	r30, r8
 aae:	f1 1d       	adc	r31, r1
 ab0:	80 81       	ld	r24, Z
 ab2:	80 33       	cpi	r24, 0x30	; 48
 ab4:	21 f4       	brne	.+8      	; 0xabe <__stack+0x1bf>
 ab6:	9a 2d       	mov	r25, r10
 ab8:	99 7e       	andi	r25, 0xE9	; 233
 aba:	a9 2e       	mov	r10, r25
 abc:	09 c0       	rjmp	.+18     	; 0xad0 <__stack+0x1d1>
 abe:	a2 fe       	sbrs	r10, 2
 ac0:	06 c0       	rjmp	.+12     	; 0xace <__stack+0x1cf>
 ac2:	b3 94       	inc	r11
 ac4:	b3 94       	inc	r11
 ac6:	04 c0       	rjmp	.+8      	; 0xad0 <__stack+0x1d1>
 ac8:	8a 2d       	mov	r24, r10
 aca:	86 78       	andi	r24, 0x86	; 134
 acc:	09 f0       	breq	.+2      	; 0xad0 <__stack+0x1d1>
 ace:	b3 94       	inc	r11
 ad0:	a3 fc       	sbrc	r10, 3
 ad2:	11 c0       	rjmp	.+34     	; 0xaf6 <__stack+0x1f7>
 ad4:	a0 fe       	sbrs	r10, 0
 ad6:	06 c0       	rjmp	.+12     	; 0xae4 <__stack+0x1e5>
 ad8:	b2 14       	cp	r11, r2
 ada:	88 f4       	brcc	.+34     	; 0xafe <__stack+0x1ff>
 adc:	28 0c       	add	r2, r8
 ade:	92 2c       	mov	r9, r2
 ae0:	9b 18       	sub	r9, r11
 ae2:	0e c0       	rjmp	.+28     	; 0xb00 <__stack+0x201>
 ae4:	b2 14       	cp	r11, r2
 ae6:	60 f4       	brcc	.+24     	; 0xb00 <__stack+0x201>
 ae8:	b6 01       	movw	r22, r12
 aea:	80 e2       	ldi	r24, 0x20	; 32
 aec:	90 e0       	ldi	r25, 0x00	; 0
 aee:	0e 94 ef 05 	call	0xbde	; 0xbde <fputc>
 af2:	b3 94       	inc	r11
 af4:	f7 cf       	rjmp	.-18     	; 0xae4 <__stack+0x1e5>
 af6:	b2 14       	cp	r11, r2
 af8:	18 f4       	brcc	.+6      	; 0xb00 <__stack+0x201>
 afa:	2b 18       	sub	r2, r11
 afc:	02 c0       	rjmp	.+4      	; 0xb02 <__stack+0x203>
 afe:	98 2c       	mov	r9, r8
 b00:	21 2c       	mov	r2, r1
 b02:	a4 fe       	sbrs	r10, 4
 b04:	10 c0       	rjmp	.+32     	; 0xb26 <__stack+0x227>
 b06:	b6 01       	movw	r22, r12
 b08:	80 e3       	ldi	r24, 0x30	; 48
 b0a:	90 e0       	ldi	r25, 0x00	; 0
 b0c:	0e 94 ef 05 	call	0xbde	; 0xbde <fputc>
 b10:	a2 fe       	sbrs	r10, 2
 b12:	17 c0       	rjmp	.+46     	; 0xb42 <__stack+0x243>
 b14:	a1 fc       	sbrc	r10, 1
 b16:	03 c0       	rjmp	.+6      	; 0xb1e <__stack+0x21f>
 b18:	88 e7       	ldi	r24, 0x78	; 120
 b1a:	90 e0       	ldi	r25, 0x00	; 0
 b1c:	02 c0       	rjmp	.+4      	; 0xb22 <__stack+0x223>
 b1e:	88 e5       	ldi	r24, 0x58	; 88
 b20:	90 e0       	ldi	r25, 0x00	; 0
 b22:	b6 01       	movw	r22, r12
 b24:	0c c0       	rjmp	.+24     	; 0xb3e <__stack+0x23f>
 b26:	8a 2d       	mov	r24, r10
 b28:	86 78       	andi	r24, 0x86	; 134
 b2a:	59 f0       	breq	.+22     	; 0xb42 <__stack+0x243>
 b2c:	a1 fe       	sbrs	r10, 1
 b2e:	02 c0       	rjmp	.+4      	; 0xb34 <__stack+0x235>
 b30:	8b e2       	ldi	r24, 0x2B	; 43
 b32:	01 c0       	rjmp	.+2      	; 0xb36 <__stack+0x237>
 b34:	80 e2       	ldi	r24, 0x20	; 32
 b36:	a7 fc       	sbrc	r10, 7
 b38:	8d e2       	ldi	r24, 0x2D	; 45
 b3a:	b6 01       	movw	r22, r12
 b3c:	90 e0       	ldi	r25, 0x00	; 0
 b3e:	0e 94 ef 05 	call	0xbde	; 0xbde <fputc>
 b42:	89 14       	cp	r8, r9
 b44:	38 f4       	brcc	.+14     	; 0xb54 <__stack+0x255>
 b46:	b6 01       	movw	r22, r12
 b48:	80 e3       	ldi	r24, 0x30	; 48
 b4a:	90 e0       	ldi	r25, 0x00	; 0
 b4c:	0e 94 ef 05 	call	0xbde	; 0xbde <fputc>
 b50:	9a 94       	dec	r9
 b52:	f7 cf       	rjmp	.-18     	; 0xb42 <__stack+0x243>
 b54:	8a 94       	dec	r8
 b56:	f3 01       	movw	r30, r6
 b58:	e8 0d       	add	r30, r8
 b5a:	f1 1d       	adc	r31, r1
 b5c:	80 81       	ld	r24, Z
 b5e:	b6 01       	movw	r22, r12
 b60:	90 e0       	ldi	r25, 0x00	; 0
 b62:	0e 94 ef 05 	call	0xbde	; 0xbde <fputc>
 b66:	81 10       	cpse	r8, r1
 b68:	f5 cf       	rjmp	.-22     	; 0xb54 <__stack+0x255>
 b6a:	22 20       	and	r2, r2
 b6c:	09 f4       	brne	.+2      	; 0xb70 <__stack+0x271>
 b6e:	42 ce       	rjmp	.-892    	; 0x7f4 <vfprintf+0x24>
 b70:	b6 01       	movw	r22, r12
 b72:	80 e2       	ldi	r24, 0x20	; 32
 b74:	90 e0       	ldi	r25, 0x00	; 0
 b76:	0e 94 ef 05 	call	0xbde	; 0xbde <fputc>
 b7a:	2a 94       	dec	r2
 b7c:	f6 cf       	rjmp	.-20     	; 0xb6a <__stack+0x26b>
 b7e:	f6 01       	movw	r30, r12
 b80:	86 81       	ldd	r24, Z+6	; 0x06
 b82:	97 81       	ldd	r25, Z+7	; 0x07
 b84:	02 c0       	rjmp	.+4      	; 0xb8a <__stack+0x28b>
 b86:	8f ef       	ldi	r24, 0xFF	; 255
 b88:	9f ef       	ldi	r25, 0xFF	; 255
 b8a:	2b 96       	adiw	r28, 0x0b	; 11
 b8c:	e2 e1       	ldi	r30, 0x12	; 18
 b8e:	0c 94 a5 06 	jmp	0xd4a	; 0xd4a <__epilogue_restores__>

00000b92 <strnlen_P>:
 b92:	fc 01       	movw	r30, r24
 b94:	05 90       	lpm	r0, Z+
 b96:	61 50       	subi	r22, 0x01	; 1
 b98:	70 40       	sbci	r23, 0x00	; 0
 b9a:	01 10       	cpse	r0, r1
 b9c:	d8 f7       	brcc	.-10     	; 0xb94 <strnlen_P+0x2>
 b9e:	80 95       	com	r24
 ba0:	90 95       	com	r25
 ba2:	8e 0f       	add	r24, r30
 ba4:	9f 1f       	adc	r25, r31
 ba6:	08 95       	ret

00000ba8 <strnlen>:
 ba8:	fc 01       	movw	r30, r24
 baa:	61 50       	subi	r22, 0x01	; 1
 bac:	70 40       	sbci	r23, 0x00	; 0
 bae:	01 90       	ld	r0, Z+
 bb0:	01 10       	cpse	r0, r1
 bb2:	d8 f7       	brcc	.-10     	; 0xbaa <strnlen+0x2>
 bb4:	80 95       	com	r24
 bb6:	90 95       	com	r25
 bb8:	8e 0f       	add	r24, r30
 bba:	9f 1f       	adc	r25, r31
 bbc:	08 95       	ret

00000bbe <strrev>:
 bbe:	dc 01       	movw	r26, r24
 bc0:	fc 01       	movw	r30, r24
 bc2:	67 2f       	mov	r22, r23
 bc4:	71 91       	ld	r23, Z+
 bc6:	77 23       	and	r23, r23
 bc8:	e1 f7       	brne	.-8      	; 0xbc2 <strrev+0x4>
 bca:	32 97       	sbiw	r30, 0x02	; 2
 bcc:	04 c0       	rjmp	.+8      	; 0xbd6 <strrev+0x18>
 bce:	7c 91       	ld	r23, X
 bd0:	6d 93       	st	X+, r22
 bd2:	70 83       	st	Z, r23
 bd4:	62 91       	ld	r22, -Z
 bd6:	ae 17       	cp	r26, r30
 bd8:	bf 07       	cpc	r27, r31
 bda:	c8 f3       	brcs	.-14     	; 0xbce <strrev+0x10>
 bdc:	08 95       	ret

00000bde <fputc>:
 bde:	0f 93       	push	r16
 be0:	1f 93       	push	r17
 be2:	cf 93       	push	r28
 be4:	df 93       	push	r29
 be6:	fb 01       	movw	r30, r22
 be8:	23 81       	ldd	r18, Z+3	; 0x03
 bea:	21 fd       	sbrc	r18, 1
 bec:	03 c0       	rjmp	.+6      	; 0xbf4 <fputc+0x16>
 bee:	8f ef       	ldi	r24, 0xFF	; 255
 bf0:	9f ef       	ldi	r25, 0xFF	; 255
 bf2:	2c c0       	rjmp	.+88     	; 0xc4c <fputc+0x6e>
 bf4:	22 ff       	sbrs	r18, 2
 bf6:	16 c0       	rjmp	.+44     	; 0xc24 <fputc+0x46>
 bf8:	46 81       	ldd	r20, Z+6	; 0x06
 bfa:	57 81       	ldd	r21, Z+7	; 0x07
 bfc:	24 81       	ldd	r18, Z+4	; 0x04
 bfe:	35 81       	ldd	r19, Z+5	; 0x05
 c00:	42 17       	cp	r20, r18
 c02:	53 07       	cpc	r21, r19
 c04:	44 f4       	brge	.+16     	; 0xc16 <fputc+0x38>
 c06:	a0 81       	ld	r26, Z
 c08:	b1 81       	ldd	r27, Z+1	; 0x01
 c0a:	9d 01       	movw	r18, r26
 c0c:	2f 5f       	subi	r18, 0xFF	; 255
 c0e:	3f 4f       	sbci	r19, 0xFF	; 255
 c10:	31 83       	std	Z+1, r19	; 0x01
 c12:	20 83       	st	Z, r18
 c14:	8c 93       	st	X, r24
 c16:	26 81       	ldd	r18, Z+6	; 0x06
 c18:	37 81       	ldd	r19, Z+7	; 0x07
 c1a:	2f 5f       	subi	r18, 0xFF	; 255
 c1c:	3f 4f       	sbci	r19, 0xFF	; 255
 c1e:	37 83       	std	Z+7, r19	; 0x07
 c20:	26 83       	std	Z+6, r18	; 0x06
 c22:	14 c0       	rjmp	.+40     	; 0xc4c <fputc+0x6e>
 c24:	8b 01       	movw	r16, r22
 c26:	ec 01       	movw	r28, r24
 c28:	fb 01       	movw	r30, r22
 c2a:	00 84       	ldd	r0, Z+8	; 0x08
 c2c:	f1 85       	ldd	r31, Z+9	; 0x09
 c2e:	e0 2d       	mov	r30, r0
 c30:	09 95       	icall
 c32:	89 2b       	or	r24, r25
 c34:	e1 f6       	brne	.-72     	; 0xbee <fputc+0x10>
 c36:	d8 01       	movw	r26, r16
 c38:	16 96       	adiw	r26, 0x06	; 6
 c3a:	8d 91       	ld	r24, X+
 c3c:	9c 91       	ld	r25, X
 c3e:	17 97       	sbiw	r26, 0x07	; 7
 c40:	01 96       	adiw	r24, 0x01	; 1
 c42:	17 96       	adiw	r26, 0x07	; 7
 c44:	9c 93       	st	X, r25
 c46:	8e 93       	st	-X, r24
 c48:	16 97       	sbiw	r26, 0x06	; 6
 c4a:	ce 01       	movw	r24, r28
 c4c:	df 91       	pop	r29
 c4e:	cf 91       	pop	r28
 c50:	1f 91       	pop	r17
 c52:	0f 91       	pop	r16
 c54:	08 95       	ret

00000c56 <__ultoa_invert>:
 c56:	fa 01       	movw	r30, r20
 c58:	aa 27       	eor	r26, r26
 c5a:	28 30       	cpi	r18, 0x08	; 8
 c5c:	51 f1       	breq	.+84     	; 0xcb2 <__ultoa_invert+0x5c>
 c5e:	20 31       	cpi	r18, 0x10	; 16
 c60:	81 f1       	breq	.+96     	; 0xcc2 <__ultoa_invert+0x6c>
 c62:	e8 94       	clt
 c64:	6f 93       	push	r22
 c66:	6e 7f       	andi	r22, 0xFE	; 254
 c68:	6e 5f       	subi	r22, 0xFE	; 254
 c6a:	7f 4f       	sbci	r23, 0xFF	; 255
 c6c:	8f 4f       	sbci	r24, 0xFF	; 255
 c6e:	9f 4f       	sbci	r25, 0xFF	; 255
 c70:	af 4f       	sbci	r26, 0xFF	; 255
 c72:	b1 e0       	ldi	r27, 0x01	; 1
 c74:	3e d0       	rcall	.+124    	; 0xcf2 <__ultoa_invert+0x9c>
 c76:	b4 e0       	ldi	r27, 0x04	; 4
 c78:	3c d0       	rcall	.+120    	; 0xcf2 <__ultoa_invert+0x9c>
 c7a:	67 0f       	add	r22, r23
 c7c:	78 1f       	adc	r23, r24
 c7e:	89 1f       	adc	r24, r25
 c80:	9a 1f       	adc	r25, r26
 c82:	a1 1d       	adc	r26, r1
 c84:	68 0f       	add	r22, r24
 c86:	79 1f       	adc	r23, r25
 c88:	8a 1f       	adc	r24, r26
 c8a:	91 1d       	adc	r25, r1
 c8c:	a1 1d       	adc	r26, r1
 c8e:	6a 0f       	add	r22, r26
 c90:	71 1d       	adc	r23, r1
 c92:	81 1d       	adc	r24, r1
 c94:	91 1d       	adc	r25, r1
 c96:	a1 1d       	adc	r26, r1
 c98:	20 d0       	rcall	.+64     	; 0xcda <__ultoa_invert+0x84>
 c9a:	09 f4       	brne	.+2      	; 0xc9e <__ultoa_invert+0x48>
 c9c:	68 94       	set
 c9e:	3f 91       	pop	r19
 ca0:	2a e0       	ldi	r18, 0x0A	; 10
 ca2:	26 9f       	mul	r18, r22
 ca4:	11 24       	eor	r1, r1
 ca6:	30 19       	sub	r19, r0
 ca8:	30 5d       	subi	r19, 0xD0	; 208
 caa:	31 93       	st	Z+, r19
 cac:	de f6       	brtc	.-74     	; 0xc64 <__ultoa_invert+0xe>
 cae:	cf 01       	movw	r24, r30
 cb0:	08 95       	ret
 cb2:	46 2f       	mov	r20, r22
 cb4:	47 70       	andi	r20, 0x07	; 7
 cb6:	40 5d       	subi	r20, 0xD0	; 208
 cb8:	41 93       	st	Z+, r20
 cba:	b3 e0       	ldi	r27, 0x03	; 3
 cbc:	0f d0       	rcall	.+30     	; 0xcdc <__ultoa_invert+0x86>
 cbe:	c9 f7       	brne	.-14     	; 0xcb2 <__ultoa_invert+0x5c>
 cc0:	f6 cf       	rjmp	.-20     	; 0xcae <__ultoa_invert+0x58>
 cc2:	46 2f       	mov	r20, r22
 cc4:	4f 70       	andi	r20, 0x0F	; 15
 cc6:	40 5d       	subi	r20, 0xD0	; 208
 cc8:	4a 33       	cpi	r20, 0x3A	; 58
 cca:	18 f0       	brcs	.+6      	; 0xcd2 <__ultoa_invert+0x7c>
 ccc:	49 5d       	subi	r20, 0xD9	; 217
 cce:	31 fd       	sbrc	r19, 1
 cd0:	40 52       	subi	r20, 0x20	; 32
 cd2:	41 93       	st	Z+, r20
 cd4:	02 d0       	rcall	.+4      	; 0xcda <__ultoa_invert+0x84>
 cd6:	a9 f7       	brne	.-22     	; 0xcc2 <__ultoa_invert+0x6c>
 cd8:	ea cf       	rjmp	.-44     	; 0xcae <__ultoa_invert+0x58>
 cda:	b4 e0       	ldi	r27, 0x04	; 4
 cdc:	a6 95       	lsr	r26
 cde:	97 95       	ror	r25
 ce0:	87 95       	ror	r24
 ce2:	77 95       	ror	r23
 ce4:	67 95       	ror	r22
 ce6:	ba 95       	dec	r27
 ce8:	c9 f7       	brne	.-14     	; 0xcdc <__ultoa_invert+0x86>
 cea:	00 97       	sbiw	r24, 0x00	; 0
 cec:	61 05       	cpc	r22, r1
 cee:	71 05       	cpc	r23, r1
 cf0:	08 95       	ret
 cf2:	9b 01       	movw	r18, r22
 cf4:	ac 01       	movw	r20, r24
 cf6:	0a 2e       	mov	r0, r26
 cf8:	06 94       	lsr	r0
 cfa:	57 95       	ror	r21
 cfc:	47 95       	ror	r20
 cfe:	37 95       	ror	r19
 d00:	27 95       	ror	r18
 d02:	ba 95       	dec	r27
 d04:	c9 f7       	brne	.-14     	; 0xcf8 <__ultoa_invert+0xa2>
 d06:	62 0f       	add	r22, r18
 d08:	73 1f       	adc	r23, r19
 d0a:	84 1f       	adc	r24, r20
 d0c:	95 1f       	adc	r25, r21
 d0e:	a0 1d       	adc	r26, r0
 d10:	08 95       	ret

00000d12 <__prologue_saves__>:
 d12:	2f 92       	push	r2
 d14:	3f 92       	push	r3
 d16:	4f 92       	push	r4
 d18:	5f 92       	push	r5
 d1a:	6f 92       	push	r6
 d1c:	7f 92       	push	r7
 d1e:	8f 92       	push	r8
 d20:	9f 92       	push	r9
 d22:	af 92       	push	r10
 d24:	bf 92       	push	r11
 d26:	cf 92       	push	r12
 d28:	df 92       	push	r13
 d2a:	ef 92       	push	r14
 d2c:	ff 92       	push	r15
 d2e:	0f 93       	push	r16
 d30:	1f 93       	push	r17
 d32:	cf 93       	push	r28
 d34:	df 93       	push	r29
 d36:	cd b7       	in	r28, 0x3d	; 61
 d38:	de b7       	in	r29, 0x3e	; 62
 d3a:	ca 1b       	sub	r28, r26
 d3c:	db 0b       	sbc	r29, r27
 d3e:	0f b6       	in	r0, 0x3f	; 63
 d40:	f8 94       	cli
 d42:	de bf       	out	0x3e, r29	; 62
 d44:	0f be       	out	0x3f, r0	; 63
 d46:	cd bf       	out	0x3d, r28	; 61
 d48:	09 94       	ijmp

00000d4a <__epilogue_restores__>:
 d4a:	2a 88       	ldd	r2, Y+18	; 0x12
 d4c:	39 88       	ldd	r3, Y+17	; 0x11
 d4e:	48 88       	ldd	r4, Y+16	; 0x10
 d50:	5f 84       	ldd	r5, Y+15	; 0x0f
 d52:	6e 84       	ldd	r6, Y+14	; 0x0e
 d54:	7d 84       	ldd	r7, Y+13	; 0x0d
 d56:	8c 84       	ldd	r8, Y+12	; 0x0c
 d58:	9b 84       	ldd	r9, Y+11	; 0x0b
 d5a:	aa 84       	ldd	r10, Y+10	; 0x0a
 d5c:	b9 84       	ldd	r11, Y+9	; 0x09
 d5e:	c8 84       	ldd	r12, Y+8	; 0x08
 d60:	df 80       	ldd	r13, Y+7	; 0x07
 d62:	ee 80       	ldd	r14, Y+6	; 0x06
 d64:	fd 80       	ldd	r15, Y+5	; 0x05
 d66:	0c 81       	ldd	r16, Y+4	; 0x04
 d68:	1b 81       	ldd	r17, Y+3	; 0x03
 d6a:	aa 81       	ldd	r26, Y+2	; 0x02
 d6c:	b9 81       	ldd	r27, Y+1	; 0x01
 d6e:	ce 0f       	add	r28, r30
 d70:	d1 1d       	adc	r29, r1
 d72:	0f b6       	in	r0, 0x3f	; 63
 d74:	f8 94       	cli
 d76:	de bf       	out	0x3e, r29	; 62
 d78:	0f be       	out	0x3f, r0	; 63
 d7a:	cd bf       	out	0x3d, r28	; 61
 d7c:	ed 01       	movw	r28, r26
 d7e:	08 95       	ret

00000d80 <_exit>:
 d80:	f8 94       	cli

00000d82 <__stop_program>:
 d82:	ff cf       	rjmp	.-2      	; 0xd82 <__stop_program>
